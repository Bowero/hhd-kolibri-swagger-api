<?php
/**
 * AcquisitionObjectAssignment
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web API Swagger specification Kolibri24 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.1.778.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.17
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;
use \Swagger\Client\ObjectSerializer;

/**
 * AcquisitionObjectAssignment Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AcquisitionObjectAssignment extends RootEntity 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AcquisitionObjectAssignment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'summary' => 'string',
        'address' => '\Swagger\Client\Model\Address',
        'status' => '\Swagger\Client\Model\AcquisitionStatus',
        'linked_acquisition_assignment' => '\Swagger\Client\Model\LinkedAssignment',
        'agricultural_subtype_other' => '\Swagger\Client\Model\AgriculturalSubtypeOther',
        'air_treatments' => '\Swagger\Client\Model\AirTreatment[]',
        'apartment_characteristic' => '\Swagger\Client\Model\ApartmentCharacteristic',
        'apartment_sort' => '\Swagger\Client\Model\ApartmentSort',
        'approval_marks' => '\Swagger\Client\Model\Certification[]',
        'beverages_count_of_seats' => 'int',
        'beverages_hospitality_industry_area' => '\Swagger\Client\Model\Size',
        'beverages_non_hospitality_industry_area' => '\Swagger\Client\Model\Size',
        'boiler_fuel' => '\Swagger\Client\Model\EnergySource',
        'boiler_property' => '\Swagger\Client\Model\Ownership',
        'boiler_type' => 'string',
        'boiler_year_of_construction' => 'int',
        'building_capacity' => '\Swagger\Client\Model\Size',
        'building_capacity_area_percentage' => 'float',
        'building_layer' => 'int',
        'building_layer_amount' => 'int',
        'business_expenses' => '\Swagger\Client\Model\BusinessExpenses',
        'company_listings' => '\Swagger\Client\Model\CompanyListing[]',
        'business_rights' => '\Swagger\Client\Model\BusinessRights',
        'b_vo' => '\Swagger\Client\Model\Size',
        'capacity' => 'int',
        'comfort_quality' => '\Swagger\Client\Model\ComfortQuality',
        'company_name' => 'string',
        'complete_space' => '\Swagger\Client\Model\Size',
        'construction_options' => '\Swagger\Client\Model\ConstructionOption[]',
        'building_related_outdoor_space' => '\Swagger\Client\Model\Size',
        'contents' => '\Swagger\Client\Model\Size',
        'count_of_hotelrooms' => 'int',
        'current_destinationd' => '\Swagger\Client\Model\TranslatedText[]',
        'current_usages' => '\Swagger\Client\Model\TranslatedText[]',
        'description' => '\Swagger\Client\Model\TranslatedText[]',
        'display_name' => 'string',
        'drainage' => '\Swagger\Client\Model\Drainage',
        'drainage_horse_rack' => 'bool',
        'energy_label' => '\Swagger\Client\Model\EnergyLabel',
        'exclusive_status' => '\Swagger\Client\Model\ExclusiveStatus',
        'external_storage' => '\Swagger\Client\Model\Size',
        'facilities' => '\Swagger\Client\Model\OutdoorAreaFacility[]',
        'fastfood_count_of_seats' => 'int',
        'fastfood_hospitality_industry_area' => '\Swagger\Client\Model\Size',
        'features' => '\Swagger\Client\Model\FeatureCategory[]',
        'floor_level' => 'int',
        'floor_load' => 'float',
        'floors' => '\Swagger\Client\Model\Floor[]',
        'free_height' => 'float',
        'free_overcurrent' => 'float',
        'front_width' => 'float',
        'garages' => '\Swagger\Client\Model\Garage[]',
        'gardens' => '\Swagger\Client\Model\Garden[]',
        'ground_property' => '\Swagger\Client\Model\GroundProperty',
        'ground_usage' => '\Swagger\Client\Model\GroundUsage',
        'alv_main_plot_destination' => '\Swagger\Client\Model\AlvBuildingPlotDestination',
        'has_cable_tv' => 'bool',
        'has_combi_boiler' => 'bool',
        'has_drainage' => 'bool',
        'has_electricity_connection' => 'bool',
        'has_electric_power' => 'bool',
        'has_gas_connection' => 'bool',
        'has_hygiene_barrier' => 'bool',
        'has_internet_connection' => 'bool',
        'has_office_space' => 'bool',
        'has_open_porch' => 'bool',
        'has_own_entrance' => 'bool',
        'has_owners_association_buildings_insurance' => 'bool',
        'has_owners_association_maintenance_expectations' => 'bool',
        'has_owners_association_multiple_years_maintenance_plan' => 'bool',
        'has_owners_association_periodic_contribution' => 'bool',
        'has_owners_association_reserve_fund' => 'bool',
        'has_owners_association_yearly_meeting' => 'bool',
        'has_road_connection' => 'bool',
        'has_septic_tank' => 'bool',
        'has_sewage_connection' => 'bool',
        'has_tank' => 'bool',
        'has_terrain' => 'bool',
        'has_ventilation' => 'bool',
        'has_water_connection' => 'bool',
        'has_house' => 'bool',
        'heating' => '\Swagger\Client\Model\HeatingMethod[]',
        'home_plot' => 'bool',
        'horse_company_subtype' => '\Swagger\Client\Model\HorseCompanySubtype',
        'horse_trough_location' => '\Swagger\Client\Model\HorseTroughLocation',
        'horticultural_company_type' => '\Swagger\Client\Model\HorticulturalCompanyType',
        'hospitality_permitted' => 'bool',
        'beverage_hospitality_types' => '\Swagger\Client\Model\BeverageHospitalitySectorType[]',
        'fastfood_hospitality_sector_types' => '\Swagger\Client\Model\FastfoodHospitalitySectorType[]',
        'restaurant_hospitality_sector_types' => '\Swagger\Client\Model\RestaurantHospitalitySectorType[]',
        'hotel_hospitality_sector_types' => '\Swagger\Client\Model\HotelHospitalitySectorType[]',
        'hotel_hospitality_industry_area' => '\Swagger\Client\Model\Size',
        'hotel_non_hospitality_industry_area' => '\Swagger\Client\Model\Size',
        'house_characteristic' => '\Swagger\Client\Model\HouseCharacteristic',
        'house_sort' => '\Swagger\Client\Model\HouseSort',
        'house_type' => '\Swagger\Client\Model\HouseType',
        'in_dense_hospitality_area' => 'bool',
        'indoor_parking_capacity' => 'int',
        'industrial_building_facilities' => '\Swagger\Client\Model\IndustrialBuildingFacility[]',
        'in_park' => 'bool',
        'insulation_types' => '\Swagger\Client\Model\InsulationType[]',
        'insulation_types_barn_storage' => '\Swagger\Client\Model\InsulationType[]',
        'in_units_from' => '\Swagger\Client\Model\Size',
        'is_barn_storage_available' => 'bool',
        'is_biological_company' => 'bool',
        'is_building_ready' => 'bool',
        'is_home_plot' => 'bool',
        'is_house_in_need_of_refurbishment' => 'bool',
        'is_new_estate' => 'bool',
        'is_office_space_available' => 'bool',
        'is_owners_association_checklist_available' => 'bool',
        'is_owners_association_registered_kv_k' => 'bool',
        'is_permanently_inhabited' => 'bool',
        'is_recreational' => 'bool',
        'is_shared' => 'bool',
        'is_skal_certified' => 'bool',
        'is_target_home' => 'bool',
        'is_turnkey' => 'bool',
        'land_property_sub_type' => '\Swagger\Client\Model\LandPropertySubType',
        'length' => 'double',
        'listing_type' => 'object',
        'living_room_surface' => '\Swagger\Client\Model\Size',
        'location_places' => '\Swagger\Client\Model\LocationPlace[]',
        'logistic_function' => 'bool',
        'loose_soil_price' => 'float',
        'lot_name' => 'string',
        'maintenance_inside' => '\Swagger\Client\Model\Maintenance',
        'maintenance_outside' => '\Swagger\Client\Model\Maintenance',
        'number_of_animal_places' => 'int',
        'number_of_animals' => 'int',
        'number_of_bath_rooms' => 'int',
        'number_of_bed_rooms' => 'int',
        'number_of_floors' => 'int',
        'number_of_garages' => 'int',
        'number_of_gardens' => 'int',
        'number_of_kitchens' => 'int',
        'number_of_meat_pigs' => 'int',
        'number_of_mooring_places_milking_cattle' => 'int',
        'number_of_mooring_places_young_cattle' => 'int',
        'number_of_rooms' => 'int',
        'number_of_showers' => 'int',
        'number_of_sowing_sights' => 'int',
        'number_of_toilets' => 'int',
        'number_of_weaned_piglets' => 'int',
        'number_of_breeding_pigs' => 'int',
        'number_of_meat_pig_stables' => 'int',
        'number_of_breeding_pig_stables' => 'int',
        'number_of_piglet_stables' => 'int',
        'office_facilities' => '\Swagger\Client\Model\Facility[]',
        'office_space_air_treatments' => '\Swagger\Client\Model\AirTreatment[]',
        'office_space_building_layer_number' => 'int',
        'office_space_facilities' => '\Swagger\Client\Model\Facility[]',
        'office_space_surface' => '\Swagger\Client\Model\Size',
        'other_inside_spaces' => '\Swagger\Client\Model\Size',
        'parcel_surface' => '\Swagger\Client\Model\Size',
        'parking_facilities' => '\Swagger\Client\Model\TypeOfParkingFacility[]',
        'parking_type' => '\Swagger\Client\Model\ParkingType',
        'paved_percentage' => 'float',
        'pavement_type' => '\Swagger\Client\Model\PavementType',
        'peculiarities' => '\Swagger\Client\Model\Peculiarity[]',
        'pig_company_type' => '\Swagger\Client\Model\PigCompanyType',
        'points_of_interest' => '\Swagger\Client\Model\PointOfInterest[]',
        'pollution' => '\Swagger\Client\Model\PollutionType[]',
        'poultry_farming_subtype' => '\Swagger\Client\Model\PoultryFarmingSubtype',
        'public_oriented_services' => 'bool',
        'public_reference' => 'string',
        'real_estate_group' => '\Swagger\Client\Model\RealEstateGroup',
        'region_keys_dsv' => 'string',
        'renovation_year' => '\Swagger\Client\Model\YearOfConstruction',
        'residential_building' => '\Swagger\Client\Model\ResidentialBuilding',
        'residential_subtype_other' => '\Swagger\Client\Model\ResidentialSubtypeOther',
        'restaurant_count_of_seats' => 'int',
        'restaurant_hospitality_industry_area' => '\Swagger\Client\Model\Size',
        'restaurant_non_hospitality_industry_area' => '\Swagger\Client\Model\Size',
        'retail' => 'bool',
        'revenue_per_year' => 'float',
        'roof' => '\Swagger\Client\Model\Roof',
        'secondary_listing_types' => '\Swagger\Client\Model\ListingType[]',
        'sector_limitation' => 'bool',
        'showroom' => 'bool',
        'size' => '\Swagger\Client\Model\Size',
        'soil_type' => '\Swagger\Client\Model\SoilType',
        'status_rented' => '\Swagger\Client\Model\StatusRented',
        'step_mill' => 'bool',
        'number_of_horse_boxes' => 'int',
        'storage_has_attic' => 'bool',
        'storage_has_electra' => 'bool',
        'storage_has_heating' => 'bool',
        'storage_has_water' => 'bool',
        'storage_insulation_types' => '\Swagger\Client\Model\InsulationType[]',
        'storage_room_type' => '\Swagger\Client\Model\StorageRoomType',
        'sub_type' => '\Swagger\Client\Model\SubTypeAlvPlot',
        'surface_glass_upholstery' => '\Swagger\Client\Model\Size',
        'terrace' => 'bool',
        'terrain_building_volume' => '\Swagger\Client\Model\Size',
        'terrain_building_volume_area_percentage' => 'float',
        'terrain_surface' => '\Swagger\Client\Model\Size',
        'total_parking_capacity' => 'int',
        'type_code_house' => '\Swagger\Client\Model\TypeCodeHouse',
        'type_of_floor_floors' => '\Swagger\Client\Model\TypeOfFloor',
        'type_of_floor_ground_floor' => '\Swagger\Client\Model\TypeOfFloor',
        'types_of_communal_area' => '\Swagger\Client\Model\TypeOfCommunualArea[]',
        'types_of_window_frames' => '\Swagger\Client\Model\TypeOfWindowFrame[]',
        'usable_area' => '\Swagger\Client\Model\Size',
        'cattle_farming_subtype' => '\Swagger\Client\Model\CattleFarmingSubtype',
        'v_vo' => '\Swagger\Client\Model\Size',
        'warm_water_types' => '\Swagger\Client\Model\HeatingWaterMethod[]',
        'welfare_state' => '\Swagger\Client\Model\WelfareState',
        'width' => 'double',
        'wvo' => '\Swagger\Client\Model\Size',
        'year_of_construction' => '\Swagger\Client\Model\YearOfConstruction',
        'count_of_pitches' => 'int',
        'has_annual_pitches' => 'bool',
        'count_of_accommodations' => 'int',
        'capacity_in_number_of_persons' => 'int',
        'leisure_type' => '\Swagger\Client\Model\LeisureType',
        'leisure_facility_types' => '\Swagger\Client\Model\LeisureFacilityType[]',
        'investment_type' => '\Swagger\Client\Model\InvestmentType',
        'horeca_sector_types' => '\Swagger\Client\Model\HorecaSectorType[]',
        'remaining_term_of_a_contract' => 'int',
        'vacancy_area' => '\Swagger\Client\Model\Size',
        'vacancy_rental_value' => 'float',
        'gross_initial_yield' => 'int',
        'gross_rental_income' => 'float',
        'count_of_tenants' => 'int',
        'count_of_separately_lettable_housing_units' => 'int',
        'portefeuille' => 'bool',
        'social_property_type' => '\Swagger\Client\Model\SocialPropertyType',
        'social_property_facility_types' => '\Swagger\Client\Model\SocialPropertyFacilityType[]',
        'redesignation_possible' => 'bool',
        'return_of_services' => 'bool',
        'practic_area' => 'bool',
        'practic_area_capacity' => 'int',
        'with_accommodations' => 'bool',
        'count_of_housing_units_in_accommodations' => 'int',
        'shared_accommodations' => 'bool',
        'shared_sanitary_facilities' => 'bool',
        'name_of_building' => 'string',
        'residential_facilities' => '\Swagger\Client\Model\ResidentialFacility[]',
        'home_plot_surface' => 'float',
        'number_of_veal_calves' => 'int',
        'has_green_label' => 'bool',
        'poultry_housing_types' => '\Swagger\Client\Model\PoultryHousingType[]',
        'bog_combination_object_type' => '\Swagger\Client\Model\BogCombinationObjectType',
        'bog_combination_object_situation' => '\Swagger\Client\Model\BogCombinationObjectSituation',
        'bog_combination_object_status' => '\Swagger\Client\Model\BogCombinationObjectStatus',
        'bog_combination_object_area' => '\Swagger\Client\Model\Size',
        'glass_structures' => '\Swagger\Client\Model\BaseAlvStructure[]',
        'riding_halls' => '\Swagger\Client\Model\RidingHall[]',
        'linked_folder_tree' => '\Swagger\Client\Model\LinkedFolderTree',
        'linked_bids' => '\Swagger\Client\Model\LinkedBid[]',
        'acceptance_details' => '\Swagger\Client\Model\AcceptanceDetails',
        'advertisement_text' => '\Swagger\Client\Model\TranslatedText[]',
        'assignment_phase' => '\Swagger\Client\Model\AssignmentPhase',
        'availability_status' => '\Swagger\Client\Model\AvailabilityStatus',
        'balcony_text' => '\Swagger\Client\Model\TranslatedText[]',
        'brochures' => '\Swagger\Client\Model\BrochureBlob[]',
        'business_partners' => '\Swagger\Client\Model\AssignmentBusinessPartner[]',
        'calculate_price_per_m2' => 'bool',
        'changes_number_of_inside_parking_lots' => '\Swagger\Client\Model\PartialChange[]',
        'changes_number_of_parking_lots' => '\Swagger\Client\Model\PartialChange[]',
        'changes_surface' => '\Swagger\Client\Model\PartialChange[]',
        'confidentiality_level' => '\Swagger\Client\Model\ConfidentialityLevel',
        'contract_reason' => '\Swagger\Client\Model\ContractReason',
        'contract_source' => '\Swagger\Client\Model\ContractSource',
        'end_date_publication' => '\DateTime',
        'environment_text' => '\Swagger\Client\Model\TranslatedText[]',
        'first_floor_text' => '\Swagger\Client\Model\TranslatedText[]',
        'for_rent' => 'bool',
        'for_sale' => 'bool',
        'gardens_text' => '\Swagger\Client\Model\TranslatedText[]',
        'ground_floor_text' => '\Swagger\Client\Model\TranslatedText[]',
        'hide_on_funda_until' => '\DateTime',
        'funda_postal_code' => 'string',
        'funda_street' => 'string',
        'funda_locality' => 'string',
        'is_temporarily_removed_from_funda' => 'bool',
        'hide_price' => 'bool',
        'import_details' => '\Swagger\Client\Model\ImportDetails',
        'is_cleared' => 'bool',
        'is_confidential' => 'bool',
        'is_private' => 'bool',
        'is_production_rights' => 'bool',
        'is_self_interest' => 'bool',
        'is_special' => 'bool',
        'is_topper' => 'bool',
        'is_transaction_data_confidential' => 'bool',
        'linked_company_listings' => '\Swagger\Client\Model\LinkedCompanyListing[]',
        'linked_applicants' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_notaries' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_property_managers' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_vendors' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_tenant_representation_brokers' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_rental_agents' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_sales_brokers' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_contact_persons' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_financial_advisors' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_appraisers' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_clients' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_offering_agencies' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_purchasing_brokers' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_inspectors' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_stylists' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_photographers' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_potentials' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_occupants' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_people_who_opted' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_project_developers' => '\Swagger\Client\Model\LinkedRelation[]',
        'lot_description_text' => '\Swagger\Client\Model\TranslatedText[]',
        'mandate_date_time' => '\DateTime',
        'maps' => '\Swagger\Client\Model\MapBlob[]',
        'office_id' => 'string',
        'open_house' => '\Swagger\Client\Model\OpenHouse',
        'other_contract_source' => 'string',
        'other_floors_text' => '\Swagger\Client\Model\TranslatedText[]',
        'parking_text' => '\Swagger\Client\Model\TranslatedText[]',
        'parties_description_text' => '\Swagger\Client\Model\TranslatedText[]',
        'peculiarities_text' => '\Swagger\Client\Model\TranslatedText[]',
        'photos' => '\Swagger\Client\Model\PhotoBlob[]',
        'price_description_text' => '\Swagger\Client\Model\TranslatedText[]',
        'products_to_pass_on' => '\Swagger\Client\Model\ProductToPassOn[]',
        'registration_conditions' => '\Swagger\Client\Model\TranslatedText[]',
        'rent_offer' => '\Swagger\Client\Model\RentOffer',
        'sale_offer' => '\Swagger\Client\Model\SaleOffer',
        'second_floor_text' => '\Swagger\Client\Model\TranslatedText[]',
        'special_text' => '\Swagger\Client\Model\TranslatedText[]',
        'tags' => 'string',
        'third_party_media' => '\Swagger\Client\Model\ThirdPartyMedia[]',
        'title_text' => '\Swagger\Client\Model\TranslatedText[]',
        'videos' => '\Swagger\Client\Model\VideoBlob[]',
        'waiting_time' => '\Swagger\Client\Model\WaitingTime',
        'web_address' => 'string',
        'withdrawn_date_time' => '\DateTime',
        'withdraw_reason' => '\Swagger\Client\Model\WithdrawReason'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'summary' => null,
        'address' => null,
        'status' => null,
        'linked_acquisition_assignment' => null,
        'agricultural_subtype_other' => null,
        'air_treatments' => null,
        'apartment_characteristic' => null,
        'apartment_sort' => null,
        'approval_marks' => null,
        'beverages_count_of_seats' => 'int32',
        'beverages_hospitality_industry_area' => null,
        'beverages_non_hospitality_industry_area' => null,
        'boiler_fuel' => null,
        'boiler_property' => null,
        'boiler_type' => null,
        'boiler_year_of_construction' => 'int32',
        'building_capacity' => null,
        'building_capacity_area_percentage' => 'decimal',
        'building_layer' => 'int32',
        'building_layer_amount' => 'int32',
        'business_expenses' => null,
        'company_listings' => null,
        'business_rights' => null,
        'b_vo' => null,
        'capacity' => 'int32',
        'comfort_quality' => null,
        'company_name' => null,
        'complete_space' => null,
        'construction_options' => null,
        'building_related_outdoor_space' => null,
        'contents' => null,
        'count_of_hotelrooms' => 'int32',
        'current_destinationd' => null,
        'current_usages' => null,
        'description' => null,
        'display_name' => null,
        'drainage' => null,
        'drainage_horse_rack' => null,
        'energy_label' => null,
        'exclusive_status' => null,
        'external_storage' => null,
        'facilities' => null,
        'fastfood_count_of_seats' => 'int32',
        'fastfood_hospitality_industry_area' => null,
        'features' => null,
        'floor_level' => 'int32',
        'floor_load' => 'decimal',
        'floors' => null,
        'free_height' => 'decimal',
        'free_overcurrent' => 'decimal',
        'front_width' => 'decimal',
        'garages' => null,
        'gardens' => null,
        'ground_property' => null,
        'ground_usage' => null,
        'alv_main_plot_destination' => null,
        'has_cable_tv' => null,
        'has_combi_boiler' => null,
        'has_drainage' => null,
        'has_electricity_connection' => null,
        'has_electric_power' => null,
        'has_gas_connection' => null,
        'has_hygiene_barrier' => null,
        'has_internet_connection' => null,
        'has_office_space' => null,
        'has_open_porch' => null,
        'has_own_entrance' => null,
        'has_owners_association_buildings_insurance' => null,
        'has_owners_association_maintenance_expectations' => null,
        'has_owners_association_multiple_years_maintenance_plan' => null,
        'has_owners_association_periodic_contribution' => null,
        'has_owners_association_reserve_fund' => null,
        'has_owners_association_yearly_meeting' => null,
        'has_road_connection' => null,
        'has_septic_tank' => null,
        'has_sewage_connection' => null,
        'has_tank' => null,
        'has_terrain' => null,
        'has_ventilation' => null,
        'has_water_connection' => null,
        'has_house' => null,
        'heating' => null,
        'home_plot' => null,
        'horse_company_subtype' => null,
        'horse_trough_location' => null,
        'horticultural_company_type' => null,
        'hospitality_permitted' => null,
        'beverage_hospitality_types' => null,
        'fastfood_hospitality_sector_types' => null,
        'restaurant_hospitality_sector_types' => null,
        'hotel_hospitality_sector_types' => null,
        'hotel_hospitality_industry_area' => null,
        'hotel_non_hospitality_industry_area' => null,
        'house_characteristic' => null,
        'house_sort' => null,
        'house_type' => null,
        'in_dense_hospitality_area' => null,
        'indoor_parking_capacity' => 'int32',
        'industrial_building_facilities' => null,
        'in_park' => null,
        'insulation_types' => null,
        'insulation_types_barn_storage' => null,
        'in_units_from' => null,
        'is_barn_storage_available' => null,
        'is_biological_company' => null,
        'is_building_ready' => null,
        'is_home_plot' => null,
        'is_house_in_need_of_refurbishment' => null,
        'is_new_estate' => null,
        'is_office_space_available' => null,
        'is_owners_association_checklist_available' => null,
        'is_owners_association_registered_kv_k' => null,
        'is_permanently_inhabited' => null,
        'is_recreational' => null,
        'is_shared' => null,
        'is_skal_certified' => null,
        'is_target_home' => null,
        'is_turnkey' => null,
        'land_property_sub_type' => null,
        'length' => 'double',
        'listing_type' => null,
        'living_room_surface' => null,
        'location_places' => null,
        'logistic_function' => null,
        'loose_soil_price' => 'decimal',
        'lot_name' => null,
        'maintenance_inside' => null,
        'maintenance_outside' => null,
        'number_of_animal_places' => 'int32',
        'number_of_animals' => 'int32',
        'number_of_bath_rooms' => 'int32',
        'number_of_bed_rooms' => 'int32',
        'number_of_floors' => 'int32',
        'number_of_garages' => 'int32',
        'number_of_gardens' => 'int32',
        'number_of_kitchens' => 'int32',
        'number_of_meat_pigs' => 'int32',
        'number_of_mooring_places_milking_cattle' => 'int32',
        'number_of_mooring_places_young_cattle' => 'int32',
        'number_of_rooms' => 'int32',
        'number_of_showers' => 'int32',
        'number_of_sowing_sights' => 'int32',
        'number_of_toilets' => 'int32',
        'number_of_weaned_piglets' => 'int32',
        'number_of_breeding_pigs' => 'int32',
        'number_of_meat_pig_stables' => 'int32',
        'number_of_breeding_pig_stables' => 'int32',
        'number_of_piglet_stables' => 'int32',
        'office_facilities' => null,
        'office_space_air_treatments' => null,
        'office_space_building_layer_number' => 'int32',
        'office_space_facilities' => null,
        'office_space_surface' => null,
        'other_inside_spaces' => null,
        'parcel_surface' => null,
        'parking_facilities' => null,
        'parking_type' => null,
        'paved_percentage' => 'decimal',
        'pavement_type' => null,
        'peculiarities' => null,
        'pig_company_type' => null,
        'points_of_interest' => null,
        'pollution' => null,
        'poultry_farming_subtype' => null,
        'public_oriented_services' => null,
        'public_reference' => null,
        'real_estate_group' => null,
        'region_keys_dsv' => null,
        'renovation_year' => null,
        'residential_building' => null,
        'residential_subtype_other' => null,
        'restaurant_count_of_seats' => 'int32',
        'restaurant_hospitality_industry_area' => null,
        'restaurant_non_hospitality_industry_area' => null,
        'retail' => null,
        'revenue_per_year' => 'decimal',
        'roof' => null,
        'secondary_listing_types' => null,
        'sector_limitation' => null,
        'showroom' => null,
        'size' => null,
        'soil_type' => null,
        'status_rented' => null,
        'step_mill' => null,
        'number_of_horse_boxes' => 'int32',
        'storage_has_attic' => null,
        'storage_has_electra' => null,
        'storage_has_heating' => null,
        'storage_has_water' => null,
        'storage_insulation_types' => null,
        'storage_room_type' => null,
        'sub_type' => null,
        'surface_glass_upholstery' => null,
        'terrace' => null,
        'terrain_building_volume' => null,
        'terrain_building_volume_area_percentage' => 'decimal',
        'terrain_surface' => null,
        'total_parking_capacity' => 'int32',
        'type_code_house' => null,
        'type_of_floor_floors' => null,
        'type_of_floor_ground_floor' => null,
        'types_of_communal_area' => null,
        'types_of_window_frames' => null,
        'usable_area' => null,
        'cattle_farming_subtype' => null,
        'v_vo' => null,
        'warm_water_types' => null,
        'welfare_state' => null,
        'width' => 'double',
        'wvo' => null,
        'year_of_construction' => null,
        'count_of_pitches' => 'int32',
        'has_annual_pitches' => null,
        'count_of_accommodations' => 'int32',
        'capacity_in_number_of_persons' => 'int32',
        'leisure_type' => null,
        'leisure_facility_types' => null,
        'investment_type' => null,
        'horeca_sector_types' => null,
        'remaining_term_of_a_contract' => 'int32',
        'vacancy_area' => null,
        'vacancy_rental_value' => 'decimal',
        'gross_initial_yield' => 'int32',
        'gross_rental_income' => 'decimal',
        'count_of_tenants' => 'int32',
        'count_of_separately_lettable_housing_units' => 'int32',
        'portefeuille' => null,
        'social_property_type' => null,
        'social_property_facility_types' => null,
        'redesignation_possible' => null,
        'return_of_services' => null,
        'practic_area' => null,
        'practic_area_capacity' => 'int32',
        'with_accommodations' => null,
        'count_of_housing_units_in_accommodations' => 'int32',
        'shared_accommodations' => null,
        'shared_sanitary_facilities' => null,
        'name_of_building' => null,
        'residential_facilities' => null,
        'home_plot_surface' => 'decimal',
        'number_of_veal_calves' => 'int32',
        'has_green_label' => null,
        'poultry_housing_types' => null,
        'bog_combination_object_type' => null,
        'bog_combination_object_situation' => null,
        'bog_combination_object_status' => null,
        'bog_combination_object_area' => null,
        'glass_structures' => null,
        'riding_halls' => null,
        'linked_folder_tree' => null,
        'linked_bids' => null,
        'acceptance_details' => null,
        'advertisement_text' => null,
        'assignment_phase' => null,
        'availability_status' => null,
        'balcony_text' => null,
        'brochures' => null,
        'business_partners' => null,
        'calculate_price_per_m2' => null,
        'changes_number_of_inside_parking_lots' => null,
        'changes_number_of_parking_lots' => null,
        'changes_surface' => null,
        'confidentiality_level' => null,
        'contract_reason' => null,
        'contract_source' => null,
        'end_date_publication' => 'date-time',
        'environment_text' => null,
        'first_floor_text' => null,
        'for_rent' => null,
        'for_sale' => null,
        'gardens_text' => null,
        'ground_floor_text' => null,
        'hide_on_funda_until' => 'date-time',
        'funda_postal_code' => null,
        'funda_street' => null,
        'funda_locality' => null,
        'is_temporarily_removed_from_funda' => null,
        'hide_price' => null,
        'import_details' => null,
        'is_cleared' => null,
        'is_confidential' => null,
        'is_private' => null,
        'is_production_rights' => null,
        'is_self_interest' => null,
        'is_special' => null,
        'is_topper' => null,
        'is_transaction_data_confidential' => null,
        'linked_company_listings' => null,
        'linked_applicants' => null,
        'linked_notaries' => null,
        'linked_property_managers' => null,
        'linked_vendors' => null,
        'linked_tenant_representation_brokers' => null,
        'linked_rental_agents' => null,
        'linked_sales_brokers' => null,
        'linked_contact_persons' => null,
        'linked_financial_advisors' => null,
        'linked_appraisers' => null,
        'linked_clients' => null,
        'linked_offering_agencies' => null,
        'linked_purchasing_brokers' => null,
        'linked_inspectors' => null,
        'linked_stylists' => null,
        'linked_photographers' => null,
        'linked_potentials' => null,
        'linked_occupants' => null,
        'linked_people_who_opted' => null,
        'linked_project_developers' => null,
        'lot_description_text' => null,
        'mandate_date_time' => 'date-time',
        'maps' => null,
        'office_id' => 'guid',
        'open_house' => null,
        'other_contract_source' => null,
        'other_floors_text' => null,
        'parking_text' => null,
        'parties_description_text' => null,
        'peculiarities_text' => null,
        'photos' => null,
        'price_description_text' => null,
        'products_to_pass_on' => null,
        'registration_conditions' => null,
        'rent_offer' => null,
        'sale_offer' => null,
        'second_floor_text' => null,
        'special_text' => null,
        'tags' => null,
        'third_party_media' => null,
        'title_text' => null,
        'videos' => null,
        'waiting_time' => null,
        'web_address' => null,
        'withdrawn_date_time' => 'date-time',
        'withdraw_reason' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'summary' => 'summary',
        'address' => 'address',
        'status' => 'status',
        'linked_acquisition_assignment' => 'linkedAcquisitionAssignment',
        'agricultural_subtype_other' => 'agriculturalSubtypeOther',
        'air_treatments' => 'airTreatments',
        'apartment_characteristic' => 'apartmentCharacteristic',
        'apartment_sort' => 'apartmentSort',
        'approval_marks' => 'approvalMarks',
        'beverages_count_of_seats' => 'beveragesCountOfSeats',
        'beverages_hospitality_industry_area' => 'beveragesHospitalityIndustryArea',
        'beverages_non_hospitality_industry_area' => 'beveragesNonHospitalityIndustryArea',
        'boiler_fuel' => 'boilerFuel',
        'boiler_property' => 'boilerProperty',
        'boiler_type' => 'boilerType',
        'boiler_year_of_construction' => 'boilerYearOfConstruction',
        'building_capacity' => 'buildingCapacity',
        'building_capacity_area_percentage' => 'buildingCapacityAreaPercentage',
        'building_layer' => 'buildingLayer',
        'building_layer_amount' => 'buildingLayerAmount',
        'business_expenses' => 'businessExpenses',
        'company_listings' => 'companyListings',
        'business_rights' => 'businessRights',
        'b_vo' => 'bVO',
        'capacity' => 'capacity',
        'comfort_quality' => 'comfortQuality',
        'company_name' => 'companyName',
        'complete_space' => 'completeSpace',
        'construction_options' => 'constructionOptions',
        'building_related_outdoor_space' => 'buildingRelatedOutdoorSpace',
        'contents' => 'contents',
        'count_of_hotelrooms' => 'countOfHotelrooms',
        'current_destinationd' => 'currentDestinationd',
        'current_usages' => 'currentUsages',
        'description' => 'description',
        'display_name' => 'displayName',
        'drainage' => 'drainage',
        'drainage_horse_rack' => 'drainageHorseRack',
        'energy_label' => 'energyLabel',
        'exclusive_status' => 'exclusiveStatus',
        'external_storage' => 'externalStorage',
        'facilities' => 'facilities',
        'fastfood_count_of_seats' => 'fastfoodCountOfSeats',
        'fastfood_hospitality_industry_area' => 'fastfoodHospitalityIndustryArea',
        'features' => 'features',
        'floor_level' => 'floorLevel',
        'floor_load' => 'floorLoad',
        'floors' => 'floors',
        'free_height' => 'freeHeight',
        'free_overcurrent' => 'freeOvercurrent',
        'front_width' => 'frontWidth',
        'garages' => 'garages',
        'gardens' => 'gardens',
        'ground_property' => 'groundProperty',
        'ground_usage' => 'groundUsage',
        'alv_main_plot_destination' => 'alvMainPlotDestination',
        'has_cable_tv' => 'hasCableTV',
        'has_combi_boiler' => 'hasCombiBoiler',
        'has_drainage' => 'hasDrainage',
        'has_electricity_connection' => 'hasElectricityConnection',
        'has_electric_power' => 'hasElectricPower',
        'has_gas_connection' => 'hasGasConnection',
        'has_hygiene_barrier' => 'hasHygieneBarrier',
        'has_internet_connection' => 'hasInternetConnection',
        'has_office_space' => 'hasOfficeSpace',
        'has_open_porch' => 'hasOpenPorch',
        'has_own_entrance' => 'hasOwnEntrance',
        'has_owners_association_buildings_insurance' => 'hasOwnersAssociationBuildingsInsurance',
        'has_owners_association_maintenance_expectations' => 'hasOwnersAssociationMaintenanceExpectations',
        'has_owners_association_multiple_years_maintenance_plan' => 'hasOwnersAssociationMultipleYearsMaintenancePlan',
        'has_owners_association_periodic_contribution' => 'hasOwnersAssociationPeriodicContribution',
        'has_owners_association_reserve_fund' => 'hasOwnersAssociationReserveFund',
        'has_owners_association_yearly_meeting' => 'hasOwnersAssociationYearlyMeeting',
        'has_road_connection' => 'hasRoadConnection',
        'has_septic_tank' => 'hasSepticTank',
        'has_sewage_connection' => 'hasSewageConnection',
        'has_tank' => 'hasTank',
        'has_terrain' => 'hasTerrain',
        'has_ventilation' => 'hasVentilation',
        'has_water_connection' => 'hasWaterConnection',
        'has_house' => 'hasHouse',
        'heating' => 'heating',
        'home_plot' => 'homePlot',
        'horse_company_subtype' => 'horseCompanySubtype',
        'horse_trough_location' => 'horseTroughLocation',
        'horticultural_company_type' => 'horticulturalCompanyType',
        'hospitality_permitted' => 'hospitalityPermitted',
        'beverage_hospitality_types' => 'beverageHospitalityTypes',
        'fastfood_hospitality_sector_types' => 'fastfoodHospitalitySectorTypes',
        'restaurant_hospitality_sector_types' => 'restaurantHospitalitySectorTypes',
        'hotel_hospitality_sector_types' => 'hotelHospitalitySectorTypes',
        'hotel_hospitality_industry_area' => 'hotelHospitalityIndustryArea',
        'hotel_non_hospitality_industry_area' => 'hotelNonHospitalityIndustryArea',
        'house_characteristic' => 'houseCharacteristic',
        'house_sort' => 'houseSort',
        'house_type' => 'houseType',
        'in_dense_hospitality_area' => 'inDenseHospitalityArea',
        'indoor_parking_capacity' => 'indoorParkingCapacity',
        'industrial_building_facilities' => 'industrialBuildingFacilities',
        'in_park' => 'inPark',
        'insulation_types' => 'insulationTypes',
        'insulation_types_barn_storage' => 'insulationTypesBarnStorage',
        'in_units_from' => 'inUnitsFrom',
        'is_barn_storage_available' => 'isBarnStorageAvailable',
        'is_biological_company' => 'isBiologicalCompany',
        'is_building_ready' => 'isBuildingReady',
        'is_home_plot' => 'isHomePlot',
        'is_house_in_need_of_refurbishment' => 'isHouseInNeedOfRefurbishment',
        'is_new_estate' => 'isNewEstate',
        'is_office_space_available' => 'isOfficeSpaceAvailable',
        'is_owners_association_checklist_available' => 'isOwnersAssociationChecklistAvailable',
        'is_owners_association_registered_kv_k' => 'isOwnersAssociationRegisteredKvK',
        'is_permanently_inhabited' => 'isPermanentlyInhabited',
        'is_recreational' => 'isRecreational',
        'is_shared' => 'isShared',
        'is_skal_certified' => 'isSKALCertified',
        'is_target_home' => 'isTargetHome',
        'is_turnkey' => 'isTurnkey',
        'land_property_sub_type' => 'landPropertySubType',
        'length' => 'length',
        'listing_type' => 'listingType',
        'living_room_surface' => 'livingRoomSurface',
        'location_places' => 'locationPlaces',
        'logistic_function' => 'logisticFunction',
        'loose_soil_price' => 'looseSoilPrice',
        'lot_name' => 'lotName',
        'maintenance_inside' => 'maintenanceInside',
        'maintenance_outside' => 'maintenanceOutside',
        'number_of_animal_places' => 'numberOfAnimalPlaces',
        'number_of_animals' => 'numberOfAnimals',
        'number_of_bath_rooms' => 'numberOfBathRooms',
        'number_of_bed_rooms' => 'numberOfBedRooms',
        'number_of_floors' => 'numberOfFloors',
        'number_of_garages' => 'numberOfGarages',
        'number_of_gardens' => 'numberOfGardens',
        'number_of_kitchens' => 'numberOfKitchens',
        'number_of_meat_pigs' => 'numberOfMeatPigs',
        'number_of_mooring_places_milking_cattle' => 'numberOfMooringPlacesMilkingCattle',
        'number_of_mooring_places_young_cattle' => 'numberOfMooringPlacesYoungCattle',
        'number_of_rooms' => 'numberOfRooms',
        'number_of_showers' => 'numberOfShowers',
        'number_of_sowing_sights' => 'numberOfSowingSights',
        'number_of_toilets' => 'numberOfToilets',
        'number_of_weaned_piglets' => 'numberOfWeanedPiglets',
        'number_of_breeding_pigs' => 'numberOfBreedingPigs',
        'number_of_meat_pig_stables' => 'numberOfMeatPigStables',
        'number_of_breeding_pig_stables' => 'numberOfBreedingPigStables',
        'number_of_piglet_stables' => 'numberOfPigletStables',
        'office_facilities' => 'officeFacilities',
        'office_space_air_treatments' => 'officeSpaceAirTreatments',
        'office_space_building_layer_number' => 'officeSpaceBuildingLayerNumber',
        'office_space_facilities' => 'officeSpaceFacilities',
        'office_space_surface' => 'officeSpaceSurface',
        'other_inside_spaces' => 'otherInsideSpaces',
        'parcel_surface' => 'parcelSurface',
        'parking_facilities' => 'parkingFacilities',
        'parking_type' => 'parkingType',
        'paved_percentage' => 'pavedPercentage',
        'pavement_type' => 'pavementType',
        'peculiarities' => 'peculiarities',
        'pig_company_type' => 'pigCompanyType',
        'points_of_interest' => 'pointsOfInterest',
        'pollution' => 'pollution',
        'poultry_farming_subtype' => 'poultryFarmingSubtype',
        'public_oriented_services' => 'publicOrientedServices',
        'public_reference' => 'publicReference',
        'real_estate_group' => 'realEstateGroup',
        'region_keys_dsv' => 'regionKeysDsv',
        'renovation_year' => 'renovationYear',
        'residential_building' => 'residentialBuilding',
        'residential_subtype_other' => 'residentialSubtypeOther',
        'restaurant_count_of_seats' => 'restaurantCountOfSeats',
        'restaurant_hospitality_industry_area' => 'restaurantHospitalityIndustryArea',
        'restaurant_non_hospitality_industry_area' => 'restaurantNonHospitalityIndustryArea',
        'retail' => 'retail',
        'revenue_per_year' => 'revenuePerYear',
        'roof' => 'roof',
        'secondary_listing_types' => 'secondaryListingTypes',
        'sector_limitation' => 'sectorLimitation',
        'showroom' => 'showroom',
        'size' => 'size',
        'soil_type' => 'soilType',
        'status_rented' => 'statusRented',
        'step_mill' => 'stepMill',
        'number_of_horse_boxes' => 'numberOfHorseBoxes',
        'storage_has_attic' => 'storageHasAttic',
        'storage_has_electra' => 'storageHasElectra',
        'storage_has_heating' => 'storageHasHeating',
        'storage_has_water' => 'storageHasWater',
        'storage_insulation_types' => 'storageInsulationTypes',
        'storage_room_type' => 'storageRoomType',
        'sub_type' => 'subType',
        'surface_glass_upholstery' => 'surfaceGlassUpholstery',
        'terrace' => 'terrace',
        'terrain_building_volume' => 'terrainBuildingVolume',
        'terrain_building_volume_area_percentage' => 'terrainBuildingVolumeAreaPercentage',
        'terrain_surface' => 'terrainSurface',
        'total_parking_capacity' => 'totalParkingCapacity',
        'type_code_house' => 'typeCodeHouse',
        'type_of_floor_floors' => 'typeOfFloorFloors',
        'type_of_floor_ground_floor' => 'typeOfFloorGroundFloor',
        'types_of_communal_area' => 'typesOfCommunalArea',
        'types_of_window_frames' => 'typesOfWindowFrames',
        'usable_area' => 'usableArea',
        'cattle_farming_subtype' => 'cattleFarmingSubtype',
        'v_vo' => 'vVO',
        'warm_water_types' => 'warmWaterTypes',
        'welfare_state' => 'welfareState',
        'width' => 'width',
        'wvo' => 'wvo',
        'year_of_construction' => 'yearOfConstruction',
        'count_of_pitches' => 'countOfPitches',
        'has_annual_pitches' => 'hasAnnualPitches',
        'count_of_accommodations' => 'countOfAccommodations',
        'capacity_in_number_of_persons' => 'capacityInNumberOfPersons',
        'leisure_type' => 'leisureType',
        'leisure_facility_types' => 'leisureFacilityTypes',
        'investment_type' => 'investmentType',
        'horeca_sector_types' => 'horecaSectorTypes',
        'remaining_term_of_a_contract' => 'remainingTermOfAContract',
        'vacancy_area' => 'vacancyArea',
        'vacancy_rental_value' => 'vacancyRentalValue',
        'gross_initial_yield' => 'grossInitialYield',
        'gross_rental_income' => 'grossRentalIncome',
        'count_of_tenants' => 'countOfTenants',
        'count_of_separately_lettable_housing_units' => 'countOfSeparatelyLettableHousingUnits',
        'portefeuille' => 'portefeuille',
        'social_property_type' => 'socialPropertyType',
        'social_property_facility_types' => 'socialPropertyFacilityTypes',
        'redesignation_possible' => 'redesignationPossible',
        'return_of_services' => 'returnOfServices',
        'practic_area' => 'practicArea',
        'practic_area_capacity' => 'practicAreaCapacity',
        'with_accommodations' => 'withAccommodations',
        'count_of_housing_units_in_accommodations' => 'countOfHousingUnitsInAccommodations',
        'shared_accommodations' => 'sharedAccommodations',
        'shared_sanitary_facilities' => 'sharedSanitaryFacilities',
        'name_of_building' => 'nameOfBuilding',
        'residential_facilities' => 'residentialFacilities',
        'home_plot_surface' => 'homePlotSurface',
        'number_of_veal_calves' => 'numberOfVealCalves',
        'has_green_label' => 'hasGreenLabel',
        'poultry_housing_types' => 'poultryHousingTypes',
        'bog_combination_object_type' => 'bogCombinationObjectType',
        'bog_combination_object_situation' => 'bogCombinationObjectSituation',
        'bog_combination_object_status' => 'bogCombinationObjectStatus',
        'bog_combination_object_area' => 'bogCombinationObjectArea',
        'glass_structures' => 'glassStructures',
        'riding_halls' => 'ridingHalls',
        'linked_folder_tree' => 'linkedFolderTree',
        'linked_bids' => 'linkedBids',
        'acceptance_details' => 'acceptanceDetails',
        'advertisement_text' => 'advertisementText',
        'assignment_phase' => 'assignmentPhase',
        'availability_status' => 'availabilityStatus',
        'balcony_text' => 'balconyText',
        'brochures' => 'brochures',
        'business_partners' => 'businessPartners',
        'calculate_price_per_m2' => 'calculatePricePerM2',
        'changes_number_of_inside_parking_lots' => 'changesNumberOfInsideParkingLots',
        'changes_number_of_parking_lots' => 'changesNumberOfParkingLots',
        'changes_surface' => 'changesSurface',
        'confidentiality_level' => 'confidentialityLevel',
        'contract_reason' => 'contractReason',
        'contract_source' => 'contractSource',
        'end_date_publication' => 'endDatePublication',
        'environment_text' => 'environmentText',
        'first_floor_text' => 'firstFloorText',
        'for_rent' => 'forRent',
        'for_sale' => 'forSale',
        'gardens_text' => 'gardensText',
        'ground_floor_text' => 'groundFloorText',
        'hide_on_funda_until' => 'hideOnFundaUntil',
        'funda_postal_code' => 'fundaPostalCode',
        'funda_street' => 'fundaStreet',
        'funda_locality' => 'fundaLocality',
        'is_temporarily_removed_from_funda' => 'isTemporarilyRemovedFromFunda',
        'hide_price' => 'hidePrice',
        'import_details' => 'importDetails',
        'is_cleared' => 'isCleared',
        'is_confidential' => 'isConfidential',
        'is_private' => 'isPrivate',
        'is_production_rights' => 'isProductionRights',
        'is_self_interest' => 'isSelfInterest',
        'is_special' => 'isSpecial',
        'is_topper' => 'isTopper',
        'is_transaction_data_confidential' => 'isTransactionDataConfidential',
        'linked_company_listings' => 'linkedCompanyListings',
        'linked_applicants' => 'linkedApplicants',
        'linked_notaries' => 'linkedNotaries',
        'linked_property_managers' => 'linkedPropertyManagers',
        'linked_vendors' => 'linkedVendors',
        'linked_tenant_representation_brokers' => 'linkedTenantRepresentationBrokers',
        'linked_rental_agents' => 'linkedRentalAgents',
        'linked_sales_brokers' => 'linkedSalesBrokers',
        'linked_contact_persons' => 'linkedContactPersons',
        'linked_financial_advisors' => 'linkedFinancialAdvisors',
        'linked_appraisers' => 'linkedAppraisers',
        'linked_clients' => 'linkedClients',
        'linked_offering_agencies' => 'linkedOfferingAgencies',
        'linked_purchasing_brokers' => 'linkedPurchasingBrokers',
        'linked_inspectors' => 'linkedInspectors',
        'linked_stylists' => 'linkedStylists',
        'linked_photographers' => 'linkedPhotographers',
        'linked_potentials' => 'linkedPotentials',
        'linked_occupants' => 'linkedOccupants',
        'linked_people_who_opted' => 'linkedPeopleWhoOpted',
        'linked_project_developers' => 'linkedProjectDevelopers',
        'lot_description_text' => 'lotDescriptionText',
        'mandate_date_time' => 'mandateDateTime',
        'maps' => 'maps',
        'office_id' => 'officeID',
        'open_house' => 'openHouse',
        'other_contract_source' => 'otherContractSource',
        'other_floors_text' => 'otherFloorsText',
        'parking_text' => 'parkingText',
        'parties_description_text' => 'partiesDescriptionText',
        'peculiarities_text' => 'peculiaritiesText',
        'photos' => 'photos',
        'price_description_text' => 'priceDescriptionText',
        'products_to_pass_on' => 'productsToPassOn',
        'registration_conditions' => 'registrationConditions',
        'rent_offer' => 'rentOffer',
        'sale_offer' => 'saleOffer',
        'second_floor_text' => 'secondFloorText',
        'special_text' => 'specialText',
        'tags' => 'tags',
        'third_party_media' => 'thirdPartyMedia',
        'title_text' => 'titleText',
        'videos' => 'videos',
        'waiting_time' => 'waitingTime',
        'web_address' => 'webAddress',
        'withdrawn_date_time' => 'withdrawnDateTime',
        'withdraw_reason' => 'withdrawReason'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'summary' => 'setSummary',
        'address' => 'setAddress',
        'status' => 'setStatus',
        'linked_acquisition_assignment' => 'setLinkedAcquisitionAssignment',
        'agricultural_subtype_other' => 'setAgriculturalSubtypeOther',
        'air_treatments' => 'setAirTreatments',
        'apartment_characteristic' => 'setApartmentCharacteristic',
        'apartment_sort' => 'setApartmentSort',
        'approval_marks' => 'setApprovalMarks',
        'beverages_count_of_seats' => 'setBeveragesCountOfSeats',
        'beverages_hospitality_industry_area' => 'setBeveragesHospitalityIndustryArea',
        'beverages_non_hospitality_industry_area' => 'setBeveragesNonHospitalityIndustryArea',
        'boiler_fuel' => 'setBoilerFuel',
        'boiler_property' => 'setBoilerProperty',
        'boiler_type' => 'setBoilerType',
        'boiler_year_of_construction' => 'setBoilerYearOfConstruction',
        'building_capacity' => 'setBuildingCapacity',
        'building_capacity_area_percentage' => 'setBuildingCapacityAreaPercentage',
        'building_layer' => 'setBuildingLayer',
        'building_layer_amount' => 'setBuildingLayerAmount',
        'business_expenses' => 'setBusinessExpenses',
        'company_listings' => 'setCompanyListings',
        'business_rights' => 'setBusinessRights',
        'b_vo' => 'setBVo',
        'capacity' => 'setCapacity',
        'comfort_quality' => 'setComfortQuality',
        'company_name' => 'setCompanyName',
        'complete_space' => 'setCompleteSpace',
        'construction_options' => 'setConstructionOptions',
        'building_related_outdoor_space' => 'setBuildingRelatedOutdoorSpace',
        'contents' => 'setContents',
        'count_of_hotelrooms' => 'setCountOfHotelrooms',
        'current_destinationd' => 'setCurrentDestinationd',
        'current_usages' => 'setCurrentUsages',
        'description' => 'setDescription',
        'display_name' => 'setDisplayName',
        'drainage' => 'setDrainage',
        'drainage_horse_rack' => 'setDrainageHorseRack',
        'energy_label' => 'setEnergyLabel',
        'exclusive_status' => 'setExclusiveStatus',
        'external_storage' => 'setExternalStorage',
        'facilities' => 'setFacilities',
        'fastfood_count_of_seats' => 'setFastfoodCountOfSeats',
        'fastfood_hospitality_industry_area' => 'setFastfoodHospitalityIndustryArea',
        'features' => 'setFeatures',
        'floor_level' => 'setFloorLevel',
        'floor_load' => 'setFloorLoad',
        'floors' => 'setFloors',
        'free_height' => 'setFreeHeight',
        'free_overcurrent' => 'setFreeOvercurrent',
        'front_width' => 'setFrontWidth',
        'garages' => 'setGarages',
        'gardens' => 'setGardens',
        'ground_property' => 'setGroundProperty',
        'ground_usage' => 'setGroundUsage',
        'alv_main_plot_destination' => 'setAlvMainPlotDestination',
        'has_cable_tv' => 'setHasCableTv',
        'has_combi_boiler' => 'setHasCombiBoiler',
        'has_drainage' => 'setHasDrainage',
        'has_electricity_connection' => 'setHasElectricityConnection',
        'has_electric_power' => 'setHasElectricPower',
        'has_gas_connection' => 'setHasGasConnection',
        'has_hygiene_barrier' => 'setHasHygieneBarrier',
        'has_internet_connection' => 'setHasInternetConnection',
        'has_office_space' => 'setHasOfficeSpace',
        'has_open_porch' => 'setHasOpenPorch',
        'has_own_entrance' => 'setHasOwnEntrance',
        'has_owners_association_buildings_insurance' => 'setHasOwnersAssociationBuildingsInsurance',
        'has_owners_association_maintenance_expectations' => 'setHasOwnersAssociationMaintenanceExpectations',
        'has_owners_association_multiple_years_maintenance_plan' => 'setHasOwnersAssociationMultipleYearsMaintenancePlan',
        'has_owners_association_periodic_contribution' => 'setHasOwnersAssociationPeriodicContribution',
        'has_owners_association_reserve_fund' => 'setHasOwnersAssociationReserveFund',
        'has_owners_association_yearly_meeting' => 'setHasOwnersAssociationYearlyMeeting',
        'has_road_connection' => 'setHasRoadConnection',
        'has_septic_tank' => 'setHasSepticTank',
        'has_sewage_connection' => 'setHasSewageConnection',
        'has_tank' => 'setHasTank',
        'has_terrain' => 'setHasTerrain',
        'has_ventilation' => 'setHasVentilation',
        'has_water_connection' => 'setHasWaterConnection',
        'has_house' => 'setHasHouse',
        'heating' => 'setHeating',
        'home_plot' => 'setHomePlot',
        'horse_company_subtype' => 'setHorseCompanySubtype',
        'horse_trough_location' => 'setHorseTroughLocation',
        'horticultural_company_type' => 'setHorticulturalCompanyType',
        'hospitality_permitted' => 'setHospitalityPermitted',
        'beverage_hospitality_types' => 'setBeverageHospitalityTypes',
        'fastfood_hospitality_sector_types' => 'setFastfoodHospitalitySectorTypes',
        'restaurant_hospitality_sector_types' => 'setRestaurantHospitalitySectorTypes',
        'hotel_hospitality_sector_types' => 'setHotelHospitalitySectorTypes',
        'hotel_hospitality_industry_area' => 'setHotelHospitalityIndustryArea',
        'hotel_non_hospitality_industry_area' => 'setHotelNonHospitalityIndustryArea',
        'house_characteristic' => 'setHouseCharacteristic',
        'house_sort' => 'setHouseSort',
        'house_type' => 'setHouseType',
        'in_dense_hospitality_area' => 'setInDenseHospitalityArea',
        'indoor_parking_capacity' => 'setIndoorParkingCapacity',
        'industrial_building_facilities' => 'setIndustrialBuildingFacilities',
        'in_park' => 'setInPark',
        'insulation_types' => 'setInsulationTypes',
        'insulation_types_barn_storage' => 'setInsulationTypesBarnStorage',
        'in_units_from' => 'setInUnitsFrom',
        'is_barn_storage_available' => 'setIsBarnStorageAvailable',
        'is_biological_company' => 'setIsBiologicalCompany',
        'is_building_ready' => 'setIsBuildingReady',
        'is_home_plot' => 'setIsHomePlot',
        'is_house_in_need_of_refurbishment' => 'setIsHouseInNeedOfRefurbishment',
        'is_new_estate' => 'setIsNewEstate',
        'is_office_space_available' => 'setIsOfficeSpaceAvailable',
        'is_owners_association_checklist_available' => 'setIsOwnersAssociationChecklistAvailable',
        'is_owners_association_registered_kv_k' => 'setIsOwnersAssociationRegisteredKvK',
        'is_permanently_inhabited' => 'setIsPermanentlyInhabited',
        'is_recreational' => 'setIsRecreational',
        'is_shared' => 'setIsShared',
        'is_skal_certified' => 'setIsSkalCertified',
        'is_target_home' => 'setIsTargetHome',
        'is_turnkey' => 'setIsTurnkey',
        'land_property_sub_type' => 'setLandPropertySubType',
        'length' => 'setLength',
        'listing_type' => 'setListingType',
        'living_room_surface' => 'setLivingRoomSurface',
        'location_places' => 'setLocationPlaces',
        'logistic_function' => 'setLogisticFunction',
        'loose_soil_price' => 'setLooseSoilPrice',
        'lot_name' => 'setLotName',
        'maintenance_inside' => 'setMaintenanceInside',
        'maintenance_outside' => 'setMaintenanceOutside',
        'number_of_animal_places' => 'setNumberOfAnimalPlaces',
        'number_of_animals' => 'setNumberOfAnimals',
        'number_of_bath_rooms' => 'setNumberOfBathRooms',
        'number_of_bed_rooms' => 'setNumberOfBedRooms',
        'number_of_floors' => 'setNumberOfFloors',
        'number_of_garages' => 'setNumberOfGarages',
        'number_of_gardens' => 'setNumberOfGardens',
        'number_of_kitchens' => 'setNumberOfKitchens',
        'number_of_meat_pigs' => 'setNumberOfMeatPigs',
        'number_of_mooring_places_milking_cattle' => 'setNumberOfMooringPlacesMilkingCattle',
        'number_of_mooring_places_young_cattle' => 'setNumberOfMooringPlacesYoungCattle',
        'number_of_rooms' => 'setNumberOfRooms',
        'number_of_showers' => 'setNumberOfShowers',
        'number_of_sowing_sights' => 'setNumberOfSowingSights',
        'number_of_toilets' => 'setNumberOfToilets',
        'number_of_weaned_piglets' => 'setNumberOfWeanedPiglets',
        'number_of_breeding_pigs' => 'setNumberOfBreedingPigs',
        'number_of_meat_pig_stables' => 'setNumberOfMeatPigStables',
        'number_of_breeding_pig_stables' => 'setNumberOfBreedingPigStables',
        'number_of_piglet_stables' => 'setNumberOfPigletStables',
        'office_facilities' => 'setOfficeFacilities',
        'office_space_air_treatments' => 'setOfficeSpaceAirTreatments',
        'office_space_building_layer_number' => 'setOfficeSpaceBuildingLayerNumber',
        'office_space_facilities' => 'setOfficeSpaceFacilities',
        'office_space_surface' => 'setOfficeSpaceSurface',
        'other_inside_spaces' => 'setOtherInsideSpaces',
        'parcel_surface' => 'setParcelSurface',
        'parking_facilities' => 'setParkingFacilities',
        'parking_type' => 'setParkingType',
        'paved_percentage' => 'setPavedPercentage',
        'pavement_type' => 'setPavementType',
        'peculiarities' => 'setPeculiarities',
        'pig_company_type' => 'setPigCompanyType',
        'points_of_interest' => 'setPointsOfInterest',
        'pollution' => 'setPollution',
        'poultry_farming_subtype' => 'setPoultryFarmingSubtype',
        'public_oriented_services' => 'setPublicOrientedServices',
        'public_reference' => 'setPublicReference',
        'real_estate_group' => 'setRealEstateGroup',
        'region_keys_dsv' => 'setRegionKeysDsv',
        'renovation_year' => 'setRenovationYear',
        'residential_building' => 'setResidentialBuilding',
        'residential_subtype_other' => 'setResidentialSubtypeOther',
        'restaurant_count_of_seats' => 'setRestaurantCountOfSeats',
        'restaurant_hospitality_industry_area' => 'setRestaurantHospitalityIndustryArea',
        'restaurant_non_hospitality_industry_area' => 'setRestaurantNonHospitalityIndustryArea',
        'retail' => 'setRetail',
        'revenue_per_year' => 'setRevenuePerYear',
        'roof' => 'setRoof',
        'secondary_listing_types' => 'setSecondaryListingTypes',
        'sector_limitation' => 'setSectorLimitation',
        'showroom' => 'setShowroom',
        'size' => 'setSize',
        'soil_type' => 'setSoilType',
        'status_rented' => 'setStatusRented',
        'step_mill' => 'setStepMill',
        'number_of_horse_boxes' => 'setNumberOfHorseBoxes',
        'storage_has_attic' => 'setStorageHasAttic',
        'storage_has_electra' => 'setStorageHasElectra',
        'storage_has_heating' => 'setStorageHasHeating',
        'storage_has_water' => 'setStorageHasWater',
        'storage_insulation_types' => 'setStorageInsulationTypes',
        'storage_room_type' => 'setStorageRoomType',
        'sub_type' => 'setSubType',
        'surface_glass_upholstery' => 'setSurfaceGlassUpholstery',
        'terrace' => 'setTerrace',
        'terrain_building_volume' => 'setTerrainBuildingVolume',
        'terrain_building_volume_area_percentage' => 'setTerrainBuildingVolumeAreaPercentage',
        'terrain_surface' => 'setTerrainSurface',
        'total_parking_capacity' => 'setTotalParkingCapacity',
        'type_code_house' => 'setTypeCodeHouse',
        'type_of_floor_floors' => 'setTypeOfFloorFloors',
        'type_of_floor_ground_floor' => 'setTypeOfFloorGroundFloor',
        'types_of_communal_area' => 'setTypesOfCommunalArea',
        'types_of_window_frames' => 'setTypesOfWindowFrames',
        'usable_area' => 'setUsableArea',
        'cattle_farming_subtype' => 'setCattleFarmingSubtype',
        'v_vo' => 'setVVo',
        'warm_water_types' => 'setWarmWaterTypes',
        'welfare_state' => 'setWelfareState',
        'width' => 'setWidth',
        'wvo' => 'setWvo',
        'year_of_construction' => 'setYearOfConstruction',
        'count_of_pitches' => 'setCountOfPitches',
        'has_annual_pitches' => 'setHasAnnualPitches',
        'count_of_accommodations' => 'setCountOfAccommodations',
        'capacity_in_number_of_persons' => 'setCapacityInNumberOfPersons',
        'leisure_type' => 'setLeisureType',
        'leisure_facility_types' => 'setLeisureFacilityTypes',
        'investment_type' => 'setInvestmentType',
        'horeca_sector_types' => 'setHorecaSectorTypes',
        'remaining_term_of_a_contract' => 'setRemainingTermOfAContract',
        'vacancy_area' => 'setVacancyArea',
        'vacancy_rental_value' => 'setVacancyRentalValue',
        'gross_initial_yield' => 'setGrossInitialYield',
        'gross_rental_income' => 'setGrossRentalIncome',
        'count_of_tenants' => 'setCountOfTenants',
        'count_of_separately_lettable_housing_units' => 'setCountOfSeparatelyLettableHousingUnits',
        'portefeuille' => 'setPortefeuille',
        'social_property_type' => 'setSocialPropertyType',
        'social_property_facility_types' => 'setSocialPropertyFacilityTypes',
        'redesignation_possible' => 'setRedesignationPossible',
        'return_of_services' => 'setReturnOfServices',
        'practic_area' => 'setPracticArea',
        'practic_area_capacity' => 'setPracticAreaCapacity',
        'with_accommodations' => 'setWithAccommodations',
        'count_of_housing_units_in_accommodations' => 'setCountOfHousingUnitsInAccommodations',
        'shared_accommodations' => 'setSharedAccommodations',
        'shared_sanitary_facilities' => 'setSharedSanitaryFacilities',
        'name_of_building' => 'setNameOfBuilding',
        'residential_facilities' => 'setResidentialFacilities',
        'home_plot_surface' => 'setHomePlotSurface',
        'number_of_veal_calves' => 'setNumberOfVealCalves',
        'has_green_label' => 'setHasGreenLabel',
        'poultry_housing_types' => 'setPoultryHousingTypes',
        'bog_combination_object_type' => 'setBogCombinationObjectType',
        'bog_combination_object_situation' => 'setBogCombinationObjectSituation',
        'bog_combination_object_status' => 'setBogCombinationObjectStatus',
        'bog_combination_object_area' => 'setBogCombinationObjectArea',
        'glass_structures' => 'setGlassStructures',
        'riding_halls' => 'setRidingHalls',
        'linked_folder_tree' => 'setLinkedFolderTree',
        'linked_bids' => 'setLinkedBids',
        'acceptance_details' => 'setAcceptanceDetails',
        'advertisement_text' => 'setAdvertisementText',
        'assignment_phase' => 'setAssignmentPhase',
        'availability_status' => 'setAvailabilityStatus',
        'balcony_text' => 'setBalconyText',
        'brochures' => 'setBrochures',
        'business_partners' => 'setBusinessPartners',
        'calculate_price_per_m2' => 'setCalculatePricePerM2',
        'changes_number_of_inside_parking_lots' => 'setChangesNumberOfInsideParkingLots',
        'changes_number_of_parking_lots' => 'setChangesNumberOfParkingLots',
        'changes_surface' => 'setChangesSurface',
        'confidentiality_level' => 'setConfidentialityLevel',
        'contract_reason' => 'setContractReason',
        'contract_source' => 'setContractSource',
        'end_date_publication' => 'setEndDatePublication',
        'environment_text' => 'setEnvironmentText',
        'first_floor_text' => 'setFirstFloorText',
        'for_rent' => 'setForRent',
        'for_sale' => 'setForSale',
        'gardens_text' => 'setGardensText',
        'ground_floor_text' => 'setGroundFloorText',
        'hide_on_funda_until' => 'setHideOnFundaUntil',
        'funda_postal_code' => 'setFundaPostalCode',
        'funda_street' => 'setFundaStreet',
        'funda_locality' => 'setFundaLocality',
        'is_temporarily_removed_from_funda' => 'setIsTemporarilyRemovedFromFunda',
        'hide_price' => 'setHidePrice',
        'import_details' => 'setImportDetails',
        'is_cleared' => 'setIsCleared',
        'is_confidential' => 'setIsConfidential',
        'is_private' => 'setIsPrivate',
        'is_production_rights' => 'setIsProductionRights',
        'is_self_interest' => 'setIsSelfInterest',
        'is_special' => 'setIsSpecial',
        'is_topper' => 'setIsTopper',
        'is_transaction_data_confidential' => 'setIsTransactionDataConfidential',
        'linked_company_listings' => 'setLinkedCompanyListings',
        'linked_applicants' => 'setLinkedApplicants',
        'linked_notaries' => 'setLinkedNotaries',
        'linked_property_managers' => 'setLinkedPropertyManagers',
        'linked_vendors' => 'setLinkedVendors',
        'linked_tenant_representation_brokers' => 'setLinkedTenantRepresentationBrokers',
        'linked_rental_agents' => 'setLinkedRentalAgents',
        'linked_sales_brokers' => 'setLinkedSalesBrokers',
        'linked_contact_persons' => 'setLinkedContactPersons',
        'linked_financial_advisors' => 'setLinkedFinancialAdvisors',
        'linked_appraisers' => 'setLinkedAppraisers',
        'linked_clients' => 'setLinkedClients',
        'linked_offering_agencies' => 'setLinkedOfferingAgencies',
        'linked_purchasing_brokers' => 'setLinkedPurchasingBrokers',
        'linked_inspectors' => 'setLinkedInspectors',
        'linked_stylists' => 'setLinkedStylists',
        'linked_photographers' => 'setLinkedPhotographers',
        'linked_potentials' => 'setLinkedPotentials',
        'linked_occupants' => 'setLinkedOccupants',
        'linked_people_who_opted' => 'setLinkedPeopleWhoOpted',
        'linked_project_developers' => 'setLinkedProjectDevelopers',
        'lot_description_text' => 'setLotDescriptionText',
        'mandate_date_time' => 'setMandateDateTime',
        'maps' => 'setMaps',
        'office_id' => 'setOfficeId',
        'open_house' => 'setOpenHouse',
        'other_contract_source' => 'setOtherContractSource',
        'other_floors_text' => 'setOtherFloorsText',
        'parking_text' => 'setParkingText',
        'parties_description_text' => 'setPartiesDescriptionText',
        'peculiarities_text' => 'setPeculiaritiesText',
        'photos' => 'setPhotos',
        'price_description_text' => 'setPriceDescriptionText',
        'products_to_pass_on' => 'setProductsToPassOn',
        'registration_conditions' => 'setRegistrationConditions',
        'rent_offer' => 'setRentOffer',
        'sale_offer' => 'setSaleOffer',
        'second_floor_text' => 'setSecondFloorText',
        'special_text' => 'setSpecialText',
        'tags' => 'setTags',
        'third_party_media' => 'setThirdPartyMedia',
        'title_text' => 'setTitleText',
        'videos' => 'setVideos',
        'waiting_time' => 'setWaitingTime',
        'web_address' => 'setWebAddress',
        'withdrawn_date_time' => 'setWithdrawnDateTime',
        'withdraw_reason' => 'setWithdrawReason'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'summary' => 'getSummary',
        'address' => 'getAddress',
        'status' => 'getStatus',
        'linked_acquisition_assignment' => 'getLinkedAcquisitionAssignment',
        'agricultural_subtype_other' => 'getAgriculturalSubtypeOther',
        'air_treatments' => 'getAirTreatments',
        'apartment_characteristic' => 'getApartmentCharacteristic',
        'apartment_sort' => 'getApartmentSort',
        'approval_marks' => 'getApprovalMarks',
        'beverages_count_of_seats' => 'getBeveragesCountOfSeats',
        'beverages_hospitality_industry_area' => 'getBeveragesHospitalityIndustryArea',
        'beverages_non_hospitality_industry_area' => 'getBeveragesNonHospitalityIndustryArea',
        'boiler_fuel' => 'getBoilerFuel',
        'boiler_property' => 'getBoilerProperty',
        'boiler_type' => 'getBoilerType',
        'boiler_year_of_construction' => 'getBoilerYearOfConstruction',
        'building_capacity' => 'getBuildingCapacity',
        'building_capacity_area_percentage' => 'getBuildingCapacityAreaPercentage',
        'building_layer' => 'getBuildingLayer',
        'building_layer_amount' => 'getBuildingLayerAmount',
        'business_expenses' => 'getBusinessExpenses',
        'company_listings' => 'getCompanyListings',
        'business_rights' => 'getBusinessRights',
        'b_vo' => 'getBVo',
        'capacity' => 'getCapacity',
        'comfort_quality' => 'getComfortQuality',
        'company_name' => 'getCompanyName',
        'complete_space' => 'getCompleteSpace',
        'construction_options' => 'getConstructionOptions',
        'building_related_outdoor_space' => 'getBuildingRelatedOutdoorSpace',
        'contents' => 'getContents',
        'count_of_hotelrooms' => 'getCountOfHotelrooms',
        'current_destinationd' => 'getCurrentDestinationd',
        'current_usages' => 'getCurrentUsages',
        'description' => 'getDescription',
        'display_name' => 'getDisplayName',
        'drainage' => 'getDrainage',
        'drainage_horse_rack' => 'getDrainageHorseRack',
        'energy_label' => 'getEnergyLabel',
        'exclusive_status' => 'getExclusiveStatus',
        'external_storage' => 'getExternalStorage',
        'facilities' => 'getFacilities',
        'fastfood_count_of_seats' => 'getFastfoodCountOfSeats',
        'fastfood_hospitality_industry_area' => 'getFastfoodHospitalityIndustryArea',
        'features' => 'getFeatures',
        'floor_level' => 'getFloorLevel',
        'floor_load' => 'getFloorLoad',
        'floors' => 'getFloors',
        'free_height' => 'getFreeHeight',
        'free_overcurrent' => 'getFreeOvercurrent',
        'front_width' => 'getFrontWidth',
        'garages' => 'getGarages',
        'gardens' => 'getGardens',
        'ground_property' => 'getGroundProperty',
        'ground_usage' => 'getGroundUsage',
        'alv_main_plot_destination' => 'getAlvMainPlotDestination',
        'has_cable_tv' => 'getHasCableTv',
        'has_combi_boiler' => 'getHasCombiBoiler',
        'has_drainage' => 'getHasDrainage',
        'has_electricity_connection' => 'getHasElectricityConnection',
        'has_electric_power' => 'getHasElectricPower',
        'has_gas_connection' => 'getHasGasConnection',
        'has_hygiene_barrier' => 'getHasHygieneBarrier',
        'has_internet_connection' => 'getHasInternetConnection',
        'has_office_space' => 'getHasOfficeSpace',
        'has_open_porch' => 'getHasOpenPorch',
        'has_own_entrance' => 'getHasOwnEntrance',
        'has_owners_association_buildings_insurance' => 'getHasOwnersAssociationBuildingsInsurance',
        'has_owners_association_maintenance_expectations' => 'getHasOwnersAssociationMaintenanceExpectations',
        'has_owners_association_multiple_years_maintenance_plan' => 'getHasOwnersAssociationMultipleYearsMaintenancePlan',
        'has_owners_association_periodic_contribution' => 'getHasOwnersAssociationPeriodicContribution',
        'has_owners_association_reserve_fund' => 'getHasOwnersAssociationReserveFund',
        'has_owners_association_yearly_meeting' => 'getHasOwnersAssociationYearlyMeeting',
        'has_road_connection' => 'getHasRoadConnection',
        'has_septic_tank' => 'getHasSepticTank',
        'has_sewage_connection' => 'getHasSewageConnection',
        'has_tank' => 'getHasTank',
        'has_terrain' => 'getHasTerrain',
        'has_ventilation' => 'getHasVentilation',
        'has_water_connection' => 'getHasWaterConnection',
        'has_house' => 'getHasHouse',
        'heating' => 'getHeating',
        'home_plot' => 'getHomePlot',
        'horse_company_subtype' => 'getHorseCompanySubtype',
        'horse_trough_location' => 'getHorseTroughLocation',
        'horticultural_company_type' => 'getHorticulturalCompanyType',
        'hospitality_permitted' => 'getHospitalityPermitted',
        'beverage_hospitality_types' => 'getBeverageHospitalityTypes',
        'fastfood_hospitality_sector_types' => 'getFastfoodHospitalitySectorTypes',
        'restaurant_hospitality_sector_types' => 'getRestaurantHospitalitySectorTypes',
        'hotel_hospitality_sector_types' => 'getHotelHospitalitySectorTypes',
        'hotel_hospitality_industry_area' => 'getHotelHospitalityIndustryArea',
        'hotel_non_hospitality_industry_area' => 'getHotelNonHospitalityIndustryArea',
        'house_characteristic' => 'getHouseCharacteristic',
        'house_sort' => 'getHouseSort',
        'house_type' => 'getHouseType',
        'in_dense_hospitality_area' => 'getInDenseHospitalityArea',
        'indoor_parking_capacity' => 'getIndoorParkingCapacity',
        'industrial_building_facilities' => 'getIndustrialBuildingFacilities',
        'in_park' => 'getInPark',
        'insulation_types' => 'getInsulationTypes',
        'insulation_types_barn_storage' => 'getInsulationTypesBarnStorage',
        'in_units_from' => 'getInUnitsFrom',
        'is_barn_storage_available' => 'getIsBarnStorageAvailable',
        'is_biological_company' => 'getIsBiologicalCompany',
        'is_building_ready' => 'getIsBuildingReady',
        'is_home_plot' => 'getIsHomePlot',
        'is_house_in_need_of_refurbishment' => 'getIsHouseInNeedOfRefurbishment',
        'is_new_estate' => 'getIsNewEstate',
        'is_office_space_available' => 'getIsOfficeSpaceAvailable',
        'is_owners_association_checklist_available' => 'getIsOwnersAssociationChecklistAvailable',
        'is_owners_association_registered_kv_k' => 'getIsOwnersAssociationRegisteredKvK',
        'is_permanently_inhabited' => 'getIsPermanentlyInhabited',
        'is_recreational' => 'getIsRecreational',
        'is_shared' => 'getIsShared',
        'is_skal_certified' => 'getIsSkalCertified',
        'is_target_home' => 'getIsTargetHome',
        'is_turnkey' => 'getIsTurnkey',
        'land_property_sub_type' => 'getLandPropertySubType',
        'length' => 'getLength',
        'listing_type' => 'getListingType',
        'living_room_surface' => 'getLivingRoomSurface',
        'location_places' => 'getLocationPlaces',
        'logistic_function' => 'getLogisticFunction',
        'loose_soil_price' => 'getLooseSoilPrice',
        'lot_name' => 'getLotName',
        'maintenance_inside' => 'getMaintenanceInside',
        'maintenance_outside' => 'getMaintenanceOutside',
        'number_of_animal_places' => 'getNumberOfAnimalPlaces',
        'number_of_animals' => 'getNumberOfAnimals',
        'number_of_bath_rooms' => 'getNumberOfBathRooms',
        'number_of_bed_rooms' => 'getNumberOfBedRooms',
        'number_of_floors' => 'getNumberOfFloors',
        'number_of_garages' => 'getNumberOfGarages',
        'number_of_gardens' => 'getNumberOfGardens',
        'number_of_kitchens' => 'getNumberOfKitchens',
        'number_of_meat_pigs' => 'getNumberOfMeatPigs',
        'number_of_mooring_places_milking_cattle' => 'getNumberOfMooringPlacesMilkingCattle',
        'number_of_mooring_places_young_cattle' => 'getNumberOfMooringPlacesYoungCattle',
        'number_of_rooms' => 'getNumberOfRooms',
        'number_of_showers' => 'getNumberOfShowers',
        'number_of_sowing_sights' => 'getNumberOfSowingSights',
        'number_of_toilets' => 'getNumberOfToilets',
        'number_of_weaned_piglets' => 'getNumberOfWeanedPiglets',
        'number_of_breeding_pigs' => 'getNumberOfBreedingPigs',
        'number_of_meat_pig_stables' => 'getNumberOfMeatPigStables',
        'number_of_breeding_pig_stables' => 'getNumberOfBreedingPigStables',
        'number_of_piglet_stables' => 'getNumberOfPigletStables',
        'office_facilities' => 'getOfficeFacilities',
        'office_space_air_treatments' => 'getOfficeSpaceAirTreatments',
        'office_space_building_layer_number' => 'getOfficeSpaceBuildingLayerNumber',
        'office_space_facilities' => 'getOfficeSpaceFacilities',
        'office_space_surface' => 'getOfficeSpaceSurface',
        'other_inside_spaces' => 'getOtherInsideSpaces',
        'parcel_surface' => 'getParcelSurface',
        'parking_facilities' => 'getParkingFacilities',
        'parking_type' => 'getParkingType',
        'paved_percentage' => 'getPavedPercentage',
        'pavement_type' => 'getPavementType',
        'peculiarities' => 'getPeculiarities',
        'pig_company_type' => 'getPigCompanyType',
        'points_of_interest' => 'getPointsOfInterest',
        'pollution' => 'getPollution',
        'poultry_farming_subtype' => 'getPoultryFarmingSubtype',
        'public_oriented_services' => 'getPublicOrientedServices',
        'public_reference' => 'getPublicReference',
        'real_estate_group' => 'getRealEstateGroup',
        'region_keys_dsv' => 'getRegionKeysDsv',
        'renovation_year' => 'getRenovationYear',
        'residential_building' => 'getResidentialBuilding',
        'residential_subtype_other' => 'getResidentialSubtypeOther',
        'restaurant_count_of_seats' => 'getRestaurantCountOfSeats',
        'restaurant_hospitality_industry_area' => 'getRestaurantHospitalityIndustryArea',
        'restaurant_non_hospitality_industry_area' => 'getRestaurantNonHospitalityIndustryArea',
        'retail' => 'getRetail',
        'revenue_per_year' => 'getRevenuePerYear',
        'roof' => 'getRoof',
        'secondary_listing_types' => 'getSecondaryListingTypes',
        'sector_limitation' => 'getSectorLimitation',
        'showroom' => 'getShowroom',
        'size' => 'getSize',
        'soil_type' => 'getSoilType',
        'status_rented' => 'getStatusRented',
        'step_mill' => 'getStepMill',
        'number_of_horse_boxes' => 'getNumberOfHorseBoxes',
        'storage_has_attic' => 'getStorageHasAttic',
        'storage_has_electra' => 'getStorageHasElectra',
        'storage_has_heating' => 'getStorageHasHeating',
        'storage_has_water' => 'getStorageHasWater',
        'storage_insulation_types' => 'getStorageInsulationTypes',
        'storage_room_type' => 'getStorageRoomType',
        'sub_type' => 'getSubType',
        'surface_glass_upholstery' => 'getSurfaceGlassUpholstery',
        'terrace' => 'getTerrace',
        'terrain_building_volume' => 'getTerrainBuildingVolume',
        'terrain_building_volume_area_percentage' => 'getTerrainBuildingVolumeAreaPercentage',
        'terrain_surface' => 'getTerrainSurface',
        'total_parking_capacity' => 'getTotalParkingCapacity',
        'type_code_house' => 'getTypeCodeHouse',
        'type_of_floor_floors' => 'getTypeOfFloorFloors',
        'type_of_floor_ground_floor' => 'getTypeOfFloorGroundFloor',
        'types_of_communal_area' => 'getTypesOfCommunalArea',
        'types_of_window_frames' => 'getTypesOfWindowFrames',
        'usable_area' => 'getUsableArea',
        'cattle_farming_subtype' => 'getCattleFarmingSubtype',
        'v_vo' => 'getVVo',
        'warm_water_types' => 'getWarmWaterTypes',
        'welfare_state' => 'getWelfareState',
        'width' => 'getWidth',
        'wvo' => 'getWvo',
        'year_of_construction' => 'getYearOfConstruction',
        'count_of_pitches' => 'getCountOfPitches',
        'has_annual_pitches' => 'getHasAnnualPitches',
        'count_of_accommodations' => 'getCountOfAccommodations',
        'capacity_in_number_of_persons' => 'getCapacityInNumberOfPersons',
        'leisure_type' => 'getLeisureType',
        'leisure_facility_types' => 'getLeisureFacilityTypes',
        'investment_type' => 'getInvestmentType',
        'horeca_sector_types' => 'getHorecaSectorTypes',
        'remaining_term_of_a_contract' => 'getRemainingTermOfAContract',
        'vacancy_area' => 'getVacancyArea',
        'vacancy_rental_value' => 'getVacancyRentalValue',
        'gross_initial_yield' => 'getGrossInitialYield',
        'gross_rental_income' => 'getGrossRentalIncome',
        'count_of_tenants' => 'getCountOfTenants',
        'count_of_separately_lettable_housing_units' => 'getCountOfSeparatelyLettableHousingUnits',
        'portefeuille' => 'getPortefeuille',
        'social_property_type' => 'getSocialPropertyType',
        'social_property_facility_types' => 'getSocialPropertyFacilityTypes',
        'redesignation_possible' => 'getRedesignationPossible',
        'return_of_services' => 'getReturnOfServices',
        'practic_area' => 'getPracticArea',
        'practic_area_capacity' => 'getPracticAreaCapacity',
        'with_accommodations' => 'getWithAccommodations',
        'count_of_housing_units_in_accommodations' => 'getCountOfHousingUnitsInAccommodations',
        'shared_accommodations' => 'getSharedAccommodations',
        'shared_sanitary_facilities' => 'getSharedSanitaryFacilities',
        'name_of_building' => 'getNameOfBuilding',
        'residential_facilities' => 'getResidentialFacilities',
        'home_plot_surface' => 'getHomePlotSurface',
        'number_of_veal_calves' => 'getNumberOfVealCalves',
        'has_green_label' => 'getHasGreenLabel',
        'poultry_housing_types' => 'getPoultryHousingTypes',
        'bog_combination_object_type' => 'getBogCombinationObjectType',
        'bog_combination_object_situation' => 'getBogCombinationObjectSituation',
        'bog_combination_object_status' => 'getBogCombinationObjectStatus',
        'bog_combination_object_area' => 'getBogCombinationObjectArea',
        'glass_structures' => 'getGlassStructures',
        'riding_halls' => 'getRidingHalls',
        'linked_folder_tree' => 'getLinkedFolderTree',
        'linked_bids' => 'getLinkedBids',
        'acceptance_details' => 'getAcceptanceDetails',
        'advertisement_text' => 'getAdvertisementText',
        'assignment_phase' => 'getAssignmentPhase',
        'availability_status' => 'getAvailabilityStatus',
        'balcony_text' => 'getBalconyText',
        'brochures' => 'getBrochures',
        'business_partners' => 'getBusinessPartners',
        'calculate_price_per_m2' => 'getCalculatePricePerM2',
        'changes_number_of_inside_parking_lots' => 'getChangesNumberOfInsideParkingLots',
        'changes_number_of_parking_lots' => 'getChangesNumberOfParkingLots',
        'changes_surface' => 'getChangesSurface',
        'confidentiality_level' => 'getConfidentialityLevel',
        'contract_reason' => 'getContractReason',
        'contract_source' => 'getContractSource',
        'end_date_publication' => 'getEndDatePublication',
        'environment_text' => 'getEnvironmentText',
        'first_floor_text' => 'getFirstFloorText',
        'for_rent' => 'getForRent',
        'for_sale' => 'getForSale',
        'gardens_text' => 'getGardensText',
        'ground_floor_text' => 'getGroundFloorText',
        'hide_on_funda_until' => 'getHideOnFundaUntil',
        'funda_postal_code' => 'getFundaPostalCode',
        'funda_street' => 'getFundaStreet',
        'funda_locality' => 'getFundaLocality',
        'is_temporarily_removed_from_funda' => 'getIsTemporarilyRemovedFromFunda',
        'hide_price' => 'getHidePrice',
        'import_details' => 'getImportDetails',
        'is_cleared' => 'getIsCleared',
        'is_confidential' => 'getIsConfidential',
        'is_private' => 'getIsPrivate',
        'is_production_rights' => 'getIsProductionRights',
        'is_self_interest' => 'getIsSelfInterest',
        'is_special' => 'getIsSpecial',
        'is_topper' => 'getIsTopper',
        'is_transaction_data_confidential' => 'getIsTransactionDataConfidential',
        'linked_company_listings' => 'getLinkedCompanyListings',
        'linked_applicants' => 'getLinkedApplicants',
        'linked_notaries' => 'getLinkedNotaries',
        'linked_property_managers' => 'getLinkedPropertyManagers',
        'linked_vendors' => 'getLinkedVendors',
        'linked_tenant_representation_brokers' => 'getLinkedTenantRepresentationBrokers',
        'linked_rental_agents' => 'getLinkedRentalAgents',
        'linked_sales_brokers' => 'getLinkedSalesBrokers',
        'linked_contact_persons' => 'getLinkedContactPersons',
        'linked_financial_advisors' => 'getLinkedFinancialAdvisors',
        'linked_appraisers' => 'getLinkedAppraisers',
        'linked_clients' => 'getLinkedClients',
        'linked_offering_agencies' => 'getLinkedOfferingAgencies',
        'linked_purchasing_brokers' => 'getLinkedPurchasingBrokers',
        'linked_inspectors' => 'getLinkedInspectors',
        'linked_stylists' => 'getLinkedStylists',
        'linked_photographers' => 'getLinkedPhotographers',
        'linked_potentials' => 'getLinkedPotentials',
        'linked_occupants' => 'getLinkedOccupants',
        'linked_people_who_opted' => 'getLinkedPeopleWhoOpted',
        'linked_project_developers' => 'getLinkedProjectDevelopers',
        'lot_description_text' => 'getLotDescriptionText',
        'mandate_date_time' => 'getMandateDateTime',
        'maps' => 'getMaps',
        'office_id' => 'getOfficeId',
        'open_house' => 'getOpenHouse',
        'other_contract_source' => 'getOtherContractSource',
        'other_floors_text' => 'getOtherFloorsText',
        'parking_text' => 'getParkingText',
        'parties_description_text' => 'getPartiesDescriptionText',
        'peculiarities_text' => 'getPeculiaritiesText',
        'photos' => 'getPhotos',
        'price_description_text' => 'getPriceDescriptionText',
        'products_to_pass_on' => 'getProductsToPassOn',
        'registration_conditions' => 'getRegistrationConditions',
        'rent_offer' => 'getRentOffer',
        'sale_offer' => 'getSaleOffer',
        'second_floor_text' => 'getSecondFloorText',
        'special_text' => 'getSpecialText',
        'tags' => 'getTags',
        'third_party_media' => 'getThirdPartyMedia',
        'title_text' => 'getTitleText',
        'videos' => 'getVideos',
        'waiting_time' => 'getWaitingTime',
        'web_address' => 'getWebAddress',
        'withdrawn_date_time' => 'getWithdrawnDateTime',
        'withdraw_reason' => 'getWithdrawReason'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['summary'] = isset($data['summary']) ? $data['summary'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['linked_acquisition_assignment'] = isset($data['linked_acquisition_assignment']) ? $data['linked_acquisition_assignment'] : null;
        $this->container['agricultural_subtype_other'] = isset($data['agricultural_subtype_other']) ? $data['agricultural_subtype_other'] : null;
        $this->container['air_treatments'] = isset($data['air_treatments']) ? $data['air_treatments'] : null;
        $this->container['apartment_characteristic'] = isset($data['apartment_characteristic']) ? $data['apartment_characteristic'] : null;
        $this->container['apartment_sort'] = isset($data['apartment_sort']) ? $data['apartment_sort'] : null;
        $this->container['approval_marks'] = isset($data['approval_marks']) ? $data['approval_marks'] : null;
        $this->container['beverages_count_of_seats'] = isset($data['beverages_count_of_seats']) ? $data['beverages_count_of_seats'] : null;
        $this->container['beverages_hospitality_industry_area'] = isset($data['beverages_hospitality_industry_area']) ? $data['beverages_hospitality_industry_area'] : null;
        $this->container['beverages_non_hospitality_industry_area'] = isset($data['beverages_non_hospitality_industry_area']) ? $data['beverages_non_hospitality_industry_area'] : null;
        $this->container['boiler_fuel'] = isset($data['boiler_fuel']) ? $data['boiler_fuel'] : null;
        $this->container['boiler_property'] = isset($data['boiler_property']) ? $data['boiler_property'] : null;
        $this->container['boiler_type'] = isset($data['boiler_type']) ? $data['boiler_type'] : '';
        $this->container['boiler_year_of_construction'] = isset($data['boiler_year_of_construction']) ? $data['boiler_year_of_construction'] : null;
        $this->container['building_capacity'] = isset($data['building_capacity']) ? $data['building_capacity'] : null;
        $this->container['building_capacity_area_percentage'] = isset($data['building_capacity_area_percentage']) ? $data['building_capacity_area_percentage'] : null;
        $this->container['building_layer'] = isset($data['building_layer']) ? $data['building_layer'] : null;
        $this->container['building_layer_amount'] = isset($data['building_layer_amount']) ? $data['building_layer_amount'] : null;
        $this->container['business_expenses'] = isset($data['business_expenses']) ? $data['business_expenses'] : null;
        $this->container['company_listings'] = isset($data['company_listings']) ? $data['company_listings'] : null;
        $this->container['business_rights'] = isset($data['business_rights']) ? $data['business_rights'] : null;
        $this->container['b_vo'] = isset($data['b_vo']) ? $data['b_vo'] : null;
        $this->container['capacity'] = isset($data['capacity']) ? $data['capacity'] : null;
        $this->container['comfort_quality'] = isset($data['comfort_quality']) ? $data['comfort_quality'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : '';
        $this->container['complete_space'] = isset($data['complete_space']) ? $data['complete_space'] : null;
        $this->container['construction_options'] = isset($data['construction_options']) ? $data['construction_options'] : null;
        $this->container['building_related_outdoor_space'] = isset($data['building_related_outdoor_space']) ? $data['building_related_outdoor_space'] : null;
        $this->container['contents'] = isset($data['contents']) ? $data['contents'] : null;
        $this->container['count_of_hotelrooms'] = isset($data['count_of_hotelrooms']) ? $data['count_of_hotelrooms'] : null;
        $this->container['current_destinationd'] = isset($data['current_destinationd']) ? $data['current_destinationd'] : null;
        $this->container['current_usages'] = isset($data['current_usages']) ? $data['current_usages'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['display_name'] = isset($data['display_name']) ? $data['display_name'] : '';
        $this->container['drainage'] = isset($data['drainage']) ? $data['drainage'] : null;
        $this->container['drainage_horse_rack'] = isset($data['drainage_horse_rack']) ? $data['drainage_horse_rack'] : null;
        $this->container['energy_label'] = isset($data['energy_label']) ? $data['energy_label'] : null;
        $this->container['exclusive_status'] = isset($data['exclusive_status']) ? $data['exclusive_status'] : null;
        $this->container['external_storage'] = isset($data['external_storage']) ? $data['external_storage'] : null;
        $this->container['facilities'] = isset($data['facilities']) ? $data['facilities'] : null;
        $this->container['fastfood_count_of_seats'] = isset($data['fastfood_count_of_seats']) ? $data['fastfood_count_of_seats'] : null;
        $this->container['fastfood_hospitality_industry_area'] = isset($data['fastfood_hospitality_industry_area']) ? $data['fastfood_hospitality_industry_area'] : null;
        $this->container['features'] = isset($data['features']) ? $data['features'] : null;
        $this->container['floor_level'] = isset($data['floor_level']) ? $data['floor_level'] : null;
        $this->container['floor_load'] = isset($data['floor_load']) ? $data['floor_load'] : null;
        $this->container['floors'] = isset($data['floors']) ? $data['floors'] : null;
        $this->container['free_height'] = isset($data['free_height']) ? $data['free_height'] : null;
        $this->container['free_overcurrent'] = isset($data['free_overcurrent']) ? $data['free_overcurrent'] : null;
        $this->container['front_width'] = isset($data['front_width']) ? $data['front_width'] : null;
        $this->container['garages'] = isset($data['garages']) ? $data['garages'] : null;
        $this->container['gardens'] = isset($data['gardens']) ? $data['gardens'] : null;
        $this->container['ground_property'] = isset($data['ground_property']) ? $data['ground_property'] : null;
        $this->container['ground_usage'] = isset($data['ground_usage']) ? $data['ground_usage'] : null;
        $this->container['alv_main_plot_destination'] = isset($data['alv_main_plot_destination']) ? $data['alv_main_plot_destination'] : null;
        $this->container['has_cable_tv'] = isset($data['has_cable_tv']) ? $data['has_cable_tv'] : null;
        $this->container['has_combi_boiler'] = isset($data['has_combi_boiler']) ? $data['has_combi_boiler'] : null;
        $this->container['has_drainage'] = isset($data['has_drainage']) ? $data['has_drainage'] : null;
        $this->container['has_electricity_connection'] = isset($data['has_electricity_connection']) ? $data['has_electricity_connection'] : null;
        $this->container['has_electric_power'] = isset($data['has_electric_power']) ? $data['has_electric_power'] : null;
        $this->container['has_gas_connection'] = isset($data['has_gas_connection']) ? $data['has_gas_connection'] : null;
        $this->container['has_hygiene_barrier'] = isset($data['has_hygiene_barrier']) ? $data['has_hygiene_barrier'] : null;
        $this->container['has_internet_connection'] = isset($data['has_internet_connection']) ? $data['has_internet_connection'] : null;
        $this->container['has_office_space'] = isset($data['has_office_space']) ? $data['has_office_space'] : null;
        $this->container['has_open_porch'] = isset($data['has_open_porch']) ? $data['has_open_porch'] : null;
        $this->container['has_own_entrance'] = isset($data['has_own_entrance']) ? $data['has_own_entrance'] : null;
        $this->container['has_owners_association_buildings_insurance'] = isset($data['has_owners_association_buildings_insurance']) ? $data['has_owners_association_buildings_insurance'] : null;
        $this->container['has_owners_association_maintenance_expectations'] = isset($data['has_owners_association_maintenance_expectations']) ? $data['has_owners_association_maintenance_expectations'] : null;
        $this->container['has_owners_association_multiple_years_maintenance_plan'] = isset($data['has_owners_association_multiple_years_maintenance_plan']) ? $data['has_owners_association_multiple_years_maintenance_plan'] : null;
        $this->container['has_owners_association_periodic_contribution'] = isset($data['has_owners_association_periodic_contribution']) ? $data['has_owners_association_periodic_contribution'] : null;
        $this->container['has_owners_association_reserve_fund'] = isset($data['has_owners_association_reserve_fund']) ? $data['has_owners_association_reserve_fund'] : null;
        $this->container['has_owners_association_yearly_meeting'] = isset($data['has_owners_association_yearly_meeting']) ? $data['has_owners_association_yearly_meeting'] : null;
        $this->container['has_road_connection'] = isset($data['has_road_connection']) ? $data['has_road_connection'] : null;
        $this->container['has_septic_tank'] = isset($data['has_septic_tank']) ? $data['has_septic_tank'] : null;
        $this->container['has_sewage_connection'] = isset($data['has_sewage_connection']) ? $data['has_sewage_connection'] : null;
        $this->container['has_tank'] = isset($data['has_tank']) ? $data['has_tank'] : null;
        $this->container['has_terrain'] = isset($data['has_terrain']) ? $data['has_terrain'] : null;
        $this->container['has_ventilation'] = isset($data['has_ventilation']) ? $data['has_ventilation'] : null;
        $this->container['has_water_connection'] = isset($data['has_water_connection']) ? $data['has_water_connection'] : null;
        $this->container['has_house'] = isset($data['has_house']) ? $data['has_house'] : null;
        $this->container['heating'] = isset($data['heating']) ? $data['heating'] : null;
        $this->container['home_plot'] = isset($data['home_plot']) ? $data['home_plot'] : null;
        $this->container['horse_company_subtype'] = isset($data['horse_company_subtype']) ? $data['horse_company_subtype'] : null;
        $this->container['horse_trough_location'] = isset($data['horse_trough_location']) ? $data['horse_trough_location'] : null;
        $this->container['horticultural_company_type'] = isset($data['horticultural_company_type']) ? $data['horticultural_company_type'] : null;
        $this->container['hospitality_permitted'] = isset($data['hospitality_permitted']) ? $data['hospitality_permitted'] : null;
        $this->container['beverage_hospitality_types'] = isset($data['beverage_hospitality_types']) ? $data['beverage_hospitality_types'] : null;
        $this->container['fastfood_hospitality_sector_types'] = isset($data['fastfood_hospitality_sector_types']) ? $data['fastfood_hospitality_sector_types'] : null;
        $this->container['restaurant_hospitality_sector_types'] = isset($data['restaurant_hospitality_sector_types']) ? $data['restaurant_hospitality_sector_types'] : null;
        $this->container['hotel_hospitality_sector_types'] = isset($data['hotel_hospitality_sector_types']) ? $data['hotel_hospitality_sector_types'] : null;
        $this->container['hotel_hospitality_industry_area'] = isset($data['hotel_hospitality_industry_area']) ? $data['hotel_hospitality_industry_area'] : null;
        $this->container['hotel_non_hospitality_industry_area'] = isset($data['hotel_non_hospitality_industry_area']) ? $data['hotel_non_hospitality_industry_area'] : null;
        $this->container['house_characteristic'] = isset($data['house_characteristic']) ? $data['house_characteristic'] : null;
        $this->container['house_sort'] = isset($data['house_sort']) ? $data['house_sort'] : null;
        $this->container['house_type'] = isset($data['house_type']) ? $data['house_type'] : null;
        $this->container['in_dense_hospitality_area'] = isset($data['in_dense_hospitality_area']) ? $data['in_dense_hospitality_area'] : null;
        $this->container['indoor_parking_capacity'] = isset($data['indoor_parking_capacity']) ? $data['indoor_parking_capacity'] : null;
        $this->container['industrial_building_facilities'] = isset($data['industrial_building_facilities']) ? $data['industrial_building_facilities'] : null;
        $this->container['in_park'] = isset($data['in_park']) ? $data['in_park'] : null;
        $this->container['insulation_types'] = isset($data['insulation_types']) ? $data['insulation_types'] : null;
        $this->container['insulation_types_barn_storage'] = isset($data['insulation_types_barn_storage']) ? $data['insulation_types_barn_storage'] : null;
        $this->container['in_units_from'] = isset($data['in_units_from']) ? $data['in_units_from'] : null;
        $this->container['is_barn_storage_available'] = isset($data['is_barn_storage_available']) ? $data['is_barn_storage_available'] : null;
        $this->container['is_biological_company'] = isset($data['is_biological_company']) ? $data['is_biological_company'] : null;
        $this->container['is_building_ready'] = isset($data['is_building_ready']) ? $data['is_building_ready'] : null;
        $this->container['is_home_plot'] = isset($data['is_home_plot']) ? $data['is_home_plot'] : null;
        $this->container['is_house_in_need_of_refurbishment'] = isset($data['is_house_in_need_of_refurbishment']) ? $data['is_house_in_need_of_refurbishment'] : null;
        $this->container['is_new_estate'] = isset($data['is_new_estate']) ? $data['is_new_estate'] : null;
        $this->container['is_office_space_available'] = isset($data['is_office_space_available']) ? $data['is_office_space_available'] : null;
        $this->container['is_owners_association_checklist_available'] = isset($data['is_owners_association_checklist_available']) ? $data['is_owners_association_checklist_available'] : null;
        $this->container['is_owners_association_registered_kv_k'] = isset($data['is_owners_association_registered_kv_k']) ? $data['is_owners_association_registered_kv_k'] : null;
        $this->container['is_permanently_inhabited'] = isset($data['is_permanently_inhabited']) ? $data['is_permanently_inhabited'] : null;
        $this->container['is_recreational'] = isset($data['is_recreational']) ? $data['is_recreational'] : null;
        $this->container['is_shared'] = isset($data['is_shared']) ? $data['is_shared'] : null;
        $this->container['is_skal_certified'] = isset($data['is_skal_certified']) ? $data['is_skal_certified'] : null;
        $this->container['is_target_home'] = isset($data['is_target_home']) ? $data['is_target_home'] : null;
        $this->container['is_turnkey'] = isset($data['is_turnkey']) ? $data['is_turnkey'] : null;
        $this->container['land_property_sub_type'] = isset($data['land_property_sub_type']) ? $data['land_property_sub_type'] : null;
        $this->container['length'] = isset($data['length']) ? $data['length'] : null;
        $this->container['listing_type'] = isset($data['listing_type']) ? $data['listing_type'] : null;
        $this->container['living_room_surface'] = isset($data['living_room_surface']) ? $data['living_room_surface'] : null;
        $this->container['location_places'] = isset($data['location_places']) ? $data['location_places'] : null;
        $this->container['logistic_function'] = isset($data['logistic_function']) ? $data['logistic_function'] : null;
        $this->container['loose_soil_price'] = isset($data['loose_soil_price']) ? $data['loose_soil_price'] : null;
        $this->container['lot_name'] = isset($data['lot_name']) ? $data['lot_name'] : '';
        $this->container['maintenance_inside'] = isset($data['maintenance_inside']) ? $data['maintenance_inside'] : null;
        $this->container['maintenance_outside'] = isset($data['maintenance_outside']) ? $data['maintenance_outside'] : null;
        $this->container['number_of_animal_places'] = isset($data['number_of_animal_places']) ? $data['number_of_animal_places'] : null;
        $this->container['number_of_animals'] = isset($data['number_of_animals']) ? $data['number_of_animals'] : null;
        $this->container['number_of_bath_rooms'] = isset($data['number_of_bath_rooms']) ? $data['number_of_bath_rooms'] : null;
        $this->container['number_of_bed_rooms'] = isset($data['number_of_bed_rooms']) ? $data['number_of_bed_rooms'] : null;
        $this->container['number_of_floors'] = isset($data['number_of_floors']) ? $data['number_of_floors'] : null;
        $this->container['number_of_garages'] = isset($data['number_of_garages']) ? $data['number_of_garages'] : null;
        $this->container['number_of_gardens'] = isset($data['number_of_gardens']) ? $data['number_of_gardens'] : null;
        $this->container['number_of_kitchens'] = isset($data['number_of_kitchens']) ? $data['number_of_kitchens'] : null;
        $this->container['number_of_meat_pigs'] = isset($data['number_of_meat_pigs']) ? $data['number_of_meat_pigs'] : null;
        $this->container['number_of_mooring_places_milking_cattle'] = isset($data['number_of_mooring_places_milking_cattle']) ? $data['number_of_mooring_places_milking_cattle'] : null;
        $this->container['number_of_mooring_places_young_cattle'] = isset($data['number_of_mooring_places_young_cattle']) ? $data['number_of_mooring_places_young_cattle'] : null;
        $this->container['number_of_rooms'] = isset($data['number_of_rooms']) ? $data['number_of_rooms'] : null;
        $this->container['number_of_showers'] = isset($data['number_of_showers']) ? $data['number_of_showers'] : null;
        $this->container['number_of_sowing_sights'] = isset($data['number_of_sowing_sights']) ? $data['number_of_sowing_sights'] : null;
        $this->container['number_of_toilets'] = isset($data['number_of_toilets']) ? $data['number_of_toilets'] : null;
        $this->container['number_of_weaned_piglets'] = isset($data['number_of_weaned_piglets']) ? $data['number_of_weaned_piglets'] : null;
        $this->container['number_of_breeding_pigs'] = isset($data['number_of_breeding_pigs']) ? $data['number_of_breeding_pigs'] : null;
        $this->container['number_of_meat_pig_stables'] = isset($data['number_of_meat_pig_stables']) ? $data['number_of_meat_pig_stables'] : null;
        $this->container['number_of_breeding_pig_stables'] = isset($data['number_of_breeding_pig_stables']) ? $data['number_of_breeding_pig_stables'] : null;
        $this->container['number_of_piglet_stables'] = isset($data['number_of_piglet_stables']) ? $data['number_of_piglet_stables'] : null;
        $this->container['office_facilities'] = isset($data['office_facilities']) ? $data['office_facilities'] : null;
        $this->container['office_space_air_treatments'] = isset($data['office_space_air_treatments']) ? $data['office_space_air_treatments'] : null;
        $this->container['office_space_building_layer_number'] = isset($data['office_space_building_layer_number']) ? $data['office_space_building_layer_number'] : null;
        $this->container['office_space_facilities'] = isset($data['office_space_facilities']) ? $data['office_space_facilities'] : null;
        $this->container['office_space_surface'] = isset($data['office_space_surface']) ? $data['office_space_surface'] : null;
        $this->container['other_inside_spaces'] = isset($data['other_inside_spaces']) ? $data['other_inside_spaces'] : null;
        $this->container['parcel_surface'] = isset($data['parcel_surface']) ? $data['parcel_surface'] : null;
        $this->container['parking_facilities'] = isset($data['parking_facilities']) ? $data['parking_facilities'] : null;
        $this->container['parking_type'] = isset($data['parking_type']) ? $data['parking_type'] : null;
        $this->container['paved_percentage'] = isset($data['paved_percentage']) ? $data['paved_percentage'] : null;
        $this->container['pavement_type'] = isset($data['pavement_type']) ? $data['pavement_type'] : null;
        $this->container['peculiarities'] = isset($data['peculiarities']) ? $data['peculiarities'] : null;
        $this->container['pig_company_type'] = isset($data['pig_company_type']) ? $data['pig_company_type'] : null;
        $this->container['points_of_interest'] = isset($data['points_of_interest']) ? $data['points_of_interest'] : null;
        $this->container['pollution'] = isset($data['pollution']) ? $data['pollution'] : null;
        $this->container['poultry_farming_subtype'] = isset($data['poultry_farming_subtype']) ? $data['poultry_farming_subtype'] : null;
        $this->container['public_oriented_services'] = isset($data['public_oriented_services']) ? $data['public_oriented_services'] : null;
        $this->container['public_reference'] = isset($data['public_reference']) ? $data['public_reference'] : '';
        $this->container['real_estate_group'] = isset($data['real_estate_group']) ? $data['real_estate_group'] : null;
        $this->container['region_keys_dsv'] = isset($data['region_keys_dsv']) ? $data['region_keys_dsv'] : '';
        $this->container['renovation_year'] = isset($data['renovation_year']) ? $data['renovation_year'] : null;
        $this->container['residential_building'] = isset($data['residential_building']) ? $data['residential_building'] : null;
        $this->container['residential_subtype_other'] = isset($data['residential_subtype_other']) ? $data['residential_subtype_other'] : null;
        $this->container['restaurant_count_of_seats'] = isset($data['restaurant_count_of_seats']) ? $data['restaurant_count_of_seats'] : null;
        $this->container['restaurant_hospitality_industry_area'] = isset($data['restaurant_hospitality_industry_area']) ? $data['restaurant_hospitality_industry_area'] : null;
        $this->container['restaurant_non_hospitality_industry_area'] = isset($data['restaurant_non_hospitality_industry_area']) ? $data['restaurant_non_hospitality_industry_area'] : null;
        $this->container['retail'] = isset($data['retail']) ? $data['retail'] : null;
        $this->container['revenue_per_year'] = isset($data['revenue_per_year']) ? $data['revenue_per_year'] : null;
        $this->container['roof'] = isset($data['roof']) ? $data['roof'] : null;
        $this->container['secondary_listing_types'] = isset($data['secondary_listing_types']) ? $data['secondary_listing_types'] : null;
        $this->container['sector_limitation'] = isset($data['sector_limitation']) ? $data['sector_limitation'] : null;
        $this->container['showroom'] = isset($data['showroom']) ? $data['showroom'] : null;
        $this->container['size'] = isset($data['size']) ? $data['size'] : null;
        $this->container['soil_type'] = isset($data['soil_type']) ? $data['soil_type'] : null;
        $this->container['status_rented'] = isset($data['status_rented']) ? $data['status_rented'] : null;
        $this->container['step_mill'] = isset($data['step_mill']) ? $data['step_mill'] : null;
        $this->container['number_of_horse_boxes'] = isset($data['number_of_horse_boxes']) ? $data['number_of_horse_boxes'] : null;
        $this->container['storage_has_attic'] = isset($data['storage_has_attic']) ? $data['storage_has_attic'] : null;
        $this->container['storage_has_electra'] = isset($data['storage_has_electra']) ? $data['storage_has_electra'] : null;
        $this->container['storage_has_heating'] = isset($data['storage_has_heating']) ? $data['storage_has_heating'] : null;
        $this->container['storage_has_water'] = isset($data['storage_has_water']) ? $data['storage_has_water'] : null;
        $this->container['storage_insulation_types'] = isset($data['storage_insulation_types']) ? $data['storage_insulation_types'] : null;
        $this->container['storage_room_type'] = isset($data['storage_room_type']) ? $data['storage_room_type'] : null;
        $this->container['sub_type'] = isset($data['sub_type']) ? $data['sub_type'] : null;
        $this->container['surface_glass_upholstery'] = isset($data['surface_glass_upholstery']) ? $data['surface_glass_upholstery'] : null;
        $this->container['terrace'] = isset($data['terrace']) ? $data['terrace'] : null;
        $this->container['terrain_building_volume'] = isset($data['terrain_building_volume']) ? $data['terrain_building_volume'] : null;
        $this->container['terrain_building_volume_area_percentage'] = isset($data['terrain_building_volume_area_percentage']) ? $data['terrain_building_volume_area_percentage'] : null;
        $this->container['terrain_surface'] = isset($data['terrain_surface']) ? $data['terrain_surface'] : null;
        $this->container['total_parking_capacity'] = isset($data['total_parking_capacity']) ? $data['total_parking_capacity'] : null;
        $this->container['type_code_house'] = isset($data['type_code_house']) ? $data['type_code_house'] : null;
        $this->container['type_of_floor_floors'] = isset($data['type_of_floor_floors']) ? $data['type_of_floor_floors'] : null;
        $this->container['type_of_floor_ground_floor'] = isset($data['type_of_floor_ground_floor']) ? $data['type_of_floor_ground_floor'] : null;
        $this->container['types_of_communal_area'] = isset($data['types_of_communal_area']) ? $data['types_of_communal_area'] : null;
        $this->container['types_of_window_frames'] = isset($data['types_of_window_frames']) ? $data['types_of_window_frames'] : null;
        $this->container['usable_area'] = isset($data['usable_area']) ? $data['usable_area'] : null;
        $this->container['cattle_farming_subtype'] = isset($data['cattle_farming_subtype']) ? $data['cattle_farming_subtype'] : null;
        $this->container['v_vo'] = isset($data['v_vo']) ? $data['v_vo'] : null;
        $this->container['warm_water_types'] = isset($data['warm_water_types']) ? $data['warm_water_types'] : null;
        $this->container['welfare_state'] = isset($data['welfare_state']) ? $data['welfare_state'] : null;
        $this->container['width'] = isset($data['width']) ? $data['width'] : null;
        $this->container['wvo'] = isset($data['wvo']) ? $data['wvo'] : null;
        $this->container['year_of_construction'] = isset($data['year_of_construction']) ? $data['year_of_construction'] : null;
        $this->container['count_of_pitches'] = isset($data['count_of_pitches']) ? $data['count_of_pitches'] : null;
        $this->container['has_annual_pitches'] = isset($data['has_annual_pitches']) ? $data['has_annual_pitches'] : null;
        $this->container['count_of_accommodations'] = isset($data['count_of_accommodations']) ? $data['count_of_accommodations'] : null;
        $this->container['capacity_in_number_of_persons'] = isset($data['capacity_in_number_of_persons']) ? $data['capacity_in_number_of_persons'] : null;
        $this->container['leisure_type'] = isset($data['leisure_type']) ? $data['leisure_type'] : null;
        $this->container['leisure_facility_types'] = isset($data['leisure_facility_types']) ? $data['leisure_facility_types'] : null;
        $this->container['investment_type'] = isset($data['investment_type']) ? $data['investment_type'] : null;
        $this->container['horeca_sector_types'] = isset($data['horeca_sector_types']) ? $data['horeca_sector_types'] : null;
        $this->container['remaining_term_of_a_contract'] = isset($data['remaining_term_of_a_contract']) ? $data['remaining_term_of_a_contract'] : null;
        $this->container['vacancy_area'] = isset($data['vacancy_area']) ? $data['vacancy_area'] : null;
        $this->container['vacancy_rental_value'] = isset($data['vacancy_rental_value']) ? $data['vacancy_rental_value'] : null;
        $this->container['gross_initial_yield'] = isset($data['gross_initial_yield']) ? $data['gross_initial_yield'] : null;
        $this->container['gross_rental_income'] = isset($data['gross_rental_income']) ? $data['gross_rental_income'] : null;
        $this->container['count_of_tenants'] = isset($data['count_of_tenants']) ? $data['count_of_tenants'] : null;
        $this->container['count_of_separately_lettable_housing_units'] = isset($data['count_of_separately_lettable_housing_units']) ? $data['count_of_separately_lettable_housing_units'] : null;
        $this->container['portefeuille'] = isset($data['portefeuille']) ? $data['portefeuille'] : null;
        $this->container['social_property_type'] = isset($data['social_property_type']) ? $data['social_property_type'] : null;
        $this->container['social_property_facility_types'] = isset($data['social_property_facility_types']) ? $data['social_property_facility_types'] : null;
        $this->container['redesignation_possible'] = isset($data['redesignation_possible']) ? $data['redesignation_possible'] : null;
        $this->container['return_of_services'] = isset($data['return_of_services']) ? $data['return_of_services'] : null;
        $this->container['practic_area'] = isset($data['practic_area']) ? $data['practic_area'] : null;
        $this->container['practic_area_capacity'] = isset($data['practic_area_capacity']) ? $data['practic_area_capacity'] : null;
        $this->container['with_accommodations'] = isset($data['with_accommodations']) ? $data['with_accommodations'] : null;
        $this->container['count_of_housing_units_in_accommodations'] = isset($data['count_of_housing_units_in_accommodations']) ? $data['count_of_housing_units_in_accommodations'] : null;
        $this->container['shared_accommodations'] = isset($data['shared_accommodations']) ? $data['shared_accommodations'] : null;
        $this->container['shared_sanitary_facilities'] = isset($data['shared_sanitary_facilities']) ? $data['shared_sanitary_facilities'] : null;
        $this->container['name_of_building'] = isset($data['name_of_building']) ? $data['name_of_building'] : null;
        $this->container['residential_facilities'] = isset($data['residential_facilities']) ? $data['residential_facilities'] : null;
        $this->container['home_plot_surface'] = isset($data['home_plot_surface']) ? $data['home_plot_surface'] : null;
        $this->container['number_of_veal_calves'] = isset($data['number_of_veal_calves']) ? $data['number_of_veal_calves'] : null;
        $this->container['has_green_label'] = isset($data['has_green_label']) ? $data['has_green_label'] : null;
        $this->container['poultry_housing_types'] = isset($data['poultry_housing_types']) ? $data['poultry_housing_types'] : null;
        $this->container['bog_combination_object_type'] = isset($data['bog_combination_object_type']) ? $data['bog_combination_object_type'] : null;
        $this->container['bog_combination_object_situation'] = isset($data['bog_combination_object_situation']) ? $data['bog_combination_object_situation'] : null;
        $this->container['bog_combination_object_status'] = isset($data['bog_combination_object_status']) ? $data['bog_combination_object_status'] : null;
        $this->container['bog_combination_object_area'] = isset($data['bog_combination_object_area']) ? $data['bog_combination_object_area'] : null;
        $this->container['glass_structures'] = isset($data['glass_structures']) ? $data['glass_structures'] : null;
        $this->container['riding_halls'] = isset($data['riding_halls']) ? $data['riding_halls'] : null;
        $this->container['linked_folder_tree'] = isset($data['linked_folder_tree']) ? $data['linked_folder_tree'] : null;
        $this->container['linked_bids'] = isset($data['linked_bids']) ? $data['linked_bids'] : null;
        $this->container['acceptance_details'] = isset($data['acceptance_details']) ? $data['acceptance_details'] : null;
        $this->container['advertisement_text'] = isset($data['advertisement_text']) ? $data['advertisement_text'] : null;
        $this->container['assignment_phase'] = isset($data['assignment_phase']) ? $data['assignment_phase'] : null;
        $this->container['availability_status'] = isset($data['availability_status']) ? $data['availability_status'] : null;
        $this->container['balcony_text'] = isset($data['balcony_text']) ? $data['balcony_text'] : null;
        $this->container['brochures'] = isset($data['brochures']) ? $data['brochures'] : null;
        $this->container['business_partners'] = isset($data['business_partners']) ? $data['business_partners'] : null;
        $this->container['calculate_price_per_m2'] = isset($data['calculate_price_per_m2']) ? $data['calculate_price_per_m2'] : null;
        $this->container['changes_number_of_inside_parking_lots'] = isset($data['changes_number_of_inside_parking_lots']) ? $data['changes_number_of_inside_parking_lots'] : null;
        $this->container['changes_number_of_parking_lots'] = isset($data['changes_number_of_parking_lots']) ? $data['changes_number_of_parking_lots'] : null;
        $this->container['changes_surface'] = isset($data['changes_surface']) ? $data['changes_surface'] : null;
        $this->container['confidentiality_level'] = isset($data['confidentiality_level']) ? $data['confidentiality_level'] : null;
        $this->container['contract_reason'] = isset($data['contract_reason']) ? $data['contract_reason'] : null;
        $this->container['contract_source'] = isset($data['contract_source']) ? $data['contract_source'] : null;
        $this->container['end_date_publication'] = isset($data['end_date_publication']) ? $data['end_date_publication'] : null;
        $this->container['environment_text'] = isset($data['environment_text']) ? $data['environment_text'] : null;
        $this->container['first_floor_text'] = isset($data['first_floor_text']) ? $data['first_floor_text'] : null;
        $this->container['for_rent'] = isset($data['for_rent']) ? $data['for_rent'] : null;
        $this->container['for_sale'] = isset($data['for_sale']) ? $data['for_sale'] : null;
        $this->container['gardens_text'] = isset($data['gardens_text']) ? $data['gardens_text'] : null;
        $this->container['ground_floor_text'] = isset($data['ground_floor_text']) ? $data['ground_floor_text'] : null;
        $this->container['hide_on_funda_until'] = isset($data['hide_on_funda_until']) ? $data['hide_on_funda_until'] : null;
        $this->container['funda_postal_code'] = isset($data['funda_postal_code']) ? $data['funda_postal_code'] : null;
        $this->container['funda_street'] = isset($data['funda_street']) ? $data['funda_street'] : null;
        $this->container['funda_locality'] = isset($data['funda_locality']) ? $data['funda_locality'] : null;
        $this->container['is_temporarily_removed_from_funda'] = isset($data['is_temporarily_removed_from_funda']) ? $data['is_temporarily_removed_from_funda'] : null;
        $this->container['hide_price'] = isset($data['hide_price']) ? $data['hide_price'] : null;
        $this->container['import_details'] = isset($data['import_details']) ? $data['import_details'] : null;
        $this->container['is_cleared'] = isset($data['is_cleared']) ? $data['is_cleared'] : null;
        $this->container['is_confidential'] = isset($data['is_confidential']) ? $data['is_confidential'] : null;
        $this->container['is_private'] = isset($data['is_private']) ? $data['is_private'] : null;
        $this->container['is_production_rights'] = isset($data['is_production_rights']) ? $data['is_production_rights'] : null;
        $this->container['is_self_interest'] = isset($data['is_self_interest']) ? $data['is_self_interest'] : null;
        $this->container['is_special'] = isset($data['is_special']) ? $data['is_special'] : null;
        $this->container['is_topper'] = isset($data['is_topper']) ? $data['is_topper'] : null;
        $this->container['is_transaction_data_confidential'] = isset($data['is_transaction_data_confidential']) ? $data['is_transaction_data_confidential'] : null;
        $this->container['linked_company_listings'] = isset($data['linked_company_listings']) ? $data['linked_company_listings'] : null;
        $this->container['linked_applicants'] = isset($data['linked_applicants']) ? $data['linked_applicants'] : null;
        $this->container['linked_notaries'] = isset($data['linked_notaries']) ? $data['linked_notaries'] : null;
        $this->container['linked_property_managers'] = isset($data['linked_property_managers']) ? $data['linked_property_managers'] : null;
        $this->container['linked_vendors'] = isset($data['linked_vendors']) ? $data['linked_vendors'] : null;
        $this->container['linked_tenant_representation_brokers'] = isset($data['linked_tenant_representation_brokers']) ? $data['linked_tenant_representation_brokers'] : null;
        $this->container['linked_rental_agents'] = isset($data['linked_rental_agents']) ? $data['linked_rental_agents'] : null;
        $this->container['linked_sales_brokers'] = isset($data['linked_sales_brokers']) ? $data['linked_sales_brokers'] : null;
        $this->container['linked_contact_persons'] = isset($data['linked_contact_persons']) ? $data['linked_contact_persons'] : null;
        $this->container['linked_financial_advisors'] = isset($data['linked_financial_advisors']) ? $data['linked_financial_advisors'] : null;
        $this->container['linked_appraisers'] = isset($data['linked_appraisers']) ? $data['linked_appraisers'] : null;
        $this->container['linked_clients'] = isset($data['linked_clients']) ? $data['linked_clients'] : null;
        $this->container['linked_offering_agencies'] = isset($data['linked_offering_agencies']) ? $data['linked_offering_agencies'] : null;
        $this->container['linked_purchasing_brokers'] = isset($data['linked_purchasing_brokers']) ? $data['linked_purchasing_brokers'] : null;
        $this->container['linked_inspectors'] = isset($data['linked_inspectors']) ? $data['linked_inspectors'] : null;
        $this->container['linked_stylists'] = isset($data['linked_stylists']) ? $data['linked_stylists'] : null;
        $this->container['linked_photographers'] = isset($data['linked_photographers']) ? $data['linked_photographers'] : null;
        $this->container['linked_potentials'] = isset($data['linked_potentials']) ? $data['linked_potentials'] : null;
        $this->container['linked_occupants'] = isset($data['linked_occupants']) ? $data['linked_occupants'] : null;
        $this->container['linked_people_who_opted'] = isset($data['linked_people_who_opted']) ? $data['linked_people_who_opted'] : null;
        $this->container['linked_project_developers'] = isset($data['linked_project_developers']) ? $data['linked_project_developers'] : null;
        $this->container['lot_description_text'] = isset($data['lot_description_text']) ? $data['lot_description_text'] : null;
        $this->container['mandate_date_time'] = isset($data['mandate_date_time']) ? $data['mandate_date_time'] : null;
        $this->container['maps'] = isset($data['maps']) ? $data['maps'] : null;
        $this->container['office_id'] = isset($data['office_id']) ? $data['office_id'] : null;
        $this->container['open_house'] = isset($data['open_house']) ? $data['open_house'] : null;
        $this->container['other_contract_source'] = isset($data['other_contract_source']) ? $data['other_contract_source'] : null;
        $this->container['other_floors_text'] = isset($data['other_floors_text']) ? $data['other_floors_text'] : null;
        $this->container['parking_text'] = isset($data['parking_text']) ? $data['parking_text'] : null;
        $this->container['parties_description_text'] = isset($data['parties_description_text']) ? $data['parties_description_text'] : null;
        $this->container['peculiarities_text'] = isset($data['peculiarities_text']) ? $data['peculiarities_text'] : null;
        $this->container['photos'] = isset($data['photos']) ? $data['photos'] : null;
        $this->container['price_description_text'] = isset($data['price_description_text']) ? $data['price_description_text'] : null;
        $this->container['products_to_pass_on'] = isset($data['products_to_pass_on']) ? $data['products_to_pass_on'] : null;
        $this->container['registration_conditions'] = isset($data['registration_conditions']) ? $data['registration_conditions'] : null;
        $this->container['rent_offer'] = isset($data['rent_offer']) ? $data['rent_offer'] : null;
        $this->container['sale_offer'] = isset($data['sale_offer']) ? $data['sale_offer'] : null;
        $this->container['second_floor_text'] = isset($data['second_floor_text']) ? $data['second_floor_text'] : null;
        $this->container['special_text'] = isset($data['special_text']) ? $data['special_text'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['third_party_media'] = isset($data['third_party_media']) ? $data['third_party_media'] : null;
        $this->container['title_text'] = isset($data['title_text']) ? $data['title_text'] : null;
        $this->container['videos'] = isset($data['videos']) ? $data['videos'] : null;
        $this->container['waiting_time'] = isset($data['waiting_time']) ? $data['waiting_time'] : null;
        $this->container['web_address'] = isset($data['web_address']) ? $data['web_address'] : null;
        $this->container['withdrawn_date_time'] = isset($data['withdrawn_date_time']) ? $data['withdrawn_date_time'] : null;
        $this->container['withdraw_reason'] = isset($data['withdraw_reason']) ? $data['withdraw_reason'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        if (!is_null($this->container['boiler_type']) && (mb_strlen($this->container['boiler_type']) > 50)) {
            $invalidProperties[] = "invalid value for 'boiler_type', the character length must be smaller than or equal to 50.";
        }

        if (!is_null($this->container['funda_postal_code']) && (mb_strlen($this->container['funda_postal_code']) > 7)) {
            $invalidProperties[] = "invalid value for 'funda_postal_code', the character length must be smaller than or equal to 7.";
        }

        if (!is_null($this->container['funda_street']) && (mb_strlen($this->container['funda_street']) > 43)) {
            $invalidProperties[] = "invalid value for 'funda_street', the character length must be smaller than or equal to 43.";
        }

        if (!is_null($this->container['funda_locality']) && (mb_strlen($this->container['funda_locality']) > 24)) {
            $invalidProperties[] = "invalid value for 'funda_locality', the character length must be smaller than or equal to 24.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets summary
     *
     * @return string
     */
    public function getSummary()
    {
        return $this->container['summary'];
    }

    /**
     * Sets summary
     *
     * @param string $summary summary
     *
     * @return $this
     */
    public function setSummary($summary)
    {
        $this->container['summary'] = $summary;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Swagger\Client\Model\Address
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Swagger\Client\Model\Address $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Swagger\Client\Model\AcquisitionStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Swagger\Client\Model\AcquisitionStatus $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets linked_acquisition_assignment
     *
     * @return \Swagger\Client\Model\LinkedAssignment
     */
    public function getLinkedAcquisitionAssignment()
    {
        return $this->container['linked_acquisition_assignment'];
    }

    /**
     * Sets linked_acquisition_assignment
     *
     * @param \Swagger\Client\Model\LinkedAssignment $linked_acquisition_assignment linked_acquisition_assignment
     *
     * @return $this
     */
    public function setLinkedAcquisitionAssignment($linked_acquisition_assignment)
    {
        $this->container['linked_acquisition_assignment'] = $linked_acquisition_assignment;

        return $this;
    }

    /**
     * Gets agricultural_subtype_other
     *
     * @return \Swagger\Client\Model\AgriculturalSubtypeOther
     */
    public function getAgriculturalSubtypeOther()
    {
        return $this->container['agricultural_subtype_other'];
    }

    /**
     * Sets agricultural_subtype_other
     *
     * @param \Swagger\Client\Model\AgriculturalSubtypeOther $agricultural_subtype_other agricultural_subtype_other
     *
     * @return $this
     */
    public function setAgriculturalSubtypeOther($agricultural_subtype_other)
    {
        $this->container['agricultural_subtype_other'] = $agricultural_subtype_other;

        return $this;
    }

    /**
     * Gets air_treatments
     *
     * @return \Swagger\Client\Model\AirTreatment[]
     */
    public function getAirTreatments()
    {
        return $this->container['air_treatments'];
    }

    /**
     * Sets air_treatments
     *
     * @param \Swagger\Client\Model\AirTreatment[] $air_treatments air_treatments
     *
     * @return $this
     */
    public function setAirTreatments($air_treatments)
    {
        $this->container['air_treatments'] = $air_treatments;

        return $this;
    }

    /**
     * Gets apartment_characteristic
     *
     * @return \Swagger\Client\Model\ApartmentCharacteristic
     */
    public function getApartmentCharacteristic()
    {
        return $this->container['apartment_characteristic'];
    }

    /**
     * Sets apartment_characteristic
     *
     * @param \Swagger\Client\Model\ApartmentCharacteristic $apartment_characteristic apartment_characteristic
     *
     * @return $this
     */
    public function setApartmentCharacteristic($apartment_characteristic)
    {
        $this->container['apartment_characteristic'] = $apartment_characteristic;

        return $this;
    }

    /**
     * Gets apartment_sort
     *
     * @return \Swagger\Client\Model\ApartmentSort
     */
    public function getApartmentSort()
    {
        return $this->container['apartment_sort'];
    }

    /**
     * Sets apartment_sort
     *
     * @param \Swagger\Client\Model\ApartmentSort $apartment_sort apartment_sort
     *
     * @return $this
     */
    public function setApartmentSort($apartment_sort)
    {
        $this->container['apartment_sort'] = $apartment_sort;

        return $this;
    }

    /**
     * Gets approval_marks
     *
     * @return \Swagger\Client\Model\Certification[]
     */
    public function getApprovalMarks()
    {
        return $this->container['approval_marks'];
    }

    /**
     * Sets approval_marks
     *
     * @param \Swagger\Client\Model\Certification[] $approval_marks approval_marks
     *
     * @return $this
     */
    public function setApprovalMarks($approval_marks)
    {
        $this->container['approval_marks'] = $approval_marks;

        return $this;
    }

    /**
     * Gets beverages_count_of_seats
     *
     * @return int
     */
    public function getBeveragesCountOfSeats()
    {
        return $this->container['beverages_count_of_seats'];
    }

    /**
     * Sets beverages_count_of_seats
     *
     * @param int $beverages_count_of_seats beverages_count_of_seats
     *
     * @return $this
     */
    public function setBeveragesCountOfSeats($beverages_count_of_seats)
    {
        $this->container['beverages_count_of_seats'] = $beverages_count_of_seats;

        return $this;
    }

    /**
     * Gets beverages_hospitality_industry_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getBeveragesHospitalityIndustryArea()
    {
        return $this->container['beverages_hospitality_industry_area'];
    }

    /**
     * Sets beverages_hospitality_industry_area
     *
     * @param \Swagger\Client\Model\Size $beverages_hospitality_industry_area beverages_hospitality_industry_area
     *
     * @return $this
     */
    public function setBeveragesHospitalityIndustryArea($beverages_hospitality_industry_area)
    {
        $this->container['beverages_hospitality_industry_area'] = $beverages_hospitality_industry_area;

        return $this;
    }

    /**
     * Gets beverages_non_hospitality_industry_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getBeveragesNonHospitalityIndustryArea()
    {
        return $this->container['beverages_non_hospitality_industry_area'];
    }

    /**
     * Sets beverages_non_hospitality_industry_area
     *
     * @param \Swagger\Client\Model\Size $beverages_non_hospitality_industry_area beverages_non_hospitality_industry_area
     *
     * @return $this
     */
    public function setBeveragesNonHospitalityIndustryArea($beverages_non_hospitality_industry_area)
    {
        $this->container['beverages_non_hospitality_industry_area'] = $beverages_non_hospitality_industry_area;

        return $this;
    }

    /**
     * Gets boiler_fuel
     *
     * @return \Swagger\Client\Model\EnergySource
     */
    public function getBoilerFuel()
    {
        return $this->container['boiler_fuel'];
    }

    /**
     * Sets boiler_fuel
     *
     * @param \Swagger\Client\Model\EnergySource $boiler_fuel boiler_fuel
     *
     * @return $this
     */
    public function setBoilerFuel($boiler_fuel)
    {
        $this->container['boiler_fuel'] = $boiler_fuel;

        return $this;
    }

    /**
     * Gets boiler_property
     *
     * @return \Swagger\Client\Model\Ownership
     */
    public function getBoilerProperty()
    {
        return $this->container['boiler_property'];
    }

    /**
     * Sets boiler_property
     *
     * @param \Swagger\Client\Model\Ownership $boiler_property boiler_property
     *
     * @return $this
     */
    public function setBoilerProperty($boiler_property)
    {
        $this->container['boiler_property'] = $boiler_property;

        return $this;
    }

    /**
     * Gets boiler_type
     *
     * @return string
     */
    public function getBoilerType()
    {
        return $this->container['boiler_type'];
    }

    /**
     * Sets boiler_type
     *
     * @param string $boiler_type boiler_type
     *
     * @return $this
     */
    public function setBoilerType($boiler_type)
    {
        if (!is_null($boiler_type) && (mb_strlen($boiler_type) > 50)) {
            throw new \InvalidArgumentException('invalid length for $boiler_type when calling AcquisitionObjectAssignment., must be smaller than or equal to 50.');
        }

        $this->container['boiler_type'] = $boiler_type;

        return $this;
    }

    /**
     * Gets boiler_year_of_construction
     *
     * @return int
     */
    public function getBoilerYearOfConstruction()
    {
        return $this->container['boiler_year_of_construction'];
    }

    /**
     * Sets boiler_year_of_construction
     *
     * @param int $boiler_year_of_construction boiler_year_of_construction
     *
     * @return $this
     */
    public function setBoilerYearOfConstruction($boiler_year_of_construction)
    {
        $this->container['boiler_year_of_construction'] = $boiler_year_of_construction;

        return $this;
    }

    /**
     * Gets building_capacity
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getBuildingCapacity()
    {
        return $this->container['building_capacity'];
    }

    /**
     * Sets building_capacity
     *
     * @param \Swagger\Client\Model\Size $building_capacity building_capacity
     *
     * @return $this
     */
    public function setBuildingCapacity($building_capacity)
    {
        $this->container['building_capacity'] = $building_capacity;

        return $this;
    }

    /**
     * Gets building_capacity_area_percentage
     *
     * @return float
     */
    public function getBuildingCapacityAreaPercentage()
    {
        return $this->container['building_capacity_area_percentage'];
    }

    /**
     * Sets building_capacity_area_percentage
     *
     * @param float $building_capacity_area_percentage building_capacity_area_percentage
     *
     * @return $this
     */
    public function setBuildingCapacityAreaPercentage($building_capacity_area_percentage)
    {
        $this->container['building_capacity_area_percentage'] = $building_capacity_area_percentage;

        return $this;
    }

    /**
     * Gets building_layer
     *
     * @return int
     */
    public function getBuildingLayer()
    {
        return $this->container['building_layer'];
    }

    /**
     * Sets building_layer
     *
     * @param int $building_layer building_layer
     *
     * @return $this
     */
    public function setBuildingLayer($building_layer)
    {
        $this->container['building_layer'] = $building_layer;

        return $this;
    }

    /**
     * Gets building_layer_amount
     *
     * @return int
     */
    public function getBuildingLayerAmount()
    {
        return $this->container['building_layer_amount'];
    }

    /**
     * Sets building_layer_amount
     *
     * @param int $building_layer_amount building_layer_amount
     *
     * @return $this
     */
    public function setBuildingLayerAmount($building_layer_amount)
    {
        $this->container['building_layer_amount'] = $building_layer_amount;

        return $this;
    }

    /**
     * Gets business_expenses
     *
     * @return \Swagger\Client\Model\BusinessExpenses
     */
    public function getBusinessExpenses()
    {
        return $this->container['business_expenses'];
    }

    /**
     * Sets business_expenses
     *
     * @param \Swagger\Client\Model\BusinessExpenses $business_expenses business_expenses
     *
     * @return $this
     */
    public function setBusinessExpenses($business_expenses)
    {
        $this->container['business_expenses'] = $business_expenses;

        return $this;
    }

    /**
     * Gets company_listings
     *
     * @return \Swagger\Client\Model\CompanyListing[]
     */
    public function getCompanyListings()
    {
        return $this->container['company_listings'];
    }

    /**
     * Sets company_listings
     *
     * @param \Swagger\Client\Model\CompanyListing[] $company_listings company_listings
     *
     * @return $this
     */
    public function setCompanyListings($company_listings)
    {
        $this->container['company_listings'] = $company_listings;

        return $this;
    }

    /**
     * Gets business_rights
     *
     * @return \Swagger\Client\Model\BusinessRights
     */
    public function getBusinessRights()
    {
        return $this->container['business_rights'];
    }

    /**
     * Sets business_rights
     *
     * @param \Swagger\Client\Model\BusinessRights $business_rights business_rights
     *
     * @return $this
     */
    public function setBusinessRights($business_rights)
    {
        $this->container['business_rights'] = $business_rights;

        return $this;
    }

    /**
     * Gets b_vo
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getBVo()
    {
        return $this->container['b_vo'];
    }

    /**
     * Sets b_vo
     *
     * @param \Swagger\Client\Model\Size $b_vo b_vo
     *
     * @return $this
     */
    public function setBVo($b_vo)
    {
        $this->container['b_vo'] = $b_vo;

        return $this;
    }

    /**
     * Gets capacity
     *
     * @return int
     */
    public function getCapacity()
    {
        return $this->container['capacity'];
    }

    /**
     * Sets capacity
     *
     * @param int $capacity capacity
     *
     * @return $this
     */
    public function setCapacity($capacity)
    {
        $this->container['capacity'] = $capacity;

        return $this;
    }

    /**
     * Gets comfort_quality
     *
     * @return \Swagger\Client\Model\ComfortQuality
     */
    public function getComfortQuality()
    {
        return $this->container['comfort_quality'];
    }

    /**
     * Sets comfort_quality
     *
     * @param \Swagger\Client\Model\ComfortQuality $comfort_quality comfort_quality
     *
     * @return $this
     */
    public function setComfortQuality($comfort_quality)
    {
        $this->container['comfort_quality'] = $comfort_quality;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name company_name
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets complete_space
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getCompleteSpace()
    {
        return $this->container['complete_space'];
    }

    /**
     * Sets complete_space
     *
     * @param \Swagger\Client\Model\Size $complete_space complete_space
     *
     * @return $this
     */
    public function setCompleteSpace($complete_space)
    {
        $this->container['complete_space'] = $complete_space;

        return $this;
    }

    /**
     * Gets construction_options
     *
     * @return \Swagger\Client\Model\ConstructionOption[]
     */
    public function getConstructionOptions()
    {
        return $this->container['construction_options'];
    }

    /**
     * Sets construction_options
     *
     * @param \Swagger\Client\Model\ConstructionOption[] $construction_options construction_options
     *
     * @return $this
     */
    public function setConstructionOptions($construction_options)
    {
        $this->container['construction_options'] = $construction_options;

        return $this;
    }

    /**
     * Gets building_related_outdoor_space
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getBuildingRelatedOutdoorSpace()
    {
        return $this->container['building_related_outdoor_space'];
    }

    /**
     * Sets building_related_outdoor_space
     *
     * @param \Swagger\Client\Model\Size $building_related_outdoor_space building_related_outdoor_space
     *
     * @return $this
     */
    public function setBuildingRelatedOutdoorSpace($building_related_outdoor_space)
    {
        $this->container['building_related_outdoor_space'] = $building_related_outdoor_space;

        return $this;
    }

    /**
     * Gets contents
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getContents()
    {
        return $this->container['contents'];
    }

    /**
     * Sets contents
     *
     * @param \Swagger\Client\Model\Size $contents contents
     *
     * @return $this
     */
    public function setContents($contents)
    {
        $this->container['contents'] = $contents;

        return $this;
    }

    /**
     * Gets count_of_hotelrooms
     *
     * @return int
     */
    public function getCountOfHotelrooms()
    {
        return $this->container['count_of_hotelrooms'];
    }

    /**
     * Sets count_of_hotelrooms
     *
     * @param int $count_of_hotelrooms count_of_hotelrooms
     *
     * @return $this
     */
    public function setCountOfHotelrooms($count_of_hotelrooms)
    {
        $this->container['count_of_hotelrooms'] = $count_of_hotelrooms;

        return $this;
    }

    /**
     * Gets current_destinationd
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getCurrentDestinationd()
    {
        return $this->container['current_destinationd'];
    }

    /**
     * Sets current_destinationd
     *
     * @param \Swagger\Client\Model\TranslatedText[] $current_destinationd current_destinationd
     *
     * @return $this
     */
    public function setCurrentDestinationd($current_destinationd)
    {
        $this->container['current_destinationd'] = $current_destinationd;

        return $this;
    }

    /**
     * Gets current_usages
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getCurrentUsages()
    {
        return $this->container['current_usages'];
    }

    /**
     * Sets current_usages
     *
     * @param \Swagger\Client\Model\TranslatedText[] $current_usages current_usages
     *
     * @return $this
     */
    public function setCurrentUsages($current_usages)
    {
        $this->container['current_usages'] = $current_usages;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Swagger\Client\Model\TranslatedText[] $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets display_name
     *
     * @return string
     */
    public function getDisplayName()
    {
        return $this->container['display_name'];
    }

    /**
     * Sets display_name
     *
     * @param string $display_name display_name
     *
     * @return $this
     */
    public function setDisplayName($display_name)
    {
        $this->container['display_name'] = $display_name;

        return $this;
    }

    /**
     * Gets drainage
     *
     * @return \Swagger\Client\Model\Drainage
     */
    public function getDrainage()
    {
        return $this->container['drainage'];
    }

    /**
     * Sets drainage
     *
     * @param \Swagger\Client\Model\Drainage $drainage drainage
     *
     * @return $this
     */
    public function setDrainage($drainage)
    {
        $this->container['drainage'] = $drainage;

        return $this;
    }

    /**
     * Gets drainage_horse_rack
     *
     * @return bool
     */
    public function getDrainageHorseRack()
    {
        return $this->container['drainage_horse_rack'];
    }

    /**
     * Sets drainage_horse_rack
     *
     * @param bool $drainage_horse_rack drainage_horse_rack
     *
     * @return $this
     */
    public function setDrainageHorseRack($drainage_horse_rack)
    {
        $this->container['drainage_horse_rack'] = $drainage_horse_rack;

        return $this;
    }

    /**
     * Gets energy_label
     *
     * @return \Swagger\Client\Model\EnergyLabel
     */
    public function getEnergyLabel()
    {
        return $this->container['energy_label'];
    }

    /**
     * Sets energy_label
     *
     * @param \Swagger\Client\Model\EnergyLabel $energy_label energy_label
     *
     * @return $this
     */
    public function setEnergyLabel($energy_label)
    {
        $this->container['energy_label'] = $energy_label;

        return $this;
    }

    /**
     * Gets exclusive_status
     *
     * @return \Swagger\Client\Model\ExclusiveStatus
     */
    public function getExclusiveStatus()
    {
        return $this->container['exclusive_status'];
    }

    /**
     * Sets exclusive_status
     *
     * @param \Swagger\Client\Model\ExclusiveStatus $exclusive_status exclusive_status
     *
     * @return $this
     */
    public function setExclusiveStatus($exclusive_status)
    {
        $this->container['exclusive_status'] = $exclusive_status;

        return $this;
    }

    /**
     * Gets external_storage
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getExternalStorage()
    {
        return $this->container['external_storage'];
    }

    /**
     * Sets external_storage
     *
     * @param \Swagger\Client\Model\Size $external_storage external_storage
     *
     * @return $this
     */
    public function setExternalStorage($external_storage)
    {
        $this->container['external_storage'] = $external_storage;

        return $this;
    }

    /**
     * Gets facilities
     *
     * @return \Swagger\Client\Model\OutdoorAreaFacility[]
     */
    public function getFacilities()
    {
        return $this->container['facilities'];
    }

    /**
     * Sets facilities
     *
     * @param \Swagger\Client\Model\OutdoorAreaFacility[] $facilities facilities
     *
     * @return $this
     */
    public function setFacilities($facilities)
    {
        $this->container['facilities'] = $facilities;

        return $this;
    }

    /**
     * Gets fastfood_count_of_seats
     *
     * @return int
     */
    public function getFastfoodCountOfSeats()
    {
        return $this->container['fastfood_count_of_seats'];
    }

    /**
     * Sets fastfood_count_of_seats
     *
     * @param int $fastfood_count_of_seats fastfood_count_of_seats
     *
     * @return $this
     */
    public function setFastfoodCountOfSeats($fastfood_count_of_seats)
    {
        $this->container['fastfood_count_of_seats'] = $fastfood_count_of_seats;

        return $this;
    }

    /**
     * Gets fastfood_hospitality_industry_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getFastfoodHospitalityIndustryArea()
    {
        return $this->container['fastfood_hospitality_industry_area'];
    }

    /**
     * Sets fastfood_hospitality_industry_area
     *
     * @param \Swagger\Client\Model\Size $fastfood_hospitality_industry_area fastfood_hospitality_industry_area
     *
     * @return $this
     */
    public function setFastfoodHospitalityIndustryArea($fastfood_hospitality_industry_area)
    {
        $this->container['fastfood_hospitality_industry_area'] = $fastfood_hospitality_industry_area;

        return $this;
    }

    /**
     * Gets features
     *
     * @return \Swagger\Client\Model\FeatureCategory[]
     */
    public function getFeatures()
    {
        return $this->container['features'];
    }

    /**
     * Sets features
     *
     * @param \Swagger\Client\Model\FeatureCategory[] $features features
     *
     * @return $this
     */
    public function setFeatures($features)
    {
        $this->container['features'] = $features;

        return $this;
    }

    /**
     * Gets floor_level
     *
     * @return int
     */
    public function getFloorLevel()
    {
        return $this->container['floor_level'];
    }

    /**
     * Sets floor_level
     *
     * @param int $floor_level floor_level
     *
     * @return $this
     */
    public function setFloorLevel($floor_level)
    {
        $this->container['floor_level'] = $floor_level;

        return $this;
    }

    /**
     * Gets floor_load
     *
     * @return float
     */
    public function getFloorLoad()
    {
        return $this->container['floor_load'];
    }

    /**
     * Sets floor_load
     *
     * @param float $floor_load floor_load
     *
     * @return $this
     */
    public function setFloorLoad($floor_load)
    {
        $this->container['floor_load'] = $floor_load;

        return $this;
    }

    /**
     * Gets floors
     *
     * @return \Swagger\Client\Model\Floor[]
     */
    public function getFloors()
    {
        return $this->container['floors'];
    }

    /**
     * Sets floors
     *
     * @param \Swagger\Client\Model\Floor[] $floors floors
     *
     * @return $this
     */
    public function setFloors($floors)
    {
        $this->container['floors'] = $floors;

        return $this;
    }

    /**
     * Gets free_height
     *
     * @return float
     */
    public function getFreeHeight()
    {
        return $this->container['free_height'];
    }

    /**
     * Sets free_height
     *
     * @param float $free_height free_height
     *
     * @return $this
     */
    public function setFreeHeight($free_height)
    {
        $this->container['free_height'] = $free_height;

        return $this;
    }

    /**
     * Gets free_overcurrent
     *
     * @return float
     */
    public function getFreeOvercurrent()
    {
        return $this->container['free_overcurrent'];
    }

    /**
     * Sets free_overcurrent
     *
     * @param float $free_overcurrent free_overcurrent
     *
     * @return $this
     */
    public function setFreeOvercurrent($free_overcurrent)
    {
        $this->container['free_overcurrent'] = $free_overcurrent;

        return $this;
    }

    /**
     * Gets front_width
     *
     * @return float
     */
    public function getFrontWidth()
    {
        return $this->container['front_width'];
    }

    /**
     * Sets front_width
     *
     * @param float $front_width front_width
     *
     * @return $this
     */
    public function setFrontWidth($front_width)
    {
        $this->container['front_width'] = $front_width;

        return $this;
    }

    /**
     * Gets garages
     *
     * @return \Swagger\Client\Model\Garage[]
     */
    public function getGarages()
    {
        return $this->container['garages'];
    }

    /**
     * Sets garages
     *
     * @param \Swagger\Client\Model\Garage[] $garages garages
     *
     * @return $this
     */
    public function setGarages($garages)
    {
        $this->container['garages'] = $garages;

        return $this;
    }

    /**
     * Gets gardens
     *
     * @return \Swagger\Client\Model\Garden[]
     */
    public function getGardens()
    {
        return $this->container['gardens'];
    }

    /**
     * Sets gardens
     *
     * @param \Swagger\Client\Model\Garden[] $gardens gardens
     *
     * @return $this
     */
    public function setGardens($gardens)
    {
        $this->container['gardens'] = $gardens;

        return $this;
    }

    /**
     * Gets ground_property
     *
     * @return \Swagger\Client\Model\GroundProperty
     */
    public function getGroundProperty()
    {
        return $this->container['ground_property'];
    }

    /**
     * Sets ground_property
     *
     * @param \Swagger\Client\Model\GroundProperty $ground_property ground_property
     *
     * @return $this
     */
    public function setGroundProperty($ground_property)
    {
        $this->container['ground_property'] = $ground_property;

        return $this;
    }

    /**
     * Gets ground_usage
     *
     * @return \Swagger\Client\Model\GroundUsage
     */
    public function getGroundUsage()
    {
        return $this->container['ground_usage'];
    }

    /**
     * Sets ground_usage
     *
     * @param \Swagger\Client\Model\GroundUsage $ground_usage ground_usage
     *
     * @return $this
     */
    public function setGroundUsage($ground_usage)
    {
        $this->container['ground_usage'] = $ground_usage;

        return $this;
    }

    /**
     * Gets alv_main_plot_destination
     *
     * @return \Swagger\Client\Model\AlvBuildingPlotDestination
     */
    public function getAlvMainPlotDestination()
    {
        return $this->container['alv_main_plot_destination'];
    }

    /**
     * Sets alv_main_plot_destination
     *
     * @param \Swagger\Client\Model\AlvBuildingPlotDestination $alv_main_plot_destination alv_main_plot_destination
     *
     * @return $this
     */
    public function setAlvMainPlotDestination($alv_main_plot_destination)
    {
        $this->container['alv_main_plot_destination'] = $alv_main_plot_destination;

        return $this;
    }

    /**
     * Gets has_cable_tv
     *
     * @return bool
     */
    public function getHasCableTv()
    {
        return $this->container['has_cable_tv'];
    }

    /**
     * Sets has_cable_tv
     *
     * @param bool $has_cable_tv has_cable_tv
     *
     * @return $this
     */
    public function setHasCableTv($has_cable_tv)
    {
        $this->container['has_cable_tv'] = $has_cable_tv;

        return $this;
    }

    /**
     * Gets has_combi_boiler
     *
     * @return bool
     */
    public function getHasCombiBoiler()
    {
        return $this->container['has_combi_boiler'];
    }

    /**
     * Sets has_combi_boiler
     *
     * @param bool $has_combi_boiler has_combi_boiler
     *
     * @return $this
     */
    public function setHasCombiBoiler($has_combi_boiler)
    {
        $this->container['has_combi_boiler'] = $has_combi_boiler;

        return $this;
    }

    /**
     * Gets has_drainage
     *
     * @return bool
     */
    public function getHasDrainage()
    {
        return $this->container['has_drainage'];
    }

    /**
     * Sets has_drainage
     *
     * @param bool $has_drainage has_drainage
     *
     * @return $this
     */
    public function setHasDrainage($has_drainage)
    {
        $this->container['has_drainage'] = $has_drainage;

        return $this;
    }

    /**
     * Gets has_electricity_connection
     *
     * @return bool
     */
    public function getHasElectricityConnection()
    {
        return $this->container['has_electricity_connection'];
    }

    /**
     * Sets has_electricity_connection
     *
     * @param bool $has_electricity_connection has_electricity_connection
     *
     * @return $this
     */
    public function setHasElectricityConnection($has_electricity_connection)
    {
        $this->container['has_electricity_connection'] = $has_electricity_connection;

        return $this;
    }

    /**
     * Gets has_electric_power
     *
     * @return bool
     */
    public function getHasElectricPower()
    {
        return $this->container['has_electric_power'];
    }

    /**
     * Sets has_electric_power
     *
     * @param bool $has_electric_power has_electric_power
     *
     * @return $this
     */
    public function setHasElectricPower($has_electric_power)
    {
        $this->container['has_electric_power'] = $has_electric_power;

        return $this;
    }

    /**
     * Gets has_gas_connection
     *
     * @return bool
     */
    public function getHasGasConnection()
    {
        return $this->container['has_gas_connection'];
    }

    /**
     * Sets has_gas_connection
     *
     * @param bool $has_gas_connection has_gas_connection
     *
     * @return $this
     */
    public function setHasGasConnection($has_gas_connection)
    {
        $this->container['has_gas_connection'] = $has_gas_connection;

        return $this;
    }

    /**
     * Gets has_hygiene_barrier
     *
     * @return bool
     */
    public function getHasHygieneBarrier()
    {
        return $this->container['has_hygiene_barrier'];
    }

    /**
     * Sets has_hygiene_barrier
     *
     * @param bool $has_hygiene_barrier has_hygiene_barrier
     *
     * @return $this
     */
    public function setHasHygieneBarrier($has_hygiene_barrier)
    {
        $this->container['has_hygiene_barrier'] = $has_hygiene_barrier;

        return $this;
    }

    /**
     * Gets has_internet_connection
     *
     * @return bool
     */
    public function getHasInternetConnection()
    {
        return $this->container['has_internet_connection'];
    }

    /**
     * Sets has_internet_connection
     *
     * @param bool $has_internet_connection has_internet_connection
     *
     * @return $this
     */
    public function setHasInternetConnection($has_internet_connection)
    {
        $this->container['has_internet_connection'] = $has_internet_connection;

        return $this;
    }

    /**
     * Gets has_office_space
     *
     * @return bool
     */
    public function getHasOfficeSpace()
    {
        return $this->container['has_office_space'];
    }

    /**
     * Sets has_office_space
     *
     * @param bool $has_office_space has_office_space
     *
     * @return $this
     */
    public function setHasOfficeSpace($has_office_space)
    {
        $this->container['has_office_space'] = $has_office_space;

        return $this;
    }

    /**
     * Gets has_open_porch
     *
     * @return bool
     */
    public function getHasOpenPorch()
    {
        return $this->container['has_open_porch'];
    }

    /**
     * Sets has_open_porch
     *
     * @param bool $has_open_porch has_open_porch
     *
     * @return $this
     */
    public function setHasOpenPorch($has_open_porch)
    {
        $this->container['has_open_porch'] = $has_open_porch;

        return $this;
    }

    /**
     * Gets has_own_entrance
     *
     * @return bool
     */
    public function getHasOwnEntrance()
    {
        return $this->container['has_own_entrance'];
    }

    /**
     * Sets has_own_entrance
     *
     * @param bool $has_own_entrance has_own_entrance
     *
     * @return $this
     */
    public function setHasOwnEntrance($has_own_entrance)
    {
        $this->container['has_own_entrance'] = $has_own_entrance;

        return $this;
    }

    /**
     * Gets has_owners_association_buildings_insurance
     *
     * @return bool
     */
    public function getHasOwnersAssociationBuildingsInsurance()
    {
        return $this->container['has_owners_association_buildings_insurance'];
    }

    /**
     * Sets has_owners_association_buildings_insurance
     *
     * @param bool $has_owners_association_buildings_insurance has_owners_association_buildings_insurance
     *
     * @return $this
     */
    public function setHasOwnersAssociationBuildingsInsurance($has_owners_association_buildings_insurance)
    {
        $this->container['has_owners_association_buildings_insurance'] = $has_owners_association_buildings_insurance;

        return $this;
    }

    /**
     * Gets has_owners_association_maintenance_expectations
     *
     * @return bool
     */
    public function getHasOwnersAssociationMaintenanceExpectations()
    {
        return $this->container['has_owners_association_maintenance_expectations'];
    }

    /**
     * Sets has_owners_association_maintenance_expectations
     *
     * @param bool $has_owners_association_maintenance_expectations has_owners_association_maintenance_expectations
     *
     * @return $this
     */
    public function setHasOwnersAssociationMaintenanceExpectations($has_owners_association_maintenance_expectations)
    {
        $this->container['has_owners_association_maintenance_expectations'] = $has_owners_association_maintenance_expectations;

        return $this;
    }

    /**
     * Gets has_owners_association_multiple_years_maintenance_plan
     *
     * @return bool
     */
    public function getHasOwnersAssociationMultipleYearsMaintenancePlan()
    {
        return $this->container['has_owners_association_multiple_years_maintenance_plan'];
    }

    /**
     * Sets has_owners_association_multiple_years_maintenance_plan
     *
     * @param bool $has_owners_association_multiple_years_maintenance_plan has_owners_association_multiple_years_maintenance_plan
     *
     * @return $this
     */
    public function setHasOwnersAssociationMultipleYearsMaintenancePlan($has_owners_association_multiple_years_maintenance_plan)
    {
        $this->container['has_owners_association_multiple_years_maintenance_plan'] = $has_owners_association_multiple_years_maintenance_plan;

        return $this;
    }

    /**
     * Gets has_owners_association_periodic_contribution
     *
     * @return bool
     */
    public function getHasOwnersAssociationPeriodicContribution()
    {
        return $this->container['has_owners_association_periodic_contribution'];
    }

    /**
     * Sets has_owners_association_periodic_contribution
     *
     * @param bool $has_owners_association_periodic_contribution has_owners_association_periodic_contribution
     *
     * @return $this
     */
    public function setHasOwnersAssociationPeriodicContribution($has_owners_association_periodic_contribution)
    {
        $this->container['has_owners_association_periodic_contribution'] = $has_owners_association_periodic_contribution;

        return $this;
    }

    /**
     * Gets has_owners_association_reserve_fund
     *
     * @return bool
     */
    public function getHasOwnersAssociationReserveFund()
    {
        return $this->container['has_owners_association_reserve_fund'];
    }

    /**
     * Sets has_owners_association_reserve_fund
     *
     * @param bool $has_owners_association_reserve_fund has_owners_association_reserve_fund
     *
     * @return $this
     */
    public function setHasOwnersAssociationReserveFund($has_owners_association_reserve_fund)
    {
        $this->container['has_owners_association_reserve_fund'] = $has_owners_association_reserve_fund;

        return $this;
    }

    /**
     * Gets has_owners_association_yearly_meeting
     *
     * @return bool
     */
    public function getHasOwnersAssociationYearlyMeeting()
    {
        return $this->container['has_owners_association_yearly_meeting'];
    }

    /**
     * Sets has_owners_association_yearly_meeting
     *
     * @param bool $has_owners_association_yearly_meeting has_owners_association_yearly_meeting
     *
     * @return $this
     */
    public function setHasOwnersAssociationYearlyMeeting($has_owners_association_yearly_meeting)
    {
        $this->container['has_owners_association_yearly_meeting'] = $has_owners_association_yearly_meeting;

        return $this;
    }

    /**
     * Gets has_road_connection
     *
     * @return bool
     */
    public function getHasRoadConnection()
    {
        return $this->container['has_road_connection'];
    }

    /**
     * Sets has_road_connection
     *
     * @param bool $has_road_connection has_road_connection
     *
     * @return $this
     */
    public function setHasRoadConnection($has_road_connection)
    {
        $this->container['has_road_connection'] = $has_road_connection;

        return $this;
    }

    /**
     * Gets has_septic_tank
     *
     * @return bool
     */
    public function getHasSepticTank()
    {
        return $this->container['has_septic_tank'];
    }

    /**
     * Sets has_septic_tank
     *
     * @param bool $has_septic_tank has_septic_tank
     *
     * @return $this
     */
    public function setHasSepticTank($has_septic_tank)
    {
        $this->container['has_septic_tank'] = $has_septic_tank;

        return $this;
    }

    /**
     * Gets has_sewage_connection
     *
     * @return bool
     */
    public function getHasSewageConnection()
    {
        return $this->container['has_sewage_connection'];
    }

    /**
     * Sets has_sewage_connection
     *
     * @param bool $has_sewage_connection has_sewage_connection
     *
     * @return $this
     */
    public function setHasSewageConnection($has_sewage_connection)
    {
        $this->container['has_sewage_connection'] = $has_sewage_connection;

        return $this;
    }

    /**
     * Gets has_tank
     *
     * @return bool
     */
    public function getHasTank()
    {
        return $this->container['has_tank'];
    }

    /**
     * Sets has_tank
     *
     * @param bool $has_tank has_tank
     *
     * @return $this
     */
    public function setHasTank($has_tank)
    {
        $this->container['has_tank'] = $has_tank;

        return $this;
    }

    /**
     * Gets has_terrain
     *
     * @return bool
     */
    public function getHasTerrain()
    {
        return $this->container['has_terrain'];
    }

    /**
     * Sets has_terrain
     *
     * @param bool $has_terrain has_terrain
     *
     * @return $this
     */
    public function setHasTerrain($has_terrain)
    {
        $this->container['has_terrain'] = $has_terrain;

        return $this;
    }

    /**
     * Gets has_ventilation
     *
     * @return bool
     */
    public function getHasVentilation()
    {
        return $this->container['has_ventilation'];
    }

    /**
     * Sets has_ventilation
     *
     * @param bool $has_ventilation has_ventilation
     *
     * @return $this
     */
    public function setHasVentilation($has_ventilation)
    {
        $this->container['has_ventilation'] = $has_ventilation;

        return $this;
    }

    /**
     * Gets has_water_connection
     *
     * @return bool
     */
    public function getHasWaterConnection()
    {
        return $this->container['has_water_connection'];
    }

    /**
     * Sets has_water_connection
     *
     * @param bool $has_water_connection has_water_connection
     *
     * @return $this
     */
    public function setHasWaterConnection($has_water_connection)
    {
        $this->container['has_water_connection'] = $has_water_connection;

        return $this;
    }

    /**
     * Gets has_house
     *
     * @return bool
     */
    public function getHasHouse()
    {
        return $this->container['has_house'];
    }

    /**
     * Sets has_house
     *
     * @param bool $has_house has_house
     *
     * @return $this
     */
    public function setHasHouse($has_house)
    {
        $this->container['has_house'] = $has_house;

        return $this;
    }

    /**
     * Gets heating
     *
     * @return \Swagger\Client\Model\HeatingMethod[]
     */
    public function getHeating()
    {
        return $this->container['heating'];
    }

    /**
     * Sets heating
     *
     * @param \Swagger\Client\Model\HeatingMethod[] $heating heating
     *
     * @return $this
     */
    public function setHeating($heating)
    {
        $this->container['heating'] = $heating;

        return $this;
    }

    /**
     * Gets home_plot
     *
     * @return bool
     */
    public function getHomePlot()
    {
        return $this->container['home_plot'];
    }

    /**
     * Sets home_plot
     *
     * @param bool $home_plot home_plot
     *
     * @return $this
     */
    public function setHomePlot($home_plot)
    {
        $this->container['home_plot'] = $home_plot;

        return $this;
    }

    /**
     * Gets horse_company_subtype
     *
     * @return \Swagger\Client\Model\HorseCompanySubtype
     */
    public function getHorseCompanySubtype()
    {
        return $this->container['horse_company_subtype'];
    }

    /**
     * Sets horse_company_subtype
     *
     * @param \Swagger\Client\Model\HorseCompanySubtype $horse_company_subtype horse_company_subtype
     *
     * @return $this
     */
    public function setHorseCompanySubtype($horse_company_subtype)
    {
        $this->container['horse_company_subtype'] = $horse_company_subtype;

        return $this;
    }

    /**
     * Gets horse_trough_location
     *
     * @return \Swagger\Client\Model\HorseTroughLocation
     */
    public function getHorseTroughLocation()
    {
        return $this->container['horse_trough_location'];
    }

    /**
     * Sets horse_trough_location
     *
     * @param \Swagger\Client\Model\HorseTroughLocation $horse_trough_location horse_trough_location
     *
     * @return $this
     */
    public function setHorseTroughLocation($horse_trough_location)
    {
        $this->container['horse_trough_location'] = $horse_trough_location;

        return $this;
    }

    /**
     * Gets horticultural_company_type
     *
     * @return \Swagger\Client\Model\HorticulturalCompanyType
     */
    public function getHorticulturalCompanyType()
    {
        return $this->container['horticultural_company_type'];
    }

    /**
     * Sets horticultural_company_type
     *
     * @param \Swagger\Client\Model\HorticulturalCompanyType $horticultural_company_type horticultural_company_type
     *
     * @return $this
     */
    public function setHorticulturalCompanyType($horticultural_company_type)
    {
        $this->container['horticultural_company_type'] = $horticultural_company_type;

        return $this;
    }

    /**
     * Gets hospitality_permitted
     *
     * @return bool
     */
    public function getHospitalityPermitted()
    {
        return $this->container['hospitality_permitted'];
    }

    /**
     * Sets hospitality_permitted
     *
     * @param bool $hospitality_permitted hospitality_permitted
     *
     * @return $this
     */
    public function setHospitalityPermitted($hospitality_permitted)
    {
        $this->container['hospitality_permitted'] = $hospitality_permitted;

        return $this;
    }

    /**
     * Gets beverage_hospitality_types
     *
     * @return \Swagger\Client\Model\BeverageHospitalitySectorType[]
     */
    public function getBeverageHospitalityTypes()
    {
        return $this->container['beverage_hospitality_types'];
    }

    /**
     * Sets beverage_hospitality_types
     *
     * @param \Swagger\Client\Model\BeverageHospitalitySectorType[] $beverage_hospitality_types beverage_hospitality_types
     *
     * @return $this
     */
    public function setBeverageHospitalityTypes($beverage_hospitality_types)
    {
        $this->container['beverage_hospitality_types'] = $beverage_hospitality_types;

        return $this;
    }

    /**
     * Gets fastfood_hospitality_sector_types
     *
     * @return \Swagger\Client\Model\FastfoodHospitalitySectorType[]
     */
    public function getFastfoodHospitalitySectorTypes()
    {
        return $this->container['fastfood_hospitality_sector_types'];
    }

    /**
     * Sets fastfood_hospitality_sector_types
     *
     * @param \Swagger\Client\Model\FastfoodHospitalitySectorType[] $fastfood_hospitality_sector_types fastfood_hospitality_sector_types
     *
     * @return $this
     */
    public function setFastfoodHospitalitySectorTypes($fastfood_hospitality_sector_types)
    {
        $this->container['fastfood_hospitality_sector_types'] = $fastfood_hospitality_sector_types;

        return $this;
    }

    /**
     * Gets restaurant_hospitality_sector_types
     *
     * @return \Swagger\Client\Model\RestaurantHospitalitySectorType[]
     */
    public function getRestaurantHospitalitySectorTypes()
    {
        return $this->container['restaurant_hospitality_sector_types'];
    }

    /**
     * Sets restaurant_hospitality_sector_types
     *
     * @param \Swagger\Client\Model\RestaurantHospitalitySectorType[] $restaurant_hospitality_sector_types restaurant_hospitality_sector_types
     *
     * @return $this
     */
    public function setRestaurantHospitalitySectorTypes($restaurant_hospitality_sector_types)
    {
        $this->container['restaurant_hospitality_sector_types'] = $restaurant_hospitality_sector_types;

        return $this;
    }

    /**
     * Gets hotel_hospitality_sector_types
     *
     * @return \Swagger\Client\Model\HotelHospitalitySectorType[]
     */
    public function getHotelHospitalitySectorTypes()
    {
        return $this->container['hotel_hospitality_sector_types'];
    }

    /**
     * Sets hotel_hospitality_sector_types
     *
     * @param \Swagger\Client\Model\HotelHospitalitySectorType[] $hotel_hospitality_sector_types hotel_hospitality_sector_types
     *
     * @return $this
     */
    public function setHotelHospitalitySectorTypes($hotel_hospitality_sector_types)
    {
        $this->container['hotel_hospitality_sector_types'] = $hotel_hospitality_sector_types;

        return $this;
    }

    /**
     * Gets hotel_hospitality_industry_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getHotelHospitalityIndustryArea()
    {
        return $this->container['hotel_hospitality_industry_area'];
    }

    /**
     * Sets hotel_hospitality_industry_area
     *
     * @param \Swagger\Client\Model\Size $hotel_hospitality_industry_area hotel_hospitality_industry_area
     *
     * @return $this
     */
    public function setHotelHospitalityIndustryArea($hotel_hospitality_industry_area)
    {
        $this->container['hotel_hospitality_industry_area'] = $hotel_hospitality_industry_area;

        return $this;
    }

    /**
     * Gets hotel_non_hospitality_industry_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getHotelNonHospitalityIndustryArea()
    {
        return $this->container['hotel_non_hospitality_industry_area'];
    }

    /**
     * Sets hotel_non_hospitality_industry_area
     *
     * @param \Swagger\Client\Model\Size $hotel_non_hospitality_industry_area hotel_non_hospitality_industry_area
     *
     * @return $this
     */
    public function setHotelNonHospitalityIndustryArea($hotel_non_hospitality_industry_area)
    {
        $this->container['hotel_non_hospitality_industry_area'] = $hotel_non_hospitality_industry_area;

        return $this;
    }

    /**
     * Gets house_characteristic
     *
     * @return \Swagger\Client\Model\HouseCharacteristic
     */
    public function getHouseCharacteristic()
    {
        return $this->container['house_characteristic'];
    }

    /**
     * Sets house_characteristic
     *
     * @param \Swagger\Client\Model\HouseCharacteristic $house_characteristic house_characteristic
     *
     * @return $this
     */
    public function setHouseCharacteristic($house_characteristic)
    {
        $this->container['house_characteristic'] = $house_characteristic;

        return $this;
    }

    /**
     * Gets house_sort
     *
     * @return \Swagger\Client\Model\HouseSort
     */
    public function getHouseSort()
    {
        return $this->container['house_sort'];
    }

    /**
     * Sets house_sort
     *
     * @param \Swagger\Client\Model\HouseSort $house_sort house_sort
     *
     * @return $this
     */
    public function setHouseSort($house_sort)
    {
        $this->container['house_sort'] = $house_sort;

        return $this;
    }

    /**
     * Gets house_type
     *
     * @return \Swagger\Client\Model\HouseType
     */
    public function getHouseType()
    {
        return $this->container['house_type'];
    }

    /**
     * Sets house_type
     *
     * @param \Swagger\Client\Model\HouseType $house_type house_type
     *
     * @return $this
     */
    public function setHouseType($house_type)
    {
        $this->container['house_type'] = $house_type;

        return $this;
    }

    /**
     * Gets in_dense_hospitality_area
     *
     * @return bool
     */
    public function getInDenseHospitalityArea()
    {
        return $this->container['in_dense_hospitality_area'];
    }

    /**
     * Sets in_dense_hospitality_area
     *
     * @param bool $in_dense_hospitality_area in_dense_hospitality_area
     *
     * @return $this
     */
    public function setInDenseHospitalityArea($in_dense_hospitality_area)
    {
        $this->container['in_dense_hospitality_area'] = $in_dense_hospitality_area;

        return $this;
    }

    /**
     * Gets indoor_parking_capacity
     *
     * @return int
     */
    public function getIndoorParkingCapacity()
    {
        return $this->container['indoor_parking_capacity'];
    }

    /**
     * Sets indoor_parking_capacity
     *
     * @param int $indoor_parking_capacity indoor_parking_capacity
     *
     * @return $this
     */
    public function setIndoorParkingCapacity($indoor_parking_capacity)
    {
        $this->container['indoor_parking_capacity'] = $indoor_parking_capacity;

        return $this;
    }

    /**
     * Gets industrial_building_facilities
     *
     * @return \Swagger\Client\Model\IndustrialBuildingFacility[]
     */
    public function getIndustrialBuildingFacilities()
    {
        return $this->container['industrial_building_facilities'];
    }

    /**
     * Sets industrial_building_facilities
     *
     * @param \Swagger\Client\Model\IndustrialBuildingFacility[] $industrial_building_facilities industrial_building_facilities
     *
     * @return $this
     */
    public function setIndustrialBuildingFacilities($industrial_building_facilities)
    {
        $this->container['industrial_building_facilities'] = $industrial_building_facilities;

        return $this;
    }

    /**
     * Gets in_park
     *
     * @return bool
     */
    public function getInPark()
    {
        return $this->container['in_park'];
    }

    /**
     * Sets in_park
     *
     * @param bool $in_park in_park
     *
     * @return $this
     */
    public function setInPark($in_park)
    {
        $this->container['in_park'] = $in_park;

        return $this;
    }

    /**
     * Gets insulation_types
     *
     * @return \Swagger\Client\Model\InsulationType[]
     */
    public function getInsulationTypes()
    {
        return $this->container['insulation_types'];
    }

    /**
     * Sets insulation_types
     *
     * @param \Swagger\Client\Model\InsulationType[] $insulation_types insulation_types
     *
     * @return $this
     */
    public function setInsulationTypes($insulation_types)
    {
        $this->container['insulation_types'] = $insulation_types;

        return $this;
    }

    /**
     * Gets insulation_types_barn_storage
     *
     * @return \Swagger\Client\Model\InsulationType[]
     */
    public function getInsulationTypesBarnStorage()
    {
        return $this->container['insulation_types_barn_storage'];
    }

    /**
     * Sets insulation_types_barn_storage
     *
     * @param \Swagger\Client\Model\InsulationType[] $insulation_types_barn_storage insulation_types_barn_storage
     *
     * @return $this
     */
    public function setInsulationTypesBarnStorage($insulation_types_barn_storage)
    {
        $this->container['insulation_types_barn_storage'] = $insulation_types_barn_storage;

        return $this;
    }

    /**
     * Gets in_units_from
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getInUnitsFrom()
    {
        return $this->container['in_units_from'];
    }

    /**
     * Sets in_units_from
     *
     * @param \Swagger\Client\Model\Size $in_units_from in_units_from
     *
     * @return $this
     */
    public function setInUnitsFrom($in_units_from)
    {
        $this->container['in_units_from'] = $in_units_from;

        return $this;
    }

    /**
     * Gets is_barn_storage_available
     *
     * @return bool
     */
    public function getIsBarnStorageAvailable()
    {
        return $this->container['is_barn_storage_available'];
    }

    /**
     * Sets is_barn_storage_available
     *
     * @param bool $is_barn_storage_available is_barn_storage_available
     *
     * @return $this
     */
    public function setIsBarnStorageAvailable($is_barn_storage_available)
    {
        $this->container['is_barn_storage_available'] = $is_barn_storage_available;

        return $this;
    }

    /**
     * Gets is_biological_company
     *
     * @return bool
     */
    public function getIsBiologicalCompany()
    {
        return $this->container['is_biological_company'];
    }

    /**
     * Sets is_biological_company
     *
     * @param bool $is_biological_company is_biological_company
     *
     * @return $this
     */
    public function setIsBiologicalCompany($is_biological_company)
    {
        $this->container['is_biological_company'] = $is_biological_company;

        return $this;
    }

    /**
     * Gets is_building_ready
     *
     * @return bool
     */
    public function getIsBuildingReady()
    {
        return $this->container['is_building_ready'];
    }

    /**
     * Sets is_building_ready
     *
     * @param bool $is_building_ready is_building_ready
     *
     * @return $this
     */
    public function setIsBuildingReady($is_building_ready)
    {
        $this->container['is_building_ready'] = $is_building_ready;

        return $this;
    }

    /**
     * Gets is_home_plot
     *
     * @return bool
     */
    public function getIsHomePlot()
    {
        return $this->container['is_home_plot'];
    }

    /**
     * Sets is_home_plot
     *
     * @param bool $is_home_plot is_home_plot
     *
     * @return $this
     */
    public function setIsHomePlot($is_home_plot)
    {
        $this->container['is_home_plot'] = $is_home_plot;

        return $this;
    }

    /**
     * Gets is_house_in_need_of_refurbishment
     *
     * @return bool
     */
    public function getIsHouseInNeedOfRefurbishment()
    {
        return $this->container['is_house_in_need_of_refurbishment'];
    }

    /**
     * Sets is_house_in_need_of_refurbishment
     *
     * @param bool $is_house_in_need_of_refurbishment is_house_in_need_of_refurbishment
     *
     * @return $this
     */
    public function setIsHouseInNeedOfRefurbishment($is_house_in_need_of_refurbishment)
    {
        $this->container['is_house_in_need_of_refurbishment'] = $is_house_in_need_of_refurbishment;

        return $this;
    }

    /**
     * Gets is_new_estate
     *
     * @return bool
     */
    public function getIsNewEstate()
    {
        return $this->container['is_new_estate'];
    }

    /**
     * Sets is_new_estate
     *
     * @param bool $is_new_estate is_new_estate
     *
     * @return $this
     */
    public function setIsNewEstate($is_new_estate)
    {
        $this->container['is_new_estate'] = $is_new_estate;

        return $this;
    }

    /**
     * Gets is_office_space_available
     *
     * @return bool
     */
    public function getIsOfficeSpaceAvailable()
    {
        return $this->container['is_office_space_available'];
    }

    /**
     * Sets is_office_space_available
     *
     * @param bool $is_office_space_available is_office_space_available
     *
     * @return $this
     */
    public function setIsOfficeSpaceAvailable($is_office_space_available)
    {
        $this->container['is_office_space_available'] = $is_office_space_available;

        return $this;
    }

    /**
     * Gets is_owners_association_checklist_available
     *
     * @return bool
     */
    public function getIsOwnersAssociationChecklistAvailable()
    {
        return $this->container['is_owners_association_checklist_available'];
    }

    /**
     * Sets is_owners_association_checklist_available
     *
     * @param bool $is_owners_association_checklist_available is_owners_association_checklist_available
     *
     * @return $this
     */
    public function setIsOwnersAssociationChecklistAvailable($is_owners_association_checklist_available)
    {
        $this->container['is_owners_association_checklist_available'] = $is_owners_association_checklist_available;

        return $this;
    }

    /**
     * Gets is_owners_association_registered_kv_k
     *
     * @return bool
     */
    public function getIsOwnersAssociationRegisteredKvK()
    {
        return $this->container['is_owners_association_registered_kv_k'];
    }

    /**
     * Sets is_owners_association_registered_kv_k
     *
     * @param bool $is_owners_association_registered_kv_k is_owners_association_registered_kv_k
     *
     * @return $this
     */
    public function setIsOwnersAssociationRegisteredKvK($is_owners_association_registered_kv_k)
    {
        $this->container['is_owners_association_registered_kv_k'] = $is_owners_association_registered_kv_k;

        return $this;
    }

    /**
     * Gets is_permanently_inhabited
     *
     * @return bool
     */
    public function getIsPermanentlyInhabited()
    {
        return $this->container['is_permanently_inhabited'];
    }

    /**
     * Sets is_permanently_inhabited
     *
     * @param bool $is_permanently_inhabited is_permanently_inhabited
     *
     * @return $this
     */
    public function setIsPermanentlyInhabited($is_permanently_inhabited)
    {
        $this->container['is_permanently_inhabited'] = $is_permanently_inhabited;

        return $this;
    }

    /**
     * Gets is_recreational
     *
     * @return bool
     */
    public function getIsRecreational()
    {
        return $this->container['is_recreational'];
    }

    /**
     * Sets is_recreational
     *
     * @param bool $is_recreational is_recreational
     *
     * @return $this
     */
    public function setIsRecreational($is_recreational)
    {
        $this->container['is_recreational'] = $is_recreational;

        return $this;
    }

    /**
     * Gets is_shared
     *
     * @return bool
     */
    public function getIsShared()
    {
        return $this->container['is_shared'];
    }

    /**
     * Sets is_shared
     *
     * @param bool $is_shared is_shared
     *
     * @return $this
     */
    public function setIsShared($is_shared)
    {
        $this->container['is_shared'] = $is_shared;

        return $this;
    }

    /**
     * Gets is_skal_certified
     *
     * @return bool
     */
    public function getIsSkalCertified()
    {
        return $this->container['is_skal_certified'];
    }

    /**
     * Sets is_skal_certified
     *
     * @param bool $is_skal_certified is_skal_certified
     *
     * @return $this
     */
    public function setIsSkalCertified($is_skal_certified)
    {
        $this->container['is_skal_certified'] = $is_skal_certified;

        return $this;
    }

    /**
     * Gets is_target_home
     *
     * @return bool
     */
    public function getIsTargetHome()
    {
        return $this->container['is_target_home'];
    }

    /**
     * Sets is_target_home
     *
     * @param bool $is_target_home is_target_home
     *
     * @return $this
     */
    public function setIsTargetHome($is_target_home)
    {
        $this->container['is_target_home'] = $is_target_home;

        return $this;
    }

    /**
     * Gets is_turnkey
     *
     * @return bool
     */
    public function getIsTurnkey()
    {
        return $this->container['is_turnkey'];
    }

    /**
     * Sets is_turnkey
     *
     * @param bool $is_turnkey is_turnkey
     *
     * @return $this
     */
    public function setIsTurnkey($is_turnkey)
    {
        $this->container['is_turnkey'] = $is_turnkey;

        return $this;
    }

    /**
     * Gets land_property_sub_type
     *
     * @return \Swagger\Client\Model\LandPropertySubType
     */
    public function getLandPropertySubType()
    {
        return $this->container['land_property_sub_type'];
    }

    /**
     * Sets land_property_sub_type
     *
     * @param \Swagger\Client\Model\LandPropertySubType $land_property_sub_type land_property_sub_type
     *
     * @return $this
     */
    public function setLandPropertySubType($land_property_sub_type)
    {
        $this->container['land_property_sub_type'] = $land_property_sub_type;

        return $this;
    }

    /**
     * Gets length
     *
     * @return double
     */
    public function getLength()
    {
        return $this->container['length'];
    }

    /**
     * Sets length
     *
     * @param double $length length
     *
     * @return $this
     */
    public function setLength($length)
    {
        $this->container['length'] = $length;

        return $this;
    }

    /**
     * Gets listing_type
     *
     * @return object
     */
    public function getListingType()
    {
        return $this->container['listing_type'];
    }

    /**
     * Sets listing_type
     *
     * @param object $listing_type Id of listingType (E.g. 'Woonhuis', 'Appartement' or 'Parkeergelegenheid').
     *
     * @return $this
     */
    public function setListingType($listing_type)
    {
        $this->container['listing_type'] = $listing_type;

        return $this;
    }

    /**
     * Gets living_room_surface
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getLivingRoomSurface()
    {
        return $this->container['living_room_surface'];
    }

    /**
     * Sets living_room_surface
     *
     * @param \Swagger\Client\Model\Size $living_room_surface living_room_surface
     *
     * @return $this
     */
    public function setLivingRoomSurface($living_room_surface)
    {
        $this->container['living_room_surface'] = $living_room_surface;

        return $this;
    }

    /**
     * Gets location_places
     *
     * @return \Swagger\Client\Model\LocationPlace[]
     */
    public function getLocationPlaces()
    {
        return $this->container['location_places'];
    }

    /**
     * Sets location_places
     *
     * @param \Swagger\Client\Model\LocationPlace[] $location_places location_places
     *
     * @return $this
     */
    public function setLocationPlaces($location_places)
    {
        $this->container['location_places'] = $location_places;

        return $this;
    }

    /**
     * Gets logistic_function
     *
     * @return bool
     */
    public function getLogisticFunction()
    {
        return $this->container['logistic_function'];
    }

    /**
     * Sets logistic_function
     *
     * @param bool $logistic_function logistic_function
     *
     * @return $this
     */
    public function setLogisticFunction($logistic_function)
    {
        $this->container['logistic_function'] = $logistic_function;

        return $this;
    }

    /**
     * Gets loose_soil_price
     *
     * @return float
     */
    public function getLooseSoilPrice()
    {
        return $this->container['loose_soil_price'];
    }

    /**
     * Sets loose_soil_price
     *
     * @param float $loose_soil_price loose_soil_price
     *
     * @return $this
     */
    public function setLooseSoilPrice($loose_soil_price)
    {
        $this->container['loose_soil_price'] = $loose_soil_price;

        return $this;
    }

    /**
     * Gets lot_name
     *
     * @return string
     */
    public function getLotName()
    {
        return $this->container['lot_name'];
    }

    /**
     * Sets lot_name
     *
     * @param string $lot_name lot_name
     *
     * @return $this
     */
    public function setLotName($lot_name)
    {
        $this->container['lot_name'] = $lot_name;

        return $this;
    }

    /**
     * Gets maintenance_inside
     *
     * @return \Swagger\Client\Model\Maintenance
     */
    public function getMaintenanceInside()
    {
        return $this->container['maintenance_inside'];
    }

    /**
     * Sets maintenance_inside
     *
     * @param \Swagger\Client\Model\Maintenance $maintenance_inside maintenance_inside
     *
     * @return $this
     */
    public function setMaintenanceInside($maintenance_inside)
    {
        $this->container['maintenance_inside'] = $maintenance_inside;

        return $this;
    }

    /**
     * Gets maintenance_outside
     *
     * @return \Swagger\Client\Model\Maintenance
     */
    public function getMaintenanceOutside()
    {
        return $this->container['maintenance_outside'];
    }

    /**
     * Sets maintenance_outside
     *
     * @param \Swagger\Client\Model\Maintenance $maintenance_outside maintenance_outside
     *
     * @return $this
     */
    public function setMaintenanceOutside($maintenance_outside)
    {
        $this->container['maintenance_outside'] = $maintenance_outside;

        return $this;
    }

    /**
     * Gets number_of_animal_places
     *
     * @return int
     */
    public function getNumberOfAnimalPlaces()
    {
        return $this->container['number_of_animal_places'];
    }

    /**
     * Sets number_of_animal_places
     *
     * @param int $number_of_animal_places number_of_animal_places
     *
     * @return $this
     */
    public function setNumberOfAnimalPlaces($number_of_animal_places)
    {
        $this->container['number_of_animal_places'] = $number_of_animal_places;

        return $this;
    }

    /**
     * Gets number_of_animals
     *
     * @return int
     */
    public function getNumberOfAnimals()
    {
        return $this->container['number_of_animals'];
    }

    /**
     * Sets number_of_animals
     *
     * @param int $number_of_animals number_of_animals
     *
     * @return $this
     */
    public function setNumberOfAnimals($number_of_animals)
    {
        $this->container['number_of_animals'] = $number_of_animals;

        return $this;
    }

    /**
     * Gets number_of_bath_rooms
     *
     * @return int
     */
    public function getNumberOfBathRooms()
    {
        return $this->container['number_of_bath_rooms'];
    }

    /**
     * Sets number_of_bath_rooms
     *
     * @param int $number_of_bath_rooms number_of_bath_rooms
     *
     * @return $this
     */
    public function setNumberOfBathRooms($number_of_bath_rooms)
    {
        $this->container['number_of_bath_rooms'] = $number_of_bath_rooms;

        return $this;
    }

    /**
     * Gets number_of_bed_rooms
     *
     * @return int
     */
    public function getNumberOfBedRooms()
    {
        return $this->container['number_of_bed_rooms'];
    }

    /**
     * Sets number_of_bed_rooms
     *
     * @param int $number_of_bed_rooms number_of_bed_rooms
     *
     * @return $this
     */
    public function setNumberOfBedRooms($number_of_bed_rooms)
    {
        $this->container['number_of_bed_rooms'] = $number_of_bed_rooms;

        return $this;
    }

    /**
     * Gets number_of_floors
     *
     * @return int
     */
    public function getNumberOfFloors()
    {
        return $this->container['number_of_floors'];
    }

    /**
     * Sets number_of_floors
     *
     * @param int $number_of_floors number_of_floors
     *
     * @return $this
     */
    public function setNumberOfFloors($number_of_floors)
    {
        $this->container['number_of_floors'] = $number_of_floors;

        return $this;
    }

    /**
     * Gets number_of_garages
     *
     * @return int
     */
    public function getNumberOfGarages()
    {
        return $this->container['number_of_garages'];
    }

    /**
     * Sets number_of_garages
     *
     * @param int $number_of_garages number_of_garages
     *
     * @return $this
     */
    public function setNumberOfGarages($number_of_garages)
    {
        $this->container['number_of_garages'] = $number_of_garages;

        return $this;
    }

    /**
     * Gets number_of_gardens
     *
     * @return int
     */
    public function getNumberOfGardens()
    {
        return $this->container['number_of_gardens'];
    }

    /**
     * Sets number_of_gardens
     *
     * @param int $number_of_gardens number_of_gardens
     *
     * @return $this
     */
    public function setNumberOfGardens($number_of_gardens)
    {
        $this->container['number_of_gardens'] = $number_of_gardens;

        return $this;
    }

    /**
     * Gets number_of_kitchens
     *
     * @return int
     */
    public function getNumberOfKitchens()
    {
        return $this->container['number_of_kitchens'];
    }

    /**
     * Sets number_of_kitchens
     *
     * @param int $number_of_kitchens number_of_kitchens
     *
     * @return $this
     */
    public function setNumberOfKitchens($number_of_kitchens)
    {
        $this->container['number_of_kitchens'] = $number_of_kitchens;

        return $this;
    }

    /**
     * Gets number_of_meat_pigs
     *
     * @return int
     */
    public function getNumberOfMeatPigs()
    {
        return $this->container['number_of_meat_pigs'];
    }

    /**
     * Sets number_of_meat_pigs
     *
     * @param int $number_of_meat_pigs number_of_meat_pigs
     *
     * @return $this
     */
    public function setNumberOfMeatPigs($number_of_meat_pigs)
    {
        $this->container['number_of_meat_pigs'] = $number_of_meat_pigs;

        return $this;
    }

    /**
     * Gets number_of_mooring_places_milking_cattle
     *
     * @return int
     */
    public function getNumberOfMooringPlacesMilkingCattle()
    {
        return $this->container['number_of_mooring_places_milking_cattle'];
    }

    /**
     * Sets number_of_mooring_places_milking_cattle
     *
     * @param int $number_of_mooring_places_milking_cattle number_of_mooring_places_milking_cattle
     *
     * @return $this
     */
    public function setNumberOfMooringPlacesMilkingCattle($number_of_mooring_places_milking_cattle)
    {
        $this->container['number_of_mooring_places_milking_cattle'] = $number_of_mooring_places_milking_cattle;

        return $this;
    }

    /**
     * Gets number_of_mooring_places_young_cattle
     *
     * @return int
     */
    public function getNumberOfMooringPlacesYoungCattle()
    {
        return $this->container['number_of_mooring_places_young_cattle'];
    }

    /**
     * Sets number_of_mooring_places_young_cattle
     *
     * @param int $number_of_mooring_places_young_cattle number_of_mooring_places_young_cattle
     *
     * @return $this
     */
    public function setNumberOfMooringPlacesYoungCattle($number_of_mooring_places_young_cattle)
    {
        $this->container['number_of_mooring_places_young_cattle'] = $number_of_mooring_places_young_cattle;

        return $this;
    }

    /**
     * Gets number_of_rooms
     *
     * @return int
     */
    public function getNumberOfRooms()
    {
        return $this->container['number_of_rooms'];
    }

    /**
     * Sets number_of_rooms
     *
     * @param int $number_of_rooms number_of_rooms
     *
     * @return $this
     */
    public function setNumberOfRooms($number_of_rooms)
    {
        $this->container['number_of_rooms'] = $number_of_rooms;

        return $this;
    }

    /**
     * Gets number_of_showers
     *
     * @return int
     */
    public function getNumberOfShowers()
    {
        return $this->container['number_of_showers'];
    }

    /**
     * Sets number_of_showers
     *
     * @param int $number_of_showers number_of_showers
     *
     * @return $this
     */
    public function setNumberOfShowers($number_of_showers)
    {
        $this->container['number_of_showers'] = $number_of_showers;

        return $this;
    }

    /**
     * Gets number_of_sowing_sights
     *
     * @return int
     */
    public function getNumberOfSowingSights()
    {
        return $this->container['number_of_sowing_sights'];
    }

    /**
     * Sets number_of_sowing_sights
     *
     * @param int $number_of_sowing_sights number_of_sowing_sights
     *
     * @return $this
     */
    public function setNumberOfSowingSights($number_of_sowing_sights)
    {
        $this->container['number_of_sowing_sights'] = $number_of_sowing_sights;

        return $this;
    }

    /**
     * Gets number_of_toilets
     *
     * @return int
     */
    public function getNumberOfToilets()
    {
        return $this->container['number_of_toilets'];
    }

    /**
     * Sets number_of_toilets
     *
     * @param int $number_of_toilets number_of_toilets
     *
     * @return $this
     */
    public function setNumberOfToilets($number_of_toilets)
    {
        $this->container['number_of_toilets'] = $number_of_toilets;

        return $this;
    }

    /**
     * Gets number_of_weaned_piglets
     *
     * @return int
     */
    public function getNumberOfWeanedPiglets()
    {
        return $this->container['number_of_weaned_piglets'];
    }

    /**
     * Sets number_of_weaned_piglets
     *
     * @param int $number_of_weaned_piglets number_of_weaned_piglets
     *
     * @return $this
     */
    public function setNumberOfWeanedPiglets($number_of_weaned_piglets)
    {
        $this->container['number_of_weaned_piglets'] = $number_of_weaned_piglets;

        return $this;
    }

    /**
     * Gets number_of_breeding_pigs
     *
     * @return int
     */
    public function getNumberOfBreedingPigs()
    {
        return $this->container['number_of_breeding_pigs'];
    }

    /**
     * Sets number_of_breeding_pigs
     *
     * @param int $number_of_breeding_pigs number_of_breeding_pigs
     *
     * @return $this
     */
    public function setNumberOfBreedingPigs($number_of_breeding_pigs)
    {
        $this->container['number_of_breeding_pigs'] = $number_of_breeding_pigs;

        return $this;
    }

    /**
     * Gets number_of_meat_pig_stables
     *
     * @return int
     */
    public function getNumberOfMeatPigStables()
    {
        return $this->container['number_of_meat_pig_stables'];
    }

    /**
     * Sets number_of_meat_pig_stables
     *
     * @param int $number_of_meat_pig_stables number_of_meat_pig_stables
     *
     * @return $this
     */
    public function setNumberOfMeatPigStables($number_of_meat_pig_stables)
    {
        $this->container['number_of_meat_pig_stables'] = $number_of_meat_pig_stables;

        return $this;
    }

    /**
     * Gets number_of_breeding_pig_stables
     *
     * @return int
     */
    public function getNumberOfBreedingPigStables()
    {
        return $this->container['number_of_breeding_pig_stables'];
    }

    /**
     * Sets number_of_breeding_pig_stables
     *
     * @param int $number_of_breeding_pig_stables number_of_breeding_pig_stables
     *
     * @return $this
     */
    public function setNumberOfBreedingPigStables($number_of_breeding_pig_stables)
    {
        $this->container['number_of_breeding_pig_stables'] = $number_of_breeding_pig_stables;

        return $this;
    }

    /**
     * Gets number_of_piglet_stables
     *
     * @return int
     */
    public function getNumberOfPigletStables()
    {
        return $this->container['number_of_piglet_stables'];
    }

    /**
     * Sets number_of_piglet_stables
     *
     * @param int $number_of_piglet_stables number_of_piglet_stables
     *
     * @return $this
     */
    public function setNumberOfPigletStables($number_of_piglet_stables)
    {
        $this->container['number_of_piglet_stables'] = $number_of_piglet_stables;

        return $this;
    }

    /**
     * Gets office_facilities
     *
     * @return \Swagger\Client\Model\Facility[]
     */
    public function getOfficeFacilities()
    {
        return $this->container['office_facilities'];
    }

    /**
     * Sets office_facilities
     *
     * @param \Swagger\Client\Model\Facility[] $office_facilities office_facilities
     *
     * @return $this
     */
    public function setOfficeFacilities($office_facilities)
    {
        $this->container['office_facilities'] = $office_facilities;

        return $this;
    }

    /**
     * Gets office_space_air_treatments
     *
     * @return \Swagger\Client\Model\AirTreatment[]
     */
    public function getOfficeSpaceAirTreatments()
    {
        return $this->container['office_space_air_treatments'];
    }

    /**
     * Sets office_space_air_treatments
     *
     * @param \Swagger\Client\Model\AirTreatment[] $office_space_air_treatments office_space_air_treatments
     *
     * @return $this
     */
    public function setOfficeSpaceAirTreatments($office_space_air_treatments)
    {
        $this->container['office_space_air_treatments'] = $office_space_air_treatments;

        return $this;
    }

    /**
     * Gets office_space_building_layer_number
     *
     * @return int
     */
    public function getOfficeSpaceBuildingLayerNumber()
    {
        return $this->container['office_space_building_layer_number'];
    }

    /**
     * Sets office_space_building_layer_number
     *
     * @param int $office_space_building_layer_number office_space_building_layer_number
     *
     * @return $this
     */
    public function setOfficeSpaceBuildingLayerNumber($office_space_building_layer_number)
    {
        $this->container['office_space_building_layer_number'] = $office_space_building_layer_number;

        return $this;
    }

    /**
     * Gets office_space_facilities
     *
     * @return \Swagger\Client\Model\Facility[]
     */
    public function getOfficeSpaceFacilities()
    {
        return $this->container['office_space_facilities'];
    }

    /**
     * Sets office_space_facilities
     *
     * @param \Swagger\Client\Model\Facility[] $office_space_facilities office_space_facilities
     *
     * @return $this
     */
    public function setOfficeSpaceFacilities($office_space_facilities)
    {
        $this->container['office_space_facilities'] = $office_space_facilities;

        return $this;
    }

    /**
     * Gets office_space_surface
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getOfficeSpaceSurface()
    {
        return $this->container['office_space_surface'];
    }

    /**
     * Sets office_space_surface
     *
     * @param \Swagger\Client\Model\Size $office_space_surface office_space_surface
     *
     * @return $this
     */
    public function setOfficeSpaceSurface($office_space_surface)
    {
        $this->container['office_space_surface'] = $office_space_surface;

        return $this;
    }

    /**
     * Gets other_inside_spaces
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getOtherInsideSpaces()
    {
        return $this->container['other_inside_spaces'];
    }

    /**
     * Sets other_inside_spaces
     *
     * @param \Swagger\Client\Model\Size $other_inside_spaces other_inside_spaces
     *
     * @return $this
     */
    public function setOtherInsideSpaces($other_inside_spaces)
    {
        $this->container['other_inside_spaces'] = $other_inside_spaces;

        return $this;
    }

    /**
     * Gets parcel_surface
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getParcelSurface()
    {
        return $this->container['parcel_surface'];
    }

    /**
     * Sets parcel_surface
     *
     * @param \Swagger\Client\Model\Size $parcel_surface parcel_surface
     *
     * @return $this
     */
    public function setParcelSurface($parcel_surface)
    {
        $this->container['parcel_surface'] = $parcel_surface;

        return $this;
    }

    /**
     * Gets parking_facilities
     *
     * @return \Swagger\Client\Model\TypeOfParkingFacility[]
     */
    public function getParkingFacilities()
    {
        return $this->container['parking_facilities'];
    }

    /**
     * Sets parking_facilities
     *
     * @param \Swagger\Client\Model\TypeOfParkingFacility[] $parking_facilities parking_facilities
     *
     * @return $this
     */
    public function setParkingFacilities($parking_facilities)
    {
        $this->container['parking_facilities'] = $parking_facilities;

        return $this;
    }

    /**
     * Gets parking_type
     *
     * @return \Swagger\Client\Model\ParkingType
     */
    public function getParkingType()
    {
        return $this->container['parking_type'];
    }

    /**
     * Sets parking_type
     *
     * @param \Swagger\Client\Model\ParkingType $parking_type parking_type
     *
     * @return $this
     */
    public function setParkingType($parking_type)
    {
        $this->container['parking_type'] = $parking_type;

        return $this;
    }

    /**
     * Gets paved_percentage
     *
     * @return float
     */
    public function getPavedPercentage()
    {
        return $this->container['paved_percentage'];
    }

    /**
     * Sets paved_percentage
     *
     * @param float $paved_percentage paved_percentage
     *
     * @return $this
     */
    public function setPavedPercentage($paved_percentage)
    {
        $this->container['paved_percentage'] = $paved_percentage;

        return $this;
    }

    /**
     * Gets pavement_type
     *
     * @return \Swagger\Client\Model\PavementType
     */
    public function getPavementType()
    {
        return $this->container['pavement_type'];
    }

    /**
     * Sets pavement_type
     *
     * @param \Swagger\Client\Model\PavementType $pavement_type pavement_type
     *
     * @return $this
     */
    public function setPavementType($pavement_type)
    {
        $this->container['pavement_type'] = $pavement_type;

        return $this;
    }

    /**
     * Gets peculiarities
     *
     * @return \Swagger\Client\Model\Peculiarity[]
     */
    public function getPeculiarities()
    {
        return $this->container['peculiarities'];
    }

    /**
     * Sets peculiarities
     *
     * @param \Swagger\Client\Model\Peculiarity[] $peculiarities Peculiarities (in Dutch: bijzonderheden).
     *
     * @return $this
     */
    public function setPeculiarities($peculiarities)
    {
        $this->container['peculiarities'] = $peculiarities;

        return $this;
    }

    /**
     * Gets pig_company_type
     *
     * @return \Swagger\Client\Model\PigCompanyType
     */
    public function getPigCompanyType()
    {
        return $this->container['pig_company_type'];
    }

    /**
     * Sets pig_company_type
     *
     * @param \Swagger\Client\Model\PigCompanyType $pig_company_type pig_company_type
     *
     * @return $this
     */
    public function setPigCompanyType($pig_company_type)
    {
        $this->container['pig_company_type'] = $pig_company_type;

        return $this;
    }

    /**
     * Gets points_of_interest
     *
     * @return \Swagger\Client\Model\PointOfInterest[]
     */
    public function getPointsOfInterest()
    {
        return $this->container['points_of_interest'];
    }

    /**
     * Sets points_of_interest
     *
     * @param \Swagger\Client\Model\PointOfInterest[] $points_of_interest points_of_interest
     *
     * @return $this
     */
    public function setPointsOfInterest($points_of_interest)
    {
        $this->container['points_of_interest'] = $points_of_interest;

        return $this;
    }

    /**
     * Gets pollution
     *
     * @return \Swagger\Client\Model\PollutionType[]
     */
    public function getPollution()
    {
        return $this->container['pollution'];
    }

    /**
     * Sets pollution
     *
     * @param \Swagger\Client\Model\PollutionType[] $pollution pollution
     *
     * @return $this
     */
    public function setPollution($pollution)
    {
        $this->container['pollution'] = $pollution;

        return $this;
    }

    /**
     * Gets poultry_farming_subtype
     *
     * @return \Swagger\Client\Model\PoultryFarmingSubtype
     */
    public function getPoultryFarmingSubtype()
    {
        return $this->container['poultry_farming_subtype'];
    }

    /**
     * Sets poultry_farming_subtype
     *
     * @param \Swagger\Client\Model\PoultryFarmingSubtype $poultry_farming_subtype poultry_farming_subtype
     *
     * @return $this
     */
    public function setPoultryFarmingSubtype($poultry_farming_subtype)
    {
        $this->container['poultry_farming_subtype'] = $poultry_farming_subtype;

        return $this;
    }

    /**
     * Gets public_oriented_services
     *
     * @return bool
     */
    public function getPublicOrientedServices()
    {
        return $this->container['public_oriented_services'];
    }

    /**
     * Sets public_oriented_services
     *
     * @param bool $public_oriented_services public_oriented_services
     *
     * @return $this
     */
    public function setPublicOrientedServices($public_oriented_services)
    {
        $this->container['public_oriented_services'] = $public_oriented_services;

        return $this;
    }

    /**
     * Gets public_reference
     *
     * @return string
     */
    public function getPublicReference()
    {
        return $this->container['public_reference'];
    }

    /**
     * Sets public_reference
     *
     * @param string $public_reference public_reference
     *
     * @return $this
     */
    public function setPublicReference($public_reference)
    {
        $this->container['public_reference'] = $public_reference;

        return $this;
    }

    /**
     * Gets real_estate_group
     *
     * @return \Swagger\Client\Model\RealEstateGroup
     */
    public function getRealEstateGroup()
    {
        return $this->container['real_estate_group'];
    }

    /**
     * Sets real_estate_group
     *
     * @param \Swagger\Client\Model\RealEstateGroup $real_estate_group real_estate_group
     *
     * @return $this
     */
    public function setRealEstateGroup($real_estate_group)
    {
        $this->container['real_estate_group'] = $real_estate_group;

        return $this;
    }

    /**
     * Gets region_keys_dsv
     *
     * @return string
     */
    public function getRegionKeysDsv()
    {
        return $this->container['region_keys_dsv'];
    }

    /**
     * Sets region_keys_dsv
     *
     * @param string $region_keys_dsv region_keys_dsv
     *
     * @return $this
     */
    public function setRegionKeysDsv($region_keys_dsv)
    {
        $this->container['region_keys_dsv'] = $region_keys_dsv;

        return $this;
    }

    /**
     * Gets renovation_year
     *
     * @return \Swagger\Client\Model\YearOfConstruction
     */
    public function getRenovationYear()
    {
        return $this->container['renovation_year'];
    }

    /**
     * Sets renovation_year
     *
     * @param \Swagger\Client\Model\YearOfConstruction $renovation_year renovation_year
     *
     * @return $this
     */
    public function setRenovationYear($renovation_year)
    {
        $this->container['renovation_year'] = $renovation_year;

        return $this;
    }

    /**
     * Gets residential_building
     *
     * @return \Swagger\Client\Model\ResidentialBuilding
     */
    public function getResidentialBuilding()
    {
        return $this->container['residential_building'];
    }

    /**
     * Sets residential_building
     *
     * @param \Swagger\Client\Model\ResidentialBuilding $residential_building residential_building
     *
     * @return $this
     */
    public function setResidentialBuilding($residential_building)
    {
        $this->container['residential_building'] = $residential_building;

        return $this;
    }

    /**
     * Gets residential_subtype_other
     *
     * @return \Swagger\Client\Model\ResidentialSubtypeOther
     */
    public function getResidentialSubtypeOther()
    {
        return $this->container['residential_subtype_other'];
    }

    /**
     * Sets residential_subtype_other
     *
     * @param \Swagger\Client\Model\ResidentialSubtypeOther $residential_subtype_other residential_subtype_other
     *
     * @return $this
     */
    public function setResidentialSubtypeOther($residential_subtype_other)
    {
        $this->container['residential_subtype_other'] = $residential_subtype_other;

        return $this;
    }

    /**
     * Gets restaurant_count_of_seats
     *
     * @return int
     */
    public function getRestaurantCountOfSeats()
    {
        return $this->container['restaurant_count_of_seats'];
    }

    /**
     * Sets restaurant_count_of_seats
     *
     * @param int $restaurant_count_of_seats restaurant_count_of_seats
     *
     * @return $this
     */
    public function setRestaurantCountOfSeats($restaurant_count_of_seats)
    {
        $this->container['restaurant_count_of_seats'] = $restaurant_count_of_seats;

        return $this;
    }

    /**
     * Gets restaurant_hospitality_industry_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getRestaurantHospitalityIndustryArea()
    {
        return $this->container['restaurant_hospitality_industry_area'];
    }

    /**
     * Sets restaurant_hospitality_industry_area
     *
     * @param \Swagger\Client\Model\Size $restaurant_hospitality_industry_area restaurant_hospitality_industry_area
     *
     * @return $this
     */
    public function setRestaurantHospitalityIndustryArea($restaurant_hospitality_industry_area)
    {
        $this->container['restaurant_hospitality_industry_area'] = $restaurant_hospitality_industry_area;

        return $this;
    }

    /**
     * Gets restaurant_non_hospitality_industry_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getRestaurantNonHospitalityIndustryArea()
    {
        return $this->container['restaurant_non_hospitality_industry_area'];
    }

    /**
     * Sets restaurant_non_hospitality_industry_area
     *
     * @param \Swagger\Client\Model\Size $restaurant_non_hospitality_industry_area restaurant_non_hospitality_industry_area
     *
     * @return $this
     */
    public function setRestaurantNonHospitalityIndustryArea($restaurant_non_hospitality_industry_area)
    {
        $this->container['restaurant_non_hospitality_industry_area'] = $restaurant_non_hospitality_industry_area;

        return $this;
    }

    /**
     * Gets retail
     *
     * @return bool
     */
    public function getRetail()
    {
        return $this->container['retail'];
    }

    /**
     * Sets retail
     *
     * @param bool $retail retail
     *
     * @return $this
     */
    public function setRetail($retail)
    {
        $this->container['retail'] = $retail;

        return $this;
    }

    /**
     * Gets revenue_per_year
     *
     * @return float
     */
    public function getRevenuePerYear()
    {
        return $this->container['revenue_per_year'];
    }

    /**
     * Sets revenue_per_year
     *
     * @param float $revenue_per_year revenue_per_year
     *
     * @return $this
     */
    public function setRevenuePerYear($revenue_per_year)
    {
        $this->container['revenue_per_year'] = $revenue_per_year;

        return $this;
    }

    /**
     * Gets roof
     *
     * @return \Swagger\Client\Model\Roof
     */
    public function getRoof()
    {
        return $this->container['roof'];
    }

    /**
     * Sets roof
     *
     * @param \Swagger\Client\Model\Roof $roof roof
     *
     * @return $this
     */
    public function setRoof($roof)
    {
        $this->container['roof'] = $roof;

        return $this;
    }

    /**
     * Gets secondary_listing_types
     *
     * @return \Swagger\Client\Model\ListingType[]
     */
    public function getSecondaryListingTypes()
    {
        return $this->container['secondary_listing_types'];
    }

    /**
     * Sets secondary_listing_types
     *
     * @param \Swagger\Client\Model\ListingType[] $secondary_listing_types secondary_listing_types
     *
     * @return $this
     */
    public function setSecondaryListingTypes($secondary_listing_types)
    {
        $this->container['secondary_listing_types'] = $secondary_listing_types;

        return $this;
    }

    /**
     * Gets sector_limitation
     *
     * @return bool
     */
    public function getSectorLimitation()
    {
        return $this->container['sector_limitation'];
    }

    /**
     * Sets sector_limitation
     *
     * @param bool $sector_limitation sector_limitation
     *
     * @return $this
     */
    public function setSectorLimitation($sector_limitation)
    {
        $this->container['sector_limitation'] = $sector_limitation;

        return $this;
    }

    /**
     * Gets showroom
     *
     * @return bool
     */
    public function getShowroom()
    {
        return $this->container['showroom'];
    }

    /**
     * Sets showroom
     *
     * @param bool $showroom showroom
     *
     * @return $this
     */
    public function setShowroom($showroom)
    {
        $this->container['showroom'] = $showroom;

        return $this;
    }

    /**
     * Gets size
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     *
     * @param \Swagger\Client\Model\Size $size size
     *
     * @return $this
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets soil_type
     *
     * @return \Swagger\Client\Model\SoilType
     */
    public function getSoilType()
    {
        return $this->container['soil_type'];
    }

    /**
     * Sets soil_type
     *
     * @param \Swagger\Client\Model\SoilType $soil_type soil_type
     *
     * @return $this
     */
    public function setSoilType($soil_type)
    {
        $this->container['soil_type'] = $soil_type;

        return $this;
    }

    /**
     * Gets status_rented
     *
     * @return \Swagger\Client\Model\StatusRented
     */
    public function getStatusRented()
    {
        return $this->container['status_rented'];
    }

    /**
     * Sets status_rented
     *
     * @param \Swagger\Client\Model\StatusRented $status_rented status_rented
     *
     * @return $this
     */
    public function setStatusRented($status_rented)
    {
        $this->container['status_rented'] = $status_rented;

        return $this;
    }

    /**
     * Gets step_mill
     *
     * @return bool
     */
    public function getStepMill()
    {
        return $this->container['step_mill'];
    }

    /**
     * Sets step_mill
     *
     * @param bool $step_mill step_mill
     *
     * @return $this
     */
    public function setStepMill($step_mill)
    {
        $this->container['step_mill'] = $step_mill;

        return $this;
    }

    /**
     * Gets number_of_horse_boxes
     *
     * @return int
     */
    public function getNumberOfHorseBoxes()
    {
        return $this->container['number_of_horse_boxes'];
    }

    /**
     * Sets number_of_horse_boxes
     *
     * @param int $number_of_horse_boxes number_of_horse_boxes
     *
     * @return $this
     */
    public function setNumberOfHorseBoxes($number_of_horse_boxes)
    {
        $this->container['number_of_horse_boxes'] = $number_of_horse_boxes;

        return $this;
    }

    /**
     * Gets storage_has_attic
     *
     * @return bool
     */
    public function getStorageHasAttic()
    {
        return $this->container['storage_has_attic'];
    }

    /**
     * Sets storage_has_attic
     *
     * @param bool $storage_has_attic storage_has_attic
     *
     * @return $this
     */
    public function setStorageHasAttic($storage_has_attic)
    {
        $this->container['storage_has_attic'] = $storage_has_attic;

        return $this;
    }

    /**
     * Gets storage_has_electra
     *
     * @return bool
     */
    public function getStorageHasElectra()
    {
        return $this->container['storage_has_electra'];
    }

    /**
     * Sets storage_has_electra
     *
     * @param bool $storage_has_electra storage_has_electra
     *
     * @return $this
     */
    public function setStorageHasElectra($storage_has_electra)
    {
        $this->container['storage_has_electra'] = $storage_has_electra;

        return $this;
    }

    /**
     * Gets storage_has_heating
     *
     * @return bool
     */
    public function getStorageHasHeating()
    {
        return $this->container['storage_has_heating'];
    }

    /**
     * Sets storage_has_heating
     *
     * @param bool $storage_has_heating storage_has_heating
     *
     * @return $this
     */
    public function setStorageHasHeating($storage_has_heating)
    {
        $this->container['storage_has_heating'] = $storage_has_heating;

        return $this;
    }

    /**
     * Gets storage_has_water
     *
     * @return bool
     */
    public function getStorageHasWater()
    {
        return $this->container['storage_has_water'];
    }

    /**
     * Sets storage_has_water
     *
     * @param bool $storage_has_water storage_has_water
     *
     * @return $this
     */
    public function setStorageHasWater($storage_has_water)
    {
        $this->container['storage_has_water'] = $storage_has_water;

        return $this;
    }

    /**
     * Gets storage_insulation_types
     *
     * @return \Swagger\Client\Model\InsulationType[]
     */
    public function getStorageInsulationTypes()
    {
        return $this->container['storage_insulation_types'];
    }

    /**
     * Sets storage_insulation_types
     *
     * @param \Swagger\Client\Model\InsulationType[] $storage_insulation_types storage_insulation_types
     *
     * @return $this
     */
    public function setStorageInsulationTypes($storage_insulation_types)
    {
        $this->container['storage_insulation_types'] = $storage_insulation_types;

        return $this;
    }

    /**
     * Gets storage_room_type
     *
     * @return \Swagger\Client\Model\StorageRoomType
     */
    public function getStorageRoomType()
    {
        return $this->container['storage_room_type'];
    }

    /**
     * Sets storage_room_type
     *
     * @param \Swagger\Client\Model\StorageRoomType $storage_room_type storage_room_type
     *
     * @return $this
     */
    public function setStorageRoomType($storage_room_type)
    {
        $this->container['storage_room_type'] = $storage_room_type;

        return $this;
    }

    /**
     * Gets sub_type
     *
     * @return \Swagger\Client\Model\SubTypeAlvPlot
     */
    public function getSubType()
    {
        return $this->container['sub_type'];
    }

    /**
     * Sets sub_type
     *
     * @param \Swagger\Client\Model\SubTypeAlvPlot $sub_type sub_type
     *
     * @return $this
     */
    public function setSubType($sub_type)
    {
        $this->container['sub_type'] = $sub_type;

        return $this;
    }

    /**
     * Gets surface_glass_upholstery
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getSurfaceGlassUpholstery()
    {
        return $this->container['surface_glass_upholstery'];
    }

    /**
     * Sets surface_glass_upholstery
     *
     * @param \Swagger\Client\Model\Size $surface_glass_upholstery surface_glass_upholstery
     *
     * @return $this
     */
    public function setSurfaceGlassUpholstery($surface_glass_upholstery)
    {
        $this->container['surface_glass_upholstery'] = $surface_glass_upholstery;

        return $this;
    }

    /**
     * Gets terrace
     *
     * @return bool
     */
    public function getTerrace()
    {
        return $this->container['terrace'];
    }

    /**
     * Sets terrace
     *
     * @param bool $terrace terrace
     *
     * @return $this
     */
    public function setTerrace($terrace)
    {
        $this->container['terrace'] = $terrace;

        return $this;
    }

    /**
     * Gets terrain_building_volume
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getTerrainBuildingVolume()
    {
        return $this->container['terrain_building_volume'];
    }

    /**
     * Sets terrain_building_volume
     *
     * @param \Swagger\Client\Model\Size $terrain_building_volume terrain_building_volume
     *
     * @return $this
     */
    public function setTerrainBuildingVolume($terrain_building_volume)
    {
        $this->container['terrain_building_volume'] = $terrain_building_volume;

        return $this;
    }

    /**
     * Gets terrain_building_volume_area_percentage
     *
     * @return float
     */
    public function getTerrainBuildingVolumeAreaPercentage()
    {
        return $this->container['terrain_building_volume_area_percentage'];
    }

    /**
     * Sets terrain_building_volume_area_percentage
     *
     * @param float $terrain_building_volume_area_percentage terrain_building_volume_area_percentage
     *
     * @return $this
     */
    public function setTerrainBuildingVolumeAreaPercentage($terrain_building_volume_area_percentage)
    {
        $this->container['terrain_building_volume_area_percentage'] = $terrain_building_volume_area_percentage;

        return $this;
    }

    /**
     * Gets terrain_surface
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getTerrainSurface()
    {
        return $this->container['terrain_surface'];
    }

    /**
     * Sets terrain_surface
     *
     * @param \Swagger\Client\Model\Size $terrain_surface terrain_surface
     *
     * @return $this
     */
    public function setTerrainSurface($terrain_surface)
    {
        $this->container['terrain_surface'] = $terrain_surface;

        return $this;
    }

    /**
     * Gets total_parking_capacity
     *
     * @return int
     */
    public function getTotalParkingCapacity()
    {
        return $this->container['total_parking_capacity'];
    }

    /**
     * Sets total_parking_capacity
     *
     * @param int $total_parking_capacity total_parking_capacity
     *
     * @return $this
     */
    public function setTotalParkingCapacity($total_parking_capacity)
    {
        $this->container['total_parking_capacity'] = $total_parking_capacity;

        return $this;
    }

    /**
     * Gets type_code_house
     *
     * @return \Swagger\Client\Model\TypeCodeHouse
     */
    public function getTypeCodeHouse()
    {
        return $this->container['type_code_house'];
    }

    /**
     * Sets type_code_house
     *
     * @param \Swagger\Client\Model\TypeCodeHouse $type_code_house type_code_house
     *
     * @return $this
     */
    public function setTypeCodeHouse($type_code_house)
    {
        $this->container['type_code_house'] = $type_code_house;

        return $this;
    }

    /**
     * Gets type_of_floor_floors
     *
     * @return \Swagger\Client\Model\TypeOfFloor
     */
    public function getTypeOfFloorFloors()
    {
        return $this->container['type_of_floor_floors'];
    }

    /**
     * Sets type_of_floor_floors
     *
     * @param \Swagger\Client\Model\TypeOfFloor $type_of_floor_floors type_of_floor_floors
     *
     * @return $this
     */
    public function setTypeOfFloorFloors($type_of_floor_floors)
    {
        $this->container['type_of_floor_floors'] = $type_of_floor_floors;

        return $this;
    }

    /**
     * Gets type_of_floor_ground_floor
     *
     * @return \Swagger\Client\Model\TypeOfFloor
     */
    public function getTypeOfFloorGroundFloor()
    {
        return $this->container['type_of_floor_ground_floor'];
    }

    /**
     * Sets type_of_floor_ground_floor
     *
     * @param \Swagger\Client\Model\TypeOfFloor $type_of_floor_ground_floor type_of_floor_ground_floor
     *
     * @return $this
     */
    public function setTypeOfFloorGroundFloor($type_of_floor_ground_floor)
    {
        $this->container['type_of_floor_ground_floor'] = $type_of_floor_ground_floor;

        return $this;
    }

    /**
     * Gets types_of_communal_area
     *
     * @return \Swagger\Client\Model\TypeOfCommunualArea[]
     */
    public function getTypesOfCommunalArea()
    {
        return $this->container['types_of_communal_area'];
    }

    /**
     * Sets types_of_communal_area
     *
     * @param \Swagger\Client\Model\TypeOfCommunualArea[] $types_of_communal_area types_of_communal_area
     *
     * @return $this
     */
    public function setTypesOfCommunalArea($types_of_communal_area)
    {
        $this->container['types_of_communal_area'] = $types_of_communal_area;

        return $this;
    }

    /**
     * Gets types_of_window_frames
     *
     * @return \Swagger\Client\Model\TypeOfWindowFrame[]
     */
    public function getTypesOfWindowFrames()
    {
        return $this->container['types_of_window_frames'];
    }

    /**
     * Sets types_of_window_frames
     *
     * @param \Swagger\Client\Model\TypeOfWindowFrame[] $types_of_window_frames types_of_window_frames
     *
     * @return $this
     */
    public function setTypesOfWindowFrames($types_of_window_frames)
    {
        $this->container['types_of_window_frames'] = $types_of_window_frames;

        return $this;
    }

    /**
     * Gets usable_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getUsableArea()
    {
        return $this->container['usable_area'];
    }

    /**
     * Sets usable_area
     *
     * @param \Swagger\Client\Model\Size $usable_area usable_area
     *
     * @return $this
     */
    public function setUsableArea($usable_area)
    {
        $this->container['usable_area'] = $usable_area;

        return $this;
    }

    /**
     * Gets cattle_farming_subtype
     *
     * @return \Swagger\Client\Model\CattleFarmingSubtype
     */
    public function getCattleFarmingSubtype()
    {
        return $this->container['cattle_farming_subtype'];
    }

    /**
     * Sets cattle_farming_subtype
     *
     * @param \Swagger\Client\Model\CattleFarmingSubtype $cattle_farming_subtype cattle_farming_subtype
     *
     * @return $this
     */
    public function setCattleFarmingSubtype($cattle_farming_subtype)
    {
        $this->container['cattle_farming_subtype'] = $cattle_farming_subtype;

        return $this;
    }

    /**
     * Gets v_vo
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getVVo()
    {
        return $this->container['v_vo'];
    }

    /**
     * Sets v_vo
     *
     * @param \Swagger\Client\Model\Size $v_vo v_vo
     *
     * @return $this
     */
    public function setVVo($v_vo)
    {
        $this->container['v_vo'] = $v_vo;

        return $this;
    }

    /**
     * Gets warm_water_types
     *
     * @return \Swagger\Client\Model\HeatingWaterMethod[]
     */
    public function getWarmWaterTypes()
    {
        return $this->container['warm_water_types'];
    }

    /**
     * Sets warm_water_types
     *
     * @param \Swagger\Client\Model\HeatingWaterMethod[] $warm_water_types warm_water_types
     *
     * @return $this
     */
    public function setWarmWaterTypes($warm_water_types)
    {
        $this->container['warm_water_types'] = $warm_water_types;

        return $this;
    }

    /**
     * Gets welfare_state
     *
     * @return \Swagger\Client\Model\WelfareState
     */
    public function getWelfareState()
    {
        return $this->container['welfare_state'];
    }

    /**
     * Sets welfare_state
     *
     * @param \Swagger\Client\Model\WelfareState $welfare_state welfare_state
     *
     * @return $this
     */
    public function setWelfareState($welfare_state)
    {
        $this->container['welfare_state'] = $welfare_state;

        return $this;
    }

    /**
     * Gets width
     *
     * @return double
     */
    public function getWidth()
    {
        return $this->container['width'];
    }

    /**
     * Sets width
     *
     * @param double $width width
     *
     * @return $this
     */
    public function setWidth($width)
    {
        $this->container['width'] = $width;

        return $this;
    }

    /**
     * Gets wvo
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getWvo()
    {
        return $this->container['wvo'];
    }

    /**
     * Sets wvo
     *
     * @param \Swagger\Client\Model\Size $wvo wvo
     *
     * @return $this
     */
    public function setWvo($wvo)
    {
        $this->container['wvo'] = $wvo;

        return $this;
    }

    /**
     * Gets year_of_construction
     *
     * @return \Swagger\Client\Model\YearOfConstruction
     */
    public function getYearOfConstruction()
    {
        return $this->container['year_of_construction'];
    }

    /**
     * Sets year_of_construction
     *
     * @param \Swagger\Client\Model\YearOfConstruction $year_of_construction year_of_construction
     *
     * @return $this
     */
    public function setYearOfConstruction($year_of_construction)
    {
        $this->container['year_of_construction'] = $year_of_construction;

        return $this;
    }

    /**
     * Gets count_of_pitches
     *
     * @return int
     */
    public function getCountOfPitches()
    {
        return $this->container['count_of_pitches'];
    }

    /**
     * Sets count_of_pitches
     *
     * @param int $count_of_pitches count_of_pitches
     *
     * @return $this
     */
    public function setCountOfPitches($count_of_pitches)
    {
        $this->container['count_of_pitches'] = $count_of_pitches;

        return $this;
    }

    /**
     * Gets has_annual_pitches
     *
     * @return bool
     */
    public function getHasAnnualPitches()
    {
        return $this->container['has_annual_pitches'];
    }

    /**
     * Sets has_annual_pitches
     *
     * @param bool $has_annual_pitches has_annual_pitches
     *
     * @return $this
     */
    public function setHasAnnualPitches($has_annual_pitches)
    {
        $this->container['has_annual_pitches'] = $has_annual_pitches;

        return $this;
    }

    /**
     * Gets count_of_accommodations
     *
     * @return int
     */
    public function getCountOfAccommodations()
    {
        return $this->container['count_of_accommodations'];
    }

    /**
     * Sets count_of_accommodations
     *
     * @param int $count_of_accommodations count_of_accommodations
     *
     * @return $this
     */
    public function setCountOfAccommodations($count_of_accommodations)
    {
        $this->container['count_of_accommodations'] = $count_of_accommodations;

        return $this;
    }

    /**
     * Gets capacity_in_number_of_persons
     *
     * @return int
     */
    public function getCapacityInNumberOfPersons()
    {
        return $this->container['capacity_in_number_of_persons'];
    }

    /**
     * Sets capacity_in_number_of_persons
     *
     * @param int $capacity_in_number_of_persons capacity_in_number_of_persons
     *
     * @return $this
     */
    public function setCapacityInNumberOfPersons($capacity_in_number_of_persons)
    {
        $this->container['capacity_in_number_of_persons'] = $capacity_in_number_of_persons;

        return $this;
    }

    /**
     * Gets leisure_type
     *
     * @return \Swagger\Client\Model\LeisureType
     */
    public function getLeisureType()
    {
        return $this->container['leisure_type'];
    }

    /**
     * Sets leisure_type
     *
     * @param \Swagger\Client\Model\LeisureType $leisure_type leisure_type
     *
     * @return $this
     */
    public function setLeisureType($leisure_type)
    {
        $this->container['leisure_type'] = $leisure_type;

        return $this;
    }

    /**
     * Gets leisure_facility_types
     *
     * @return \Swagger\Client\Model\LeisureFacilityType[]
     */
    public function getLeisureFacilityTypes()
    {
        return $this->container['leisure_facility_types'];
    }

    /**
     * Sets leisure_facility_types
     *
     * @param \Swagger\Client\Model\LeisureFacilityType[] $leisure_facility_types leisure_facility_types
     *
     * @return $this
     */
    public function setLeisureFacilityTypes($leisure_facility_types)
    {
        $this->container['leisure_facility_types'] = $leisure_facility_types;

        return $this;
    }

    /**
     * Gets investment_type
     *
     * @return \Swagger\Client\Model\InvestmentType
     */
    public function getInvestmentType()
    {
        return $this->container['investment_type'];
    }

    /**
     * Sets investment_type
     *
     * @param \Swagger\Client\Model\InvestmentType $investment_type investment_type
     *
     * @return $this
     */
    public function setInvestmentType($investment_type)
    {
        $this->container['investment_type'] = $investment_type;

        return $this;
    }

    /**
     * Gets horeca_sector_types
     *
     * @return \Swagger\Client\Model\HorecaSectorType[]
     */
    public function getHorecaSectorTypes()
    {
        return $this->container['horeca_sector_types'];
    }

    /**
     * Sets horeca_sector_types
     *
     * @param \Swagger\Client\Model\HorecaSectorType[] $horeca_sector_types horeca_sector_types
     *
     * @return $this
     */
    public function setHorecaSectorTypes($horeca_sector_types)
    {
        $this->container['horeca_sector_types'] = $horeca_sector_types;

        return $this;
    }

    /**
     * Gets remaining_term_of_a_contract
     *
     * @return int
     */
    public function getRemainingTermOfAContract()
    {
        return $this->container['remaining_term_of_a_contract'];
    }

    /**
     * Sets remaining_term_of_a_contract
     *
     * @param int $remaining_term_of_a_contract remaining_term_of_a_contract
     *
     * @return $this
     */
    public function setRemainingTermOfAContract($remaining_term_of_a_contract)
    {
        $this->container['remaining_term_of_a_contract'] = $remaining_term_of_a_contract;

        return $this;
    }

    /**
     * Gets vacancy_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getVacancyArea()
    {
        return $this->container['vacancy_area'];
    }

    /**
     * Sets vacancy_area
     *
     * @param \Swagger\Client\Model\Size $vacancy_area vacancy_area
     *
     * @return $this
     */
    public function setVacancyArea($vacancy_area)
    {
        $this->container['vacancy_area'] = $vacancy_area;

        return $this;
    }

    /**
     * Gets vacancy_rental_value
     *
     * @return float
     */
    public function getVacancyRentalValue()
    {
        return $this->container['vacancy_rental_value'];
    }

    /**
     * Sets vacancy_rental_value
     *
     * @param float $vacancy_rental_value vacancy_rental_value
     *
     * @return $this
     */
    public function setVacancyRentalValue($vacancy_rental_value)
    {
        $this->container['vacancy_rental_value'] = $vacancy_rental_value;

        return $this;
    }

    /**
     * Gets gross_initial_yield
     *
     * @return int
     */
    public function getGrossInitialYield()
    {
        return $this->container['gross_initial_yield'];
    }

    /**
     * Sets gross_initial_yield
     *
     * @param int $gross_initial_yield gross_initial_yield
     *
     * @return $this
     */
    public function setGrossInitialYield($gross_initial_yield)
    {
        $this->container['gross_initial_yield'] = $gross_initial_yield;

        return $this;
    }

    /**
     * Gets gross_rental_income
     *
     * @return float
     */
    public function getGrossRentalIncome()
    {
        return $this->container['gross_rental_income'];
    }

    /**
     * Sets gross_rental_income
     *
     * @param float $gross_rental_income gross_rental_income
     *
     * @return $this
     */
    public function setGrossRentalIncome($gross_rental_income)
    {
        $this->container['gross_rental_income'] = $gross_rental_income;

        return $this;
    }

    /**
     * Gets count_of_tenants
     *
     * @return int
     */
    public function getCountOfTenants()
    {
        return $this->container['count_of_tenants'];
    }

    /**
     * Sets count_of_tenants
     *
     * @param int $count_of_tenants count_of_tenants
     *
     * @return $this
     */
    public function setCountOfTenants($count_of_tenants)
    {
        $this->container['count_of_tenants'] = $count_of_tenants;

        return $this;
    }

    /**
     * Gets count_of_separately_lettable_housing_units
     *
     * @return int
     */
    public function getCountOfSeparatelyLettableHousingUnits()
    {
        return $this->container['count_of_separately_lettable_housing_units'];
    }

    /**
     * Sets count_of_separately_lettable_housing_units
     *
     * @param int $count_of_separately_lettable_housing_units count_of_separately_lettable_housing_units
     *
     * @return $this
     */
    public function setCountOfSeparatelyLettableHousingUnits($count_of_separately_lettable_housing_units)
    {
        $this->container['count_of_separately_lettable_housing_units'] = $count_of_separately_lettable_housing_units;

        return $this;
    }

    /**
     * Gets portefeuille
     *
     * @return bool
     */
    public function getPortefeuille()
    {
        return $this->container['portefeuille'];
    }

    /**
     * Sets portefeuille
     *
     * @param bool $portefeuille portefeuille
     *
     * @return $this
     */
    public function setPortefeuille($portefeuille)
    {
        $this->container['portefeuille'] = $portefeuille;

        return $this;
    }

    /**
     * Gets social_property_type
     *
     * @return \Swagger\Client\Model\SocialPropertyType
     */
    public function getSocialPropertyType()
    {
        return $this->container['social_property_type'];
    }

    /**
     * Sets social_property_type
     *
     * @param \Swagger\Client\Model\SocialPropertyType $social_property_type social_property_type
     *
     * @return $this
     */
    public function setSocialPropertyType($social_property_type)
    {
        $this->container['social_property_type'] = $social_property_type;

        return $this;
    }

    /**
     * Gets social_property_facility_types
     *
     * @return \Swagger\Client\Model\SocialPropertyFacilityType[]
     */
    public function getSocialPropertyFacilityTypes()
    {
        return $this->container['social_property_facility_types'];
    }

    /**
     * Sets social_property_facility_types
     *
     * @param \Swagger\Client\Model\SocialPropertyFacilityType[] $social_property_facility_types social_property_facility_types
     *
     * @return $this
     */
    public function setSocialPropertyFacilityTypes($social_property_facility_types)
    {
        $this->container['social_property_facility_types'] = $social_property_facility_types;

        return $this;
    }

    /**
     * Gets redesignation_possible
     *
     * @return bool
     */
    public function getRedesignationPossible()
    {
        return $this->container['redesignation_possible'];
    }

    /**
     * Sets redesignation_possible
     *
     * @param bool $redesignation_possible redesignation_possible
     *
     * @return $this
     */
    public function setRedesignationPossible($redesignation_possible)
    {
        $this->container['redesignation_possible'] = $redesignation_possible;

        return $this;
    }

    /**
     * Gets return_of_services
     *
     * @return bool
     */
    public function getReturnOfServices()
    {
        return $this->container['return_of_services'];
    }

    /**
     * Sets return_of_services
     *
     * @param bool $return_of_services return_of_services
     *
     * @return $this
     */
    public function setReturnOfServices($return_of_services)
    {
        $this->container['return_of_services'] = $return_of_services;

        return $this;
    }

    /**
     * Gets practic_area
     *
     * @return bool
     */
    public function getPracticArea()
    {
        return $this->container['practic_area'];
    }

    /**
     * Sets practic_area
     *
     * @param bool $practic_area practic_area
     *
     * @return $this
     */
    public function setPracticArea($practic_area)
    {
        $this->container['practic_area'] = $practic_area;

        return $this;
    }

    /**
     * Gets practic_area_capacity
     *
     * @return int
     */
    public function getPracticAreaCapacity()
    {
        return $this->container['practic_area_capacity'];
    }

    /**
     * Sets practic_area_capacity
     *
     * @param int $practic_area_capacity practic_area_capacity
     *
     * @return $this
     */
    public function setPracticAreaCapacity($practic_area_capacity)
    {
        $this->container['practic_area_capacity'] = $practic_area_capacity;

        return $this;
    }

    /**
     * Gets with_accommodations
     *
     * @return bool
     */
    public function getWithAccommodations()
    {
        return $this->container['with_accommodations'];
    }

    /**
     * Sets with_accommodations
     *
     * @param bool $with_accommodations with_accommodations
     *
     * @return $this
     */
    public function setWithAccommodations($with_accommodations)
    {
        $this->container['with_accommodations'] = $with_accommodations;

        return $this;
    }

    /**
     * Gets count_of_housing_units_in_accommodations
     *
     * @return int
     */
    public function getCountOfHousingUnitsInAccommodations()
    {
        return $this->container['count_of_housing_units_in_accommodations'];
    }

    /**
     * Sets count_of_housing_units_in_accommodations
     *
     * @param int $count_of_housing_units_in_accommodations count_of_housing_units_in_accommodations
     *
     * @return $this
     */
    public function setCountOfHousingUnitsInAccommodations($count_of_housing_units_in_accommodations)
    {
        $this->container['count_of_housing_units_in_accommodations'] = $count_of_housing_units_in_accommodations;

        return $this;
    }

    /**
     * Gets shared_accommodations
     *
     * @return bool
     */
    public function getSharedAccommodations()
    {
        return $this->container['shared_accommodations'];
    }

    /**
     * Sets shared_accommodations
     *
     * @param bool $shared_accommodations shared_accommodations
     *
     * @return $this
     */
    public function setSharedAccommodations($shared_accommodations)
    {
        $this->container['shared_accommodations'] = $shared_accommodations;

        return $this;
    }

    /**
     * Gets shared_sanitary_facilities
     *
     * @return bool
     */
    public function getSharedSanitaryFacilities()
    {
        return $this->container['shared_sanitary_facilities'];
    }

    /**
     * Sets shared_sanitary_facilities
     *
     * @param bool $shared_sanitary_facilities shared_sanitary_facilities
     *
     * @return $this
     */
    public function setSharedSanitaryFacilities($shared_sanitary_facilities)
    {
        $this->container['shared_sanitary_facilities'] = $shared_sanitary_facilities;

        return $this;
    }

    /**
     * Gets name_of_building
     *
     * @return string
     */
    public function getNameOfBuilding()
    {
        return $this->container['name_of_building'];
    }

    /**
     * Sets name_of_building
     *
     * @param string $name_of_building name_of_building
     *
     * @return $this
     */
    public function setNameOfBuilding($name_of_building)
    {
        $this->container['name_of_building'] = $name_of_building;

        return $this;
    }

    /**
     * Gets residential_facilities
     *
     * @return \Swagger\Client\Model\ResidentialFacility[]
     */
    public function getResidentialFacilities()
    {
        return $this->container['residential_facilities'];
    }

    /**
     * Sets residential_facilities
     *
     * @param \Swagger\Client\Model\ResidentialFacility[] $residential_facilities residential_facilities
     *
     * @return $this
     */
    public function setResidentialFacilities($residential_facilities)
    {
        $this->container['residential_facilities'] = $residential_facilities;

        return $this;
    }

    /**
     * Gets home_plot_surface
     *
     * @return float
     */
    public function getHomePlotSurface()
    {
        return $this->container['home_plot_surface'];
    }

    /**
     * Sets home_plot_surface
     *
     * @param float $home_plot_surface home_plot_surface
     *
     * @return $this
     */
    public function setHomePlotSurface($home_plot_surface)
    {
        $this->container['home_plot_surface'] = $home_plot_surface;

        return $this;
    }

    /**
     * Gets number_of_veal_calves
     *
     * @return int
     */
    public function getNumberOfVealCalves()
    {
        return $this->container['number_of_veal_calves'];
    }

    /**
     * Sets number_of_veal_calves
     *
     * @param int $number_of_veal_calves number_of_veal_calves
     *
     * @return $this
     */
    public function setNumberOfVealCalves($number_of_veal_calves)
    {
        $this->container['number_of_veal_calves'] = $number_of_veal_calves;

        return $this;
    }

    /**
     * Gets has_green_label
     *
     * @return bool
     */
    public function getHasGreenLabel()
    {
        return $this->container['has_green_label'];
    }

    /**
     * Sets has_green_label
     *
     * @param bool $has_green_label has_green_label
     *
     * @return $this
     */
    public function setHasGreenLabel($has_green_label)
    {
        $this->container['has_green_label'] = $has_green_label;

        return $this;
    }

    /**
     * Gets poultry_housing_types
     *
     * @return \Swagger\Client\Model\PoultryHousingType[]
     */
    public function getPoultryHousingTypes()
    {
        return $this->container['poultry_housing_types'];
    }

    /**
     * Sets poultry_housing_types
     *
     * @param \Swagger\Client\Model\PoultryHousingType[] $poultry_housing_types poultry_housing_types
     *
     * @return $this
     */
    public function setPoultryHousingTypes($poultry_housing_types)
    {
        $this->container['poultry_housing_types'] = $poultry_housing_types;

        return $this;
    }

    /**
     * Gets bog_combination_object_type
     *
     * @return \Swagger\Client\Model\BogCombinationObjectType
     */
    public function getBogCombinationObjectType()
    {
        return $this->container['bog_combination_object_type'];
    }

    /**
     * Sets bog_combination_object_type
     *
     * @param \Swagger\Client\Model\BogCombinationObjectType $bog_combination_object_type bog_combination_object_type
     *
     * @return $this
     */
    public function setBogCombinationObjectType($bog_combination_object_type)
    {
        $this->container['bog_combination_object_type'] = $bog_combination_object_type;

        return $this;
    }

    /**
     * Gets bog_combination_object_situation
     *
     * @return \Swagger\Client\Model\BogCombinationObjectSituation
     */
    public function getBogCombinationObjectSituation()
    {
        return $this->container['bog_combination_object_situation'];
    }

    /**
     * Sets bog_combination_object_situation
     *
     * @param \Swagger\Client\Model\BogCombinationObjectSituation $bog_combination_object_situation bog_combination_object_situation
     *
     * @return $this
     */
    public function setBogCombinationObjectSituation($bog_combination_object_situation)
    {
        $this->container['bog_combination_object_situation'] = $bog_combination_object_situation;

        return $this;
    }

    /**
     * Gets bog_combination_object_status
     *
     * @return \Swagger\Client\Model\BogCombinationObjectStatus
     */
    public function getBogCombinationObjectStatus()
    {
        return $this->container['bog_combination_object_status'];
    }

    /**
     * Sets bog_combination_object_status
     *
     * @param \Swagger\Client\Model\BogCombinationObjectStatus $bog_combination_object_status bog_combination_object_status
     *
     * @return $this
     */
    public function setBogCombinationObjectStatus($bog_combination_object_status)
    {
        $this->container['bog_combination_object_status'] = $bog_combination_object_status;

        return $this;
    }

    /**
     * Gets bog_combination_object_area
     *
     * @return \Swagger\Client\Model\Size
     */
    public function getBogCombinationObjectArea()
    {
        return $this->container['bog_combination_object_area'];
    }

    /**
     * Sets bog_combination_object_area
     *
     * @param \Swagger\Client\Model\Size $bog_combination_object_area bog_combination_object_area
     *
     * @return $this
     */
    public function setBogCombinationObjectArea($bog_combination_object_area)
    {
        $this->container['bog_combination_object_area'] = $bog_combination_object_area;

        return $this;
    }

    /**
     * Gets glass_structures
     *
     * @return \Swagger\Client\Model\BaseAlvStructure[]
     */
    public function getGlassStructures()
    {
        return $this->container['glass_structures'];
    }

    /**
     * Sets glass_structures
     *
     * @param \Swagger\Client\Model\BaseAlvStructure[] $glass_structures glass_structures
     *
     * @return $this
     */
    public function setGlassStructures($glass_structures)
    {
        $this->container['glass_structures'] = $glass_structures;

        return $this;
    }

    /**
     * Gets riding_halls
     *
     * @return \Swagger\Client\Model\RidingHall[]
     */
    public function getRidingHalls()
    {
        return $this->container['riding_halls'];
    }

    /**
     * Sets riding_halls
     *
     * @param \Swagger\Client\Model\RidingHall[] $riding_halls riding_halls
     *
     * @return $this
     */
    public function setRidingHalls($riding_halls)
    {
        $this->container['riding_halls'] = $riding_halls;

        return $this;
    }

    /**
     * Gets linked_folder_tree
     *
     * @return \Swagger\Client\Model\LinkedFolderTree
     */
    public function getLinkedFolderTree()
    {
        return $this->container['linked_folder_tree'];
    }

    /**
     * Sets linked_folder_tree
     *
     * @param \Swagger\Client\Model\LinkedFolderTree $linked_folder_tree linked_folder_tree
     *
     * @return $this
     */
    public function setLinkedFolderTree($linked_folder_tree)
    {
        $this->container['linked_folder_tree'] = $linked_folder_tree;

        return $this;
    }

    /**
     * Gets linked_bids
     *
     * @return \Swagger\Client\Model\LinkedBid[]
     */
    public function getLinkedBids()
    {
        return $this->container['linked_bids'];
    }

    /**
     * Sets linked_bids
     *
     * @param \Swagger\Client\Model\LinkedBid[] $linked_bids linked_bids
     *
     * @return $this
     */
    public function setLinkedBids($linked_bids)
    {
        $this->container['linked_bids'] = $linked_bids;

        return $this;
    }

    /**
     * Gets acceptance_details
     *
     * @return \Swagger\Client\Model\AcceptanceDetails
     */
    public function getAcceptanceDetails()
    {
        return $this->container['acceptance_details'];
    }

    /**
     * Sets acceptance_details
     *
     * @param \Swagger\Client\Model\AcceptanceDetails $acceptance_details acceptance_details
     *
     * @return $this
     */
    public function setAcceptanceDetails($acceptance_details)
    {
        $this->container['acceptance_details'] = $acceptance_details;

        return $this;
    }

    /**
     * Gets advertisement_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getAdvertisementText()
    {
        return $this->container['advertisement_text'];
    }

    /**
     * Sets advertisement_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $advertisement_text advertisement_text
     *
     * @return $this
     */
    public function setAdvertisementText($advertisement_text)
    {
        $this->container['advertisement_text'] = $advertisement_text;

        return $this;
    }

    /**
     * Gets assignment_phase
     *
     * @return \Swagger\Client\Model\AssignmentPhase
     */
    public function getAssignmentPhase()
    {
        return $this->container['assignment_phase'];
    }

    /**
     * Sets assignment_phase
     *
     * @param \Swagger\Client\Model\AssignmentPhase $assignment_phase assignment_phase
     *
     * @return $this
     */
    public function setAssignmentPhase($assignment_phase)
    {
        $this->container['assignment_phase'] = $assignment_phase;

        return $this;
    }

    /**
     * Gets availability_status
     *
     * @return \Swagger\Client\Model\AvailabilityStatus
     */
    public function getAvailabilityStatus()
    {
        return $this->container['availability_status'];
    }

    /**
     * Sets availability_status
     *
     * @param \Swagger\Client\Model\AvailabilityStatus $availability_status availability_status
     *
     * @return $this
     */
    public function setAvailabilityStatus($availability_status)
    {
        $this->container['availability_status'] = $availability_status;

        return $this;
    }

    /**
     * Gets balcony_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getBalconyText()
    {
        return $this->container['balcony_text'];
    }

    /**
     * Sets balcony_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $balcony_text balcony_text
     *
     * @return $this
     */
    public function setBalconyText($balcony_text)
    {
        $this->container['balcony_text'] = $balcony_text;

        return $this;
    }

    /**
     * Gets brochures
     *
     * @return \Swagger\Client\Model\BrochureBlob[]
     */
    public function getBrochures()
    {
        return $this->container['brochures'];
    }

    /**
     * Sets brochures
     *
     * @param \Swagger\Client\Model\BrochureBlob[] $brochures brochures
     *
     * @return $this
     */
    public function setBrochures($brochures)
    {
        $this->container['brochures'] = $brochures;

        return $this;
    }

    /**
     * Gets business_partners
     *
     * @return \Swagger\Client\Model\AssignmentBusinessPartner[]
     */
    public function getBusinessPartners()
    {
        return $this->container['business_partners'];
    }

    /**
     * Sets business_partners
     *
     * @param \Swagger\Client\Model\AssignmentBusinessPartner[] $business_partners business_partners
     *
     * @return $this
     */
    public function setBusinessPartners($business_partners)
    {
        $this->container['business_partners'] = $business_partners;

        return $this;
    }

    /**
     * Gets calculate_price_per_m2
     *
     * @return bool
     */
    public function getCalculatePricePerM2()
    {
        return $this->container['calculate_price_per_m2'];
    }

    /**
     * Sets calculate_price_per_m2
     *
     * @param bool $calculate_price_per_m2 calculate_price_per_m2
     *
     * @return $this
     */
    public function setCalculatePricePerM2($calculate_price_per_m2)
    {
        $this->container['calculate_price_per_m2'] = $calculate_price_per_m2;

        return $this;
    }

    /**
     * Gets changes_number_of_inside_parking_lots
     *
     * @return \Swagger\Client\Model\PartialChange[]
     */
    public function getChangesNumberOfInsideParkingLots()
    {
        return $this->container['changes_number_of_inside_parking_lots'];
    }

    /**
     * Sets changes_number_of_inside_parking_lots
     *
     * @param \Swagger\Client\Model\PartialChange[] $changes_number_of_inside_parking_lots changes_number_of_inside_parking_lots
     *
     * @return $this
     */
    public function setChangesNumberOfInsideParkingLots($changes_number_of_inside_parking_lots)
    {
        $this->container['changes_number_of_inside_parking_lots'] = $changes_number_of_inside_parking_lots;

        return $this;
    }

    /**
     * Gets changes_number_of_parking_lots
     *
     * @return \Swagger\Client\Model\PartialChange[]
     */
    public function getChangesNumberOfParkingLots()
    {
        return $this->container['changes_number_of_parking_lots'];
    }

    /**
     * Sets changes_number_of_parking_lots
     *
     * @param \Swagger\Client\Model\PartialChange[] $changes_number_of_parking_lots changes_number_of_parking_lots
     *
     * @return $this
     */
    public function setChangesNumberOfParkingLots($changes_number_of_parking_lots)
    {
        $this->container['changes_number_of_parking_lots'] = $changes_number_of_parking_lots;

        return $this;
    }

    /**
     * Gets changes_surface
     *
     * @return \Swagger\Client\Model\PartialChange[]
     */
    public function getChangesSurface()
    {
        return $this->container['changes_surface'];
    }

    /**
     * Sets changes_surface
     *
     * @param \Swagger\Client\Model\PartialChange[] $changes_surface changes_surface
     *
     * @return $this
     */
    public function setChangesSurface($changes_surface)
    {
        $this->container['changes_surface'] = $changes_surface;

        return $this;
    }

    /**
     * Gets confidentiality_level
     *
     * @return \Swagger\Client\Model\ConfidentialityLevel
     */
    public function getConfidentialityLevel()
    {
        return $this->container['confidentiality_level'];
    }

    /**
     * Sets confidentiality_level
     *
     * @param \Swagger\Client\Model\ConfidentialityLevel $confidentiality_level confidentiality_level
     *
     * @return $this
     */
    public function setConfidentialityLevel($confidentiality_level)
    {
        $this->container['confidentiality_level'] = $confidentiality_level;

        return $this;
    }

    /**
     * Gets contract_reason
     *
     * @return \Swagger\Client\Model\ContractReason
     */
    public function getContractReason()
    {
        return $this->container['contract_reason'];
    }

    /**
     * Sets contract_reason
     *
     * @param \Swagger\Client\Model\ContractReason $contract_reason contract_reason
     *
     * @return $this
     */
    public function setContractReason($contract_reason)
    {
        $this->container['contract_reason'] = $contract_reason;

        return $this;
    }

    /**
     * Gets contract_source
     *
     * @return \Swagger\Client\Model\ContractSource
     */
    public function getContractSource()
    {
        return $this->container['contract_source'];
    }

    /**
     * Sets contract_source
     *
     * @param \Swagger\Client\Model\ContractSource $contract_source contract_source
     *
     * @return $this
     */
    public function setContractSource($contract_source)
    {
        $this->container['contract_source'] = $contract_source;

        return $this;
    }

    /**
     * Gets end_date_publication
     *
     * @return \DateTime
     */
    public function getEndDatePublication()
    {
        return $this->container['end_date_publication'];
    }

    /**
     * Sets end_date_publication
     *
     * @param \DateTime $end_date_publication end_date_publication
     *
     * @return $this
     */
    public function setEndDatePublication($end_date_publication)
    {
        $this->container['end_date_publication'] = $end_date_publication;

        return $this;
    }

    /**
     * Gets environment_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getEnvironmentText()
    {
        return $this->container['environment_text'];
    }

    /**
     * Sets environment_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $environment_text environment_text
     *
     * @return $this
     */
    public function setEnvironmentText($environment_text)
    {
        $this->container['environment_text'] = $environment_text;

        return $this;
    }

    /**
     * Gets first_floor_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getFirstFloorText()
    {
        return $this->container['first_floor_text'];
    }

    /**
     * Sets first_floor_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $first_floor_text first_floor_text
     *
     * @return $this
     */
    public function setFirstFloorText($first_floor_text)
    {
        $this->container['first_floor_text'] = $first_floor_text;

        return $this;
    }

    /**
     * Gets for_rent
     *
     * @return bool
     */
    public function getForRent()
    {
        return $this->container['for_rent'];
    }

    /**
     * Sets for_rent
     *
     * @param bool $for_rent for_rent
     *
     * @return $this
     */
    public function setForRent($for_rent)
    {
        $this->container['for_rent'] = $for_rent;

        return $this;
    }

    /**
     * Gets for_sale
     *
     * @return bool
     */
    public function getForSale()
    {
        return $this->container['for_sale'];
    }

    /**
     * Sets for_sale
     *
     * @param bool $for_sale for_sale
     *
     * @return $this
     */
    public function setForSale($for_sale)
    {
        $this->container['for_sale'] = $for_sale;

        return $this;
    }

    /**
     * Gets gardens_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getGardensText()
    {
        return $this->container['gardens_text'];
    }

    /**
     * Sets gardens_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $gardens_text gardens_text
     *
     * @return $this
     */
    public function setGardensText($gardens_text)
    {
        $this->container['gardens_text'] = $gardens_text;

        return $this;
    }

    /**
     * Gets ground_floor_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getGroundFloorText()
    {
        return $this->container['ground_floor_text'];
    }

    /**
     * Sets ground_floor_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $ground_floor_text ground_floor_text
     *
     * @return $this
     */
    public function setGroundFloorText($ground_floor_text)
    {
        $this->container['ground_floor_text'] = $ground_floor_text;

        return $this;
    }

    /**
     * Gets hide_on_funda_until
     *
     * @return \DateTime
     */
    public function getHideOnFundaUntil()
    {
        return $this->container['hide_on_funda_until'];
    }

    /**
     * Sets hide_on_funda_until
     *
     * @param \DateTime $hide_on_funda_until hide_on_funda_until
     *
     * @return $this
     */
    public function setHideOnFundaUntil($hide_on_funda_until)
    {
        $this->container['hide_on_funda_until'] = $hide_on_funda_until;

        return $this;
    }

    /**
     * Gets funda_postal_code
     *
     * @return string
     */
    public function getFundaPostalCode()
    {
        return $this->container['funda_postal_code'];
    }

    /**
     * Sets funda_postal_code
     *
     * @param string $funda_postal_code funda_postal_code
     *
     * @return $this
     */
    public function setFundaPostalCode($funda_postal_code)
    {
        if (!is_null($funda_postal_code) && (mb_strlen($funda_postal_code) > 7)) {
            throw new \InvalidArgumentException('invalid length for $funda_postal_code when calling AcquisitionObjectAssignment., must be smaller than or equal to 7.');
        }

        $this->container['funda_postal_code'] = $funda_postal_code;

        return $this;
    }

    /**
     * Gets funda_street
     *
     * @return string
     */
    public function getFundaStreet()
    {
        return $this->container['funda_street'];
    }

    /**
     * Sets funda_street
     *
     * @param string $funda_street funda_street
     *
     * @return $this
     */
    public function setFundaStreet($funda_street)
    {
        if (!is_null($funda_street) && (mb_strlen($funda_street) > 43)) {
            throw new \InvalidArgumentException('invalid length for $funda_street when calling AcquisitionObjectAssignment., must be smaller than or equal to 43.');
        }

        $this->container['funda_street'] = $funda_street;

        return $this;
    }

    /**
     * Gets funda_locality
     *
     * @return string
     */
    public function getFundaLocality()
    {
        return $this->container['funda_locality'];
    }

    /**
     * Sets funda_locality
     *
     * @param string $funda_locality funda_locality
     *
     * @return $this
     */
    public function setFundaLocality($funda_locality)
    {
        if (!is_null($funda_locality) && (mb_strlen($funda_locality) > 24)) {
            throw new \InvalidArgumentException('invalid length for $funda_locality when calling AcquisitionObjectAssignment., must be smaller than or equal to 24.');
        }

        $this->container['funda_locality'] = $funda_locality;

        return $this;
    }

    /**
     * Gets is_temporarily_removed_from_funda
     *
     * @return bool
     */
    public function getIsTemporarilyRemovedFromFunda()
    {
        return $this->container['is_temporarily_removed_from_funda'];
    }

    /**
     * Sets is_temporarily_removed_from_funda
     *
     * @param bool $is_temporarily_removed_from_funda is_temporarily_removed_from_funda
     *
     * @return $this
     */
    public function setIsTemporarilyRemovedFromFunda($is_temporarily_removed_from_funda)
    {
        $this->container['is_temporarily_removed_from_funda'] = $is_temporarily_removed_from_funda;

        return $this;
    }

    /**
     * Gets hide_price
     *
     * @return bool
     */
    public function getHidePrice()
    {
        return $this->container['hide_price'];
    }

    /**
     * Sets hide_price
     *
     * @param bool $hide_price hide_price
     *
     * @return $this
     */
    public function setHidePrice($hide_price)
    {
        $this->container['hide_price'] = $hide_price;

        return $this;
    }

    /**
     * Gets import_details
     *
     * @return \Swagger\Client\Model\ImportDetails
     */
    public function getImportDetails()
    {
        return $this->container['import_details'];
    }

    /**
     * Sets import_details
     *
     * @param \Swagger\Client\Model\ImportDetails $import_details import_details
     *
     * @return $this
     */
    public function setImportDetails($import_details)
    {
        $this->container['import_details'] = $import_details;

        return $this;
    }

    /**
     * Gets is_cleared
     *
     * @return bool
     */
    public function getIsCleared()
    {
        return $this->container['is_cleared'];
    }

    /**
     * Sets is_cleared
     *
     * @param bool $is_cleared is_cleared
     *
     * @return $this
     */
    public function setIsCleared($is_cleared)
    {
        $this->container['is_cleared'] = $is_cleared;

        return $this;
    }

    /**
     * Gets is_confidential
     *
     * @return bool
     */
    public function getIsConfidential()
    {
        return $this->container['is_confidential'];
    }

    /**
     * Sets is_confidential
     *
     * @param bool $is_confidential is_confidential
     *
     * @return $this
     */
    public function setIsConfidential($is_confidential)
    {
        $this->container['is_confidential'] = $is_confidential;

        return $this;
    }

    /**
     * Gets is_private
     *
     * @return bool
     */
    public function getIsPrivate()
    {
        return $this->container['is_private'];
    }

    /**
     * Sets is_private
     *
     * @param bool $is_private is_private
     *
     * @return $this
     */
    public function setIsPrivate($is_private)
    {
        $this->container['is_private'] = $is_private;

        return $this;
    }

    /**
     * Gets is_production_rights
     *
     * @return bool
     */
    public function getIsProductionRights()
    {
        return $this->container['is_production_rights'];
    }

    /**
     * Sets is_production_rights
     *
     * @param bool $is_production_rights is_production_rights
     *
     * @return $this
     */
    public function setIsProductionRights($is_production_rights)
    {
        $this->container['is_production_rights'] = $is_production_rights;

        return $this;
    }

    /**
     * Gets is_self_interest
     *
     * @return bool
     */
    public function getIsSelfInterest()
    {
        return $this->container['is_self_interest'];
    }

    /**
     * Sets is_self_interest
     *
     * @param bool $is_self_interest is_self_interest
     *
     * @return $this
     */
    public function setIsSelfInterest($is_self_interest)
    {
        $this->container['is_self_interest'] = $is_self_interest;

        return $this;
    }

    /**
     * Gets is_special
     *
     * @return bool
     */
    public function getIsSpecial()
    {
        return $this->container['is_special'];
    }

    /**
     * Sets is_special
     *
     * @param bool $is_special is_special
     *
     * @return $this
     */
    public function setIsSpecial($is_special)
    {
        $this->container['is_special'] = $is_special;

        return $this;
    }

    /**
     * Gets is_topper
     *
     * @return bool
     */
    public function getIsTopper()
    {
        return $this->container['is_topper'];
    }

    /**
     * Sets is_topper
     *
     * @param bool $is_topper is_topper
     *
     * @return $this
     */
    public function setIsTopper($is_topper)
    {
        $this->container['is_topper'] = $is_topper;

        return $this;
    }

    /**
     * Gets is_transaction_data_confidential
     *
     * @return bool
     */
    public function getIsTransactionDataConfidential()
    {
        return $this->container['is_transaction_data_confidential'];
    }

    /**
     * Sets is_transaction_data_confidential
     *
     * @param bool $is_transaction_data_confidential is_transaction_data_confidential
     *
     * @return $this
     */
    public function setIsTransactionDataConfidential($is_transaction_data_confidential)
    {
        $this->container['is_transaction_data_confidential'] = $is_transaction_data_confidential;

        return $this;
    }

    /**
     * Gets linked_company_listings
     *
     * @return \Swagger\Client\Model\LinkedCompanyListing[]
     */
    public function getLinkedCompanyListings()
    {
        return $this->container['linked_company_listings'];
    }

    /**
     * Sets linked_company_listings
     *
     * @param \Swagger\Client\Model\LinkedCompanyListing[] $linked_company_listings linked_company_listings
     *
     * @return $this
     */
    public function setLinkedCompanyListings($linked_company_listings)
    {
        $this->container['linked_company_listings'] = $linked_company_listings;

        return $this;
    }

    /**
     * Gets linked_applicants
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedApplicants()
    {
        return $this->container['linked_applicants'];
    }

    /**
     * Sets linked_applicants
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_applicants linked_applicants
     *
     * @return $this
     */
    public function setLinkedApplicants($linked_applicants)
    {
        $this->container['linked_applicants'] = $linked_applicants;

        return $this;
    }

    /**
     * Gets linked_notaries
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedNotaries()
    {
        return $this->container['linked_notaries'];
    }

    /**
     * Sets linked_notaries
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_notaries linked_notaries
     *
     * @return $this
     */
    public function setLinkedNotaries($linked_notaries)
    {
        $this->container['linked_notaries'] = $linked_notaries;

        return $this;
    }

    /**
     * Gets linked_property_managers
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedPropertyManagers()
    {
        return $this->container['linked_property_managers'];
    }

    /**
     * Sets linked_property_managers
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_property_managers linked_property_managers
     *
     * @return $this
     */
    public function setLinkedPropertyManagers($linked_property_managers)
    {
        $this->container['linked_property_managers'] = $linked_property_managers;

        return $this;
    }

    /**
     * Gets linked_vendors
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedVendors()
    {
        return $this->container['linked_vendors'];
    }

    /**
     * Sets linked_vendors
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_vendors linked_vendors
     *
     * @return $this
     */
    public function setLinkedVendors($linked_vendors)
    {
        $this->container['linked_vendors'] = $linked_vendors;

        return $this;
    }

    /**
     * Gets linked_tenant_representation_brokers
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedTenantRepresentationBrokers()
    {
        return $this->container['linked_tenant_representation_brokers'];
    }

    /**
     * Sets linked_tenant_representation_brokers
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_tenant_representation_brokers linked_tenant_representation_brokers
     *
     * @return $this
     */
    public function setLinkedTenantRepresentationBrokers($linked_tenant_representation_brokers)
    {
        $this->container['linked_tenant_representation_brokers'] = $linked_tenant_representation_brokers;

        return $this;
    }

    /**
     * Gets linked_rental_agents
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedRentalAgents()
    {
        return $this->container['linked_rental_agents'];
    }

    /**
     * Sets linked_rental_agents
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_rental_agents linked_rental_agents
     *
     * @return $this
     */
    public function setLinkedRentalAgents($linked_rental_agents)
    {
        $this->container['linked_rental_agents'] = $linked_rental_agents;

        return $this;
    }

    /**
     * Gets linked_sales_brokers
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedSalesBrokers()
    {
        return $this->container['linked_sales_brokers'];
    }

    /**
     * Sets linked_sales_brokers
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_sales_brokers linked_sales_brokers
     *
     * @return $this
     */
    public function setLinkedSalesBrokers($linked_sales_brokers)
    {
        $this->container['linked_sales_brokers'] = $linked_sales_brokers;

        return $this;
    }

    /**
     * Gets linked_contact_persons
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedContactPersons()
    {
        return $this->container['linked_contact_persons'];
    }

    /**
     * Sets linked_contact_persons
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_contact_persons linked_contact_persons
     *
     * @return $this
     */
    public function setLinkedContactPersons($linked_contact_persons)
    {
        $this->container['linked_contact_persons'] = $linked_contact_persons;

        return $this;
    }

    /**
     * Gets linked_financial_advisors
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedFinancialAdvisors()
    {
        return $this->container['linked_financial_advisors'];
    }

    /**
     * Sets linked_financial_advisors
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_financial_advisors linked_financial_advisors
     *
     * @return $this
     */
    public function setLinkedFinancialAdvisors($linked_financial_advisors)
    {
        $this->container['linked_financial_advisors'] = $linked_financial_advisors;

        return $this;
    }

    /**
     * Gets linked_appraisers
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedAppraisers()
    {
        return $this->container['linked_appraisers'];
    }

    /**
     * Sets linked_appraisers
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_appraisers linked_appraisers
     *
     * @return $this
     */
    public function setLinkedAppraisers($linked_appraisers)
    {
        $this->container['linked_appraisers'] = $linked_appraisers;

        return $this;
    }

    /**
     * Gets linked_clients
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedClients()
    {
        return $this->container['linked_clients'];
    }

    /**
     * Sets linked_clients
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_clients linked_clients
     *
     * @return $this
     */
    public function setLinkedClients($linked_clients)
    {
        $this->container['linked_clients'] = $linked_clients;

        return $this;
    }

    /**
     * Gets linked_offering_agencies
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedOfferingAgencies()
    {
        return $this->container['linked_offering_agencies'];
    }

    /**
     * Sets linked_offering_agencies
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_offering_agencies linked_offering_agencies
     *
     * @return $this
     */
    public function setLinkedOfferingAgencies($linked_offering_agencies)
    {
        $this->container['linked_offering_agencies'] = $linked_offering_agencies;

        return $this;
    }

    /**
     * Gets linked_purchasing_brokers
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedPurchasingBrokers()
    {
        return $this->container['linked_purchasing_brokers'];
    }

    /**
     * Sets linked_purchasing_brokers
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_purchasing_brokers linked_purchasing_brokers
     *
     * @return $this
     */
    public function setLinkedPurchasingBrokers($linked_purchasing_brokers)
    {
        $this->container['linked_purchasing_brokers'] = $linked_purchasing_brokers;

        return $this;
    }

    /**
     * Gets linked_inspectors
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedInspectors()
    {
        return $this->container['linked_inspectors'];
    }

    /**
     * Sets linked_inspectors
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_inspectors linked_inspectors
     *
     * @return $this
     */
    public function setLinkedInspectors($linked_inspectors)
    {
        $this->container['linked_inspectors'] = $linked_inspectors;

        return $this;
    }

    /**
     * Gets linked_stylists
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedStylists()
    {
        return $this->container['linked_stylists'];
    }

    /**
     * Sets linked_stylists
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_stylists linked_stylists
     *
     * @return $this
     */
    public function setLinkedStylists($linked_stylists)
    {
        $this->container['linked_stylists'] = $linked_stylists;

        return $this;
    }

    /**
     * Gets linked_photographers
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedPhotographers()
    {
        return $this->container['linked_photographers'];
    }

    /**
     * Sets linked_photographers
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_photographers linked_photographers
     *
     * @return $this
     */
    public function setLinkedPhotographers($linked_photographers)
    {
        $this->container['linked_photographers'] = $linked_photographers;

        return $this;
    }

    /**
     * Gets linked_potentials
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedPotentials()
    {
        return $this->container['linked_potentials'];
    }

    /**
     * Sets linked_potentials
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_potentials linked_potentials
     *
     * @return $this
     */
    public function setLinkedPotentials($linked_potentials)
    {
        $this->container['linked_potentials'] = $linked_potentials;

        return $this;
    }

    /**
     * Gets linked_occupants
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedOccupants()
    {
        return $this->container['linked_occupants'];
    }

    /**
     * Sets linked_occupants
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_occupants linked_occupants
     *
     * @return $this
     */
    public function setLinkedOccupants($linked_occupants)
    {
        $this->container['linked_occupants'] = $linked_occupants;

        return $this;
    }

    /**
     * Gets linked_people_who_opted
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedPeopleWhoOpted()
    {
        return $this->container['linked_people_who_opted'];
    }

    /**
     * Sets linked_people_who_opted
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_people_who_opted linked_people_who_opted
     *
     * @return $this
     */
    public function setLinkedPeopleWhoOpted($linked_people_who_opted)
    {
        $this->container['linked_people_who_opted'] = $linked_people_who_opted;

        return $this;
    }

    /**
     * Gets linked_project_developers
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedProjectDevelopers()
    {
        return $this->container['linked_project_developers'];
    }

    /**
     * Sets linked_project_developers
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_project_developers linked_project_developers
     *
     * @return $this
     */
    public function setLinkedProjectDevelopers($linked_project_developers)
    {
        $this->container['linked_project_developers'] = $linked_project_developers;

        return $this;
    }

    /**
     * Gets lot_description_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getLotDescriptionText()
    {
        return $this->container['lot_description_text'];
    }

    /**
     * Sets lot_description_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $lot_description_text lot_description_text
     *
     * @return $this
     */
    public function setLotDescriptionText($lot_description_text)
    {
        $this->container['lot_description_text'] = $lot_description_text;

        return $this;
    }

    /**
     * Gets mandate_date_time
     *
     * @return \DateTime
     */
    public function getMandateDateTime()
    {
        return $this->container['mandate_date_time'];
    }

    /**
     * Sets mandate_date_time
     *
     * @param \DateTime $mandate_date_time mandate_date_time
     *
     * @return $this
     */
    public function setMandateDateTime($mandate_date_time)
    {
        $this->container['mandate_date_time'] = $mandate_date_time;

        return $this;
    }

    /**
     * Gets maps
     *
     * @return \Swagger\Client\Model\MapBlob[]
     */
    public function getMaps()
    {
        return $this->container['maps'];
    }

    /**
     * Sets maps
     *
     * @param \Swagger\Client\Model\MapBlob[] $maps maps
     *
     * @return $this
     */
    public function setMaps($maps)
    {
        $this->container['maps'] = $maps;

        return $this;
    }

    /**
     * Gets office_id
     *
     * @return string
     */
    public function getOfficeId()
    {
        return $this->container['office_id'];
    }

    /**
     * Sets office_id
     *
     * @param string $office_id office_id
     *
     * @return $this
     */
    public function setOfficeId($office_id)
    {
        $this->container['office_id'] = $office_id;

        return $this;
    }

    /**
     * Gets open_house
     *
     * @return \Swagger\Client\Model\OpenHouse
     */
    public function getOpenHouse()
    {
        return $this->container['open_house'];
    }

    /**
     * Sets open_house
     *
     * @param \Swagger\Client\Model\OpenHouse $open_house open_house
     *
     * @return $this
     */
    public function setOpenHouse($open_house)
    {
        $this->container['open_house'] = $open_house;

        return $this;
    }

    /**
     * Gets other_contract_source
     *
     * @return string
     */
    public function getOtherContractSource()
    {
        return $this->container['other_contract_source'];
    }

    /**
     * Sets other_contract_source
     *
     * @param string $other_contract_source other_contract_source
     *
     * @return $this
     */
    public function setOtherContractSource($other_contract_source)
    {
        $this->container['other_contract_source'] = $other_contract_source;

        return $this;
    }

    /**
     * Gets other_floors_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getOtherFloorsText()
    {
        return $this->container['other_floors_text'];
    }

    /**
     * Sets other_floors_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $other_floors_text other_floors_text
     *
     * @return $this
     */
    public function setOtherFloorsText($other_floors_text)
    {
        $this->container['other_floors_text'] = $other_floors_text;

        return $this;
    }

    /**
     * Gets parking_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getParkingText()
    {
        return $this->container['parking_text'];
    }

    /**
     * Sets parking_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $parking_text parking_text
     *
     * @return $this
     */
    public function setParkingText($parking_text)
    {
        $this->container['parking_text'] = $parking_text;

        return $this;
    }

    /**
     * Gets parties_description_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getPartiesDescriptionText()
    {
        return $this->container['parties_description_text'];
    }

    /**
     * Sets parties_description_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $parties_description_text parties_description_text
     *
     * @return $this
     */
    public function setPartiesDescriptionText($parties_description_text)
    {
        $this->container['parties_description_text'] = $parties_description_text;

        return $this;
    }

    /**
     * Gets peculiarities_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getPeculiaritiesText()
    {
        return $this->container['peculiarities_text'];
    }

    /**
     * Sets peculiarities_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $peculiarities_text peculiarities_text
     *
     * @return $this
     */
    public function setPeculiaritiesText($peculiarities_text)
    {
        $this->container['peculiarities_text'] = $peculiarities_text;

        return $this;
    }

    /**
     * Gets photos
     *
     * @return \Swagger\Client\Model\PhotoBlob[]
     */
    public function getPhotos()
    {
        return $this->container['photos'];
    }

    /**
     * Sets photos
     *
     * @param \Swagger\Client\Model\PhotoBlob[] $photos photos
     *
     * @return $this
     */
    public function setPhotos($photos)
    {
        $this->container['photos'] = $photos;

        return $this;
    }

    /**
     * Gets price_description_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getPriceDescriptionText()
    {
        return $this->container['price_description_text'];
    }

    /**
     * Sets price_description_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $price_description_text price_description_text
     *
     * @return $this
     */
    public function setPriceDescriptionText($price_description_text)
    {
        $this->container['price_description_text'] = $price_description_text;

        return $this;
    }

    /**
     * Gets products_to_pass_on
     *
     * @return \Swagger\Client\Model\ProductToPassOn[]
     */
    public function getProductsToPassOn()
    {
        return $this->container['products_to_pass_on'];
    }

    /**
     * Sets products_to_pass_on
     *
     * @param \Swagger\Client\Model\ProductToPassOn[] $products_to_pass_on products_to_pass_on
     *
     * @return $this
     */
    public function setProductsToPassOn($products_to_pass_on)
    {
        $this->container['products_to_pass_on'] = $products_to_pass_on;

        return $this;
    }

    /**
     * Gets registration_conditions
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getRegistrationConditions()
    {
        return $this->container['registration_conditions'];
    }

    /**
     * Sets registration_conditions
     *
     * @param \Swagger\Client\Model\TranslatedText[] $registration_conditions registration_conditions
     *
     * @return $this
     */
    public function setRegistrationConditions($registration_conditions)
    {
        $this->container['registration_conditions'] = $registration_conditions;

        return $this;
    }

    /**
     * Gets rent_offer
     *
     * @return \Swagger\Client\Model\RentOffer
     */
    public function getRentOffer()
    {
        return $this->container['rent_offer'];
    }

    /**
     * Sets rent_offer
     *
     * @param \Swagger\Client\Model\RentOffer $rent_offer rent_offer
     *
     * @return $this
     */
    public function setRentOffer($rent_offer)
    {
        $this->container['rent_offer'] = $rent_offer;

        return $this;
    }

    /**
     * Gets sale_offer
     *
     * @return \Swagger\Client\Model\SaleOffer
     */
    public function getSaleOffer()
    {
        return $this->container['sale_offer'];
    }

    /**
     * Sets sale_offer
     *
     * @param \Swagger\Client\Model\SaleOffer $sale_offer sale_offer
     *
     * @return $this
     */
    public function setSaleOffer($sale_offer)
    {
        $this->container['sale_offer'] = $sale_offer;

        return $this;
    }

    /**
     * Gets second_floor_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getSecondFloorText()
    {
        return $this->container['second_floor_text'];
    }

    /**
     * Sets second_floor_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $second_floor_text second_floor_text
     *
     * @return $this
     */
    public function setSecondFloorText($second_floor_text)
    {
        $this->container['second_floor_text'] = $second_floor_text;

        return $this;
    }

    /**
     * Gets special_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getSpecialText()
    {
        return $this->container['special_text'];
    }

    /**
     * Sets special_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $special_text special_text
     *
     * @return $this
     */
    public function setSpecialText($special_text)
    {
        $this->container['special_text'] = $special_text;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return string
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param string $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets third_party_media
     *
     * @return \Swagger\Client\Model\ThirdPartyMedia[]
     */
    public function getThirdPartyMedia()
    {
        return $this->container['third_party_media'];
    }

    /**
     * Sets third_party_media
     *
     * @param \Swagger\Client\Model\ThirdPartyMedia[] $third_party_media third_party_media
     *
     * @return $this
     */
    public function setThirdPartyMedia($third_party_media)
    {
        $this->container['third_party_media'] = $third_party_media;

        return $this;
    }

    /**
     * Gets title_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getTitleText()
    {
        return $this->container['title_text'];
    }

    /**
     * Sets title_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $title_text title_text
     *
     * @return $this
     */
    public function setTitleText($title_text)
    {
        $this->container['title_text'] = $title_text;

        return $this;
    }

    /**
     * Gets videos
     *
     * @return \Swagger\Client\Model\VideoBlob[]
     */
    public function getVideos()
    {
        return $this->container['videos'];
    }

    /**
     * Sets videos
     *
     * @param \Swagger\Client\Model\VideoBlob[] $videos videos
     *
     * @return $this
     */
    public function setVideos($videos)
    {
        $this->container['videos'] = $videos;

        return $this;
    }

    /**
     * Gets waiting_time
     *
     * @return \Swagger\Client\Model\WaitingTime
     */
    public function getWaitingTime()
    {
        return $this->container['waiting_time'];
    }

    /**
     * Sets waiting_time
     *
     * @param \Swagger\Client\Model\WaitingTime $waiting_time waiting_time
     *
     * @return $this
     */
    public function setWaitingTime($waiting_time)
    {
        $this->container['waiting_time'] = $waiting_time;

        return $this;
    }

    /**
     * Gets web_address
     *
     * @return string
     */
    public function getWebAddress()
    {
        return $this->container['web_address'];
    }

    /**
     * Sets web_address
     *
     * @param string $web_address web_address
     *
     * @return $this
     */
    public function setWebAddress($web_address)
    {
        $this->container['web_address'] = $web_address;

        return $this;
    }

    /**
     * Gets withdrawn_date_time
     *
     * @return \DateTime
     */
    public function getWithdrawnDateTime()
    {
        return $this->container['withdrawn_date_time'];
    }

    /**
     * Sets withdrawn_date_time
     *
     * @param \DateTime $withdrawn_date_time withdrawn_date_time
     *
     * @return $this
     */
    public function setWithdrawnDateTime($withdrawn_date_time)
    {
        $this->container['withdrawn_date_time'] = $withdrawn_date_time;

        return $this;
    }

    /**
     * Gets withdraw_reason
     *
     * @return \Swagger\Client\Model\WithdrawReason
     */
    public function getWithdrawReason()
    {
        return $this->container['withdraw_reason'];
    }

    /**
     * Sets withdraw_reason
     *
     * @param \Swagger\Client\Model\WithdrawReason $withdraw_reason withdraw_reason
     *
     * @return $this
     */
    public function setWithdrawReason($withdraw_reason)
    {
        $this->container['withdraw_reason'] = $withdraw_reason;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


