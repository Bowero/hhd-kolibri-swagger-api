<?php
/**
 * AssignmentSnapShot
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web API Swagger specification Kolibri24 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.1.778.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.17
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;
use \Swagger\Client\ObjectSerializer;

/**
 * AssignmentSnapShot Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AssignmentSnapShot extends Entity 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AssignmentSnapShot';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'assignment_phase' => 'object',
        'availability_status' => '\Swagger\Client\Model\AvailabilityStatus',
        'country_code' => 'string',
        'date_rented_reservation' => '\DateTime',
        'date_sold' => '\DateTime',
        'date_sold_reservation' => '\DateTime',
        'date_transfer' => '\DateTime',
        'display_name' => 'string',
        'for_rent' => 'bool',
        'for_sale' => 'bool',
        'has_cadastres' => 'bool',
        'is_active' => 'bool',
        'is_part_of_project' => 'bool',
        'construction_number' => 'int',
        'construction_number_string' => 'string',
        'key_note' => 'string',
        'key_nr' => 'int',
        'linked_applicants' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_employee' => '\Swagger\Client\Model\LinkedEmployee',
        'linked_notaries' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_office' => '\Swagger\Client\Model\LinkedOffice',
        'linked_property_managers' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_vendors' => '\Swagger\Client\Model\LinkedRelation[]',
        'linked_clients' => '\Swagger\Client\Model\LinkedRelation[]',
        'listing_type' => 'object',
        'locality' => 'string',
        'mandate_date_time' => '\DateTime',
        'photo1_url' => 'string',
        'photo2_url' => 'string',
        'photo3_url' => 'string',
        'postal_code' => 'string',
        'linked_project_assignment' => '\Swagger\Client\Model\LinkedAssignment',
        'linked_object_type_assignment' => '\Swagger\Client\Model\LinkedAssignment',
        'linked_bids' => '\Swagger\Client\Model\LinkedBid[]',
        'public_reference' => 'string',
        'real_estate_agency_id' => 'string',
        'real_estate_group' => '\Swagger\Client\Model\RealEstateGroup',
        'rent_commission_total' => 'float',
        'rent_condition' => '\Swagger\Client\Model\RentCondition',
        'rented_from' => '\DateTime',
        'rent_price' => 'float',
        'rent_price_per_unit' => 'float',
        'rent_price_max' => 'float',
        'rent_vat_condition' => '\Swagger\Client\Model\VatCondition',
        'sale_commission_total' => 'float',
        'sale_condition' => '\Swagger\Client\Model\SaleCondition',
        'sale_price' => 'float',
        'sale_price_per_unit' => 'float',
        'sale_price_max' => 'float',
        'sale_vat_condition' => '\Swagger\Client\Model\VatCondition',
        'street_name_and_number' => 'string',
        'total_nr_of_photos' => 'int',
        'total_nr_of_videos' => 'int',
        'type_of_assignment' => 'object',
        'video1_url' => 'string',
        'withdrawn_date_time' => '\DateTime',
        'withdraw_reason' => '\Swagger\Client\Model\WithdrawReason',
        'date_time_created' => '\DateTime',
        'latitude' => 'float',
        'longitude' => 'float',
        'date_time_modified' => '\DateTime',
        'linked_created_by' => '\Swagger\Client\Model\LinkedEmployee',
        'linked_modified_by' => '\Swagger\Client\Model\LinkedEmployee',
        'furnishing' => '\Swagger\Client\Model\Furnishing',
        'number_of_bedrooms' => 'int',
        'number_of_bath_rooms' => 'int',
        'acquisition_status' => '\Swagger\Client\Model\AcquisitionStatus',
        'is_confidential' => 'bool',
        'available_from' => '\DateTime',
        'available_until' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'assignment_phase' => null,
        'availability_status' => null,
        'country_code' => null,
        'date_rented_reservation' => 'date-time',
        'date_sold' => 'date-time',
        'date_sold_reservation' => 'date-time',
        'date_transfer' => 'date-time',
        'display_name' => null,
        'for_rent' => null,
        'for_sale' => null,
        'has_cadastres' => null,
        'is_active' => null,
        'is_part_of_project' => null,
        'construction_number' => 'int32',
        'construction_number_string' => null,
        'key_note' => null,
        'key_nr' => 'int32',
        'linked_applicants' => null,
        'linked_employee' => null,
        'linked_notaries' => null,
        'linked_office' => null,
        'linked_property_managers' => null,
        'linked_vendors' => null,
        'linked_clients' => null,
        'listing_type' => null,
        'locality' => null,
        'mandate_date_time' => 'date-time',
        'photo1_url' => null,
        'photo2_url' => null,
        'photo3_url' => null,
        'postal_code' => null,
        'linked_project_assignment' => null,
        'linked_object_type_assignment' => null,
        'linked_bids' => null,
        'public_reference' => null,
        'real_estate_agency_id' => 'guid',
        'real_estate_group' => null,
        'rent_commission_total' => 'decimal',
        'rent_condition' => null,
        'rented_from' => 'date-time',
        'rent_price' => 'decimal',
        'rent_price_per_unit' => 'decimal',
        'rent_price_max' => 'decimal',
        'rent_vat_condition' => null,
        'sale_commission_total' => 'decimal',
        'sale_condition' => null,
        'sale_price' => 'decimal',
        'sale_price_per_unit' => 'decimal',
        'sale_price_max' => 'decimal',
        'sale_vat_condition' => null,
        'street_name_and_number' => null,
        'total_nr_of_photos' => 'int32',
        'total_nr_of_videos' => 'int32',
        'type_of_assignment' => null,
        'video1_url' => null,
        'withdrawn_date_time' => 'date-time',
        'withdraw_reason' => null,
        'date_time_created' => 'date-time',
        'latitude' => 'decimal',
        'longitude' => 'decimal',
        'date_time_modified' => 'date-time',
        'linked_created_by' => null,
        'linked_modified_by' => null,
        'furnishing' => null,
        'number_of_bedrooms' => 'int32',
        'number_of_bath_rooms' => 'int32',
        'acquisition_status' => null,
        'is_confidential' => null,
        'available_from' => 'date-time',
        'available_until' => 'date-time'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'assignment_phase' => 'assignmentPhase',
        'availability_status' => 'availabilityStatus',
        'country_code' => 'countryCode',
        'date_rented_reservation' => 'dateRentedReservation',
        'date_sold' => 'dateSold',
        'date_sold_reservation' => 'dateSoldReservation',
        'date_transfer' => 'dateTransfer',
        'display_name' => 'displayName',
        'for_rent' => 'forRent',
        'for_sale' => 'forSale',
        'has_cadastres' => 'hasCadastres',
        'is_active' => 'isActive',
        'is_part_of_project' => 'isPartOfProject',
        'construction_number' => 'constructionNumber',
        'construction_number_string' => 'constructionNumberString',
        'key_note' => 'keyNote',
        'key_nr' => 'keyNr',
        'linked_applicants' => 'linkedApplicants',
        'linked_employee' => 'linkedEmployee',
        'linked_notaries' => 'linkedNotaries',
        'linked_office' => 'linkedOffice',
        'linked_property_managers' => 'linkedPropertyManagers',
        'linked_vendors' => 'linkedVendors',
        'linked_clients' => 'linkedClients',
        'listing_type' => 'listingType',
        'locality' => 'locality',
        'mandate_date_time' => 'mandateDateTime',
        'photo1_url' => 'photo1Url',
        'photo2_url' => 'photo2Url',
        'photo3_url' => 'photo3Url',
        'postal_code' => 'postalCode',
        'linked_project_assignment' => 'linkedProjectAssignment',
        'linked_object_type_assignment' => 'linkedObjectTypeAssignment',
        'linked_bids' => 'linkedBids',
        'public_reference' => 'publicReference',
        'real_estate_agency_id' => 'realEstateAgencyId',
        'real_estate_group' => 'realEstateGroup',
        'rent_commission_total' => 'rentCommissionTotal',
        'rent_condition' => 'rentCondition',
        'rented_from' => 'rentedFrom',
        'rent_price' => 'rentPrice',
        'rent_price_per_unit' => 'rentPricePerUnit',
        'rent_price_max' => 'rentPriceMax',
        'rent_vat_condition' => 'rentVatCondition',
        'sale_commission_total' => 'saleCommissionTotal',
        'sale_condition' => 'saleCondition',
        'sale_price' => 'salePrice',
        'sale_price_per_unit' => 'salePricePerUnit',
        'sale_price_max' => 'salePriceMax',
        'sale_vat_condition' => 'saleVatCondition',
        'street_name_and_number' => 'streetNameAndNumber',
        'total_nr_of_photos' => 'totalNrOfPhotos',
        'total_nr_of_videos' => 'totalNrOfVideos',
        'type_of_assignment' => 'typeOfAssignment',
        'video1_url' => 'video1Url',
        'withdrawn_date_time' => 'withdrawnDateTime',
        'withdraw_reason' => 'withdrawReason',
        'date_time_created' => 'dateTimeCreated',
        'latitude' => 'latitude',
        'longitude' => 'longitude',
        'date_time_modified' => 'dateTimeModified',
        'linked_created_by' => 'linkedCreatedBy',
        'linked_modified_by' => 'linkedModifiedBy',
        'furnishing' => 'furnishing',
        'number_of_bedrooms' => 'numberOfBedrooms',
        'number_of_bath_rooms' => 'numberOfBathRooms',
        'acquisition_status' => 'acquisitionStatus',
        'is_confidential' => 'isConfidential',
        'available_from' => 'availableFrom',
        'available_until' => 'availableUntil'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'assignment_phase' => 'setAssignmentPhase',
        'availability_status' => 'setAvailabilityStatus',
        'country_code' => 'setCountryCode',
        'date_rented_reservation' => 'setDateRentedReservation',
        'date_sold' => 'setDateSold',
        'date_sold_reservation' => 'setDateSoldReservation',
        'date_transfer' => 'setDateTransfer',
        'display_name' => 'setDisplayName',
        'for_rent' => 'setForRent',
        'for_sale' => 'setForSale',
        'has_cadastres' => 'setHasCadastres',
        'is_active' => 'setIsActive',
        'is_part_of_project' => 'setIsPartOfProject',
        'construction_number' => 'setConstructionNumber',
        'construction_number_string' => 'setConstructionNumberString',
        'key_note' => 'setKeyNote',
        'key_nr' => 'setKeyNr',
        'linked_applicants' => 'setLinkedApplicants',
        'linked_employee' => 'setLinkedEmployee',
        'linked_notaries' => 'setLinkedNotaries',
        'linked_office' => 'setLinkedOffice',
        'linked_property_managers' => 'setLinkedPropertyManagers',
        'linked_vendors' => 'setLinkedVendors',
        'linked_clients' => 'setLinkedClients',
        'listing_type' => 'setListingType',
        'locality' => 'setLocality',
        'mandate_date_time' => 'setMandateDateTime',
        'photo1_url' => 'setPhoto1Url',
        'photo2_url' => 'setPhoto2Url',
        'photo3_url' => 'setPhoto3Url',
        'postal_code' => 'setPostalCode',
        'linked_project_assignment' => 'setLinkedProjectAssignment',
        'linked_object_type_assignment' => 'setLinkedObjectTypeAssignment',
        'linked_bids' => 'setLinkedBids',
        'public_reference' => 'setPublicReference',
        'real_estate_agency_id' => 'setRealEstateAgencyId',
        'real_estate_group' => 'setRealEstateGroup',
        'rent_commission_total' => 'setRentCommissionTotal',
        'rent_condition' => 'setRentCondition',
        'rented_from' => 'setRentedFrom',
        'rent_price' => 'setRentPrice',
        'rent_price_per_unit' => 'setRentPricePerUnit',
        'rent_price_max' => 'setRentPriceMax',
        'rent_vat_condition' => 'setRentVatCondition',
        'sale_commission_total' => 'setSaleCommissionTotal',
        'sale_condition' => 'setSaleCondition',
        'sale_price' => 'setSalePrice',
        'sale_price_per_unit' => 'setSalePricePerUnit',
        'sale_price_max' => 'setSalePriceMax',
        'sale_vat_condition' => 'setSaleVatCondition',
        'street_name_and_number' => 'setStreetNameAndNumber',
        'total_nr_of_photos' => 'setTotalNrOfPhotos',
        'total_nr_of_videos' => 'setTotalNrOfVideos',
        'type_of_assignment' => 'setTypeOfAssignment',
        'video1_url' => 'setVideo1Url',
        'withdrawn_date_time' => 'setWithdrawnDateTime',
        'withdraw_reason' => 'setWithdrawReason',
        'date_time_created' => 'setDateTimeCreated',
        'latitude' => 'setLatitude',
        'longitude' => 'setLongitude',
        'date_time_modified' => 'setDateTimeModified',
        'linked_created_by' => 'setLinkedCreatedBy',
        'linked_modified_by' => 'setLinkedModifiedBy',
        'furnishing' => 'setFurnishing',
        'number_of_bedrooms' => 'setNumberOfBedrooms',
        'number_of_bath_rooms' => 'setNumberOfBathRooms',
        'acquisition_status' => 'setAcquisitionStatus',
        'is_confidential' => 'setIsConfidential',
        'available_from' => 'setAvailableFrom',
        'available_until' => 'setAvailableUntil'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'assignment_phase' => 'getAssignmentPhase',
        'availability_status' => 'getAvailabilityStatus',
        'country_code' => 'getCountryCode',
        'date_rented_reservation' => 'getDateRentedReservation',
        'date_sold' => 'getDateSold',
        'date_sold_reservation' => 'getDateSoldReservation',
        'date_transfer' => 'getDateTransfer',
        'display_name' => 'getDisplayName',
        'for_rent' => 'getForRent',
        'for_sale' => 'getForSale',
        'has_cadastres' => 'getHasCadastres',
        'is_active' => 'getIsActive',
        'is_part_of_project' => 'getIsPartOfProject',
        'construction_number' => 'getConstructionNumber',
        'construction_number_string' => 'getConstructionNumberString',
        'key_note' => 'getKeyNote',
        'key_nr' => 'getKeyNr',
        'linked_applicants' => 'getLinkedApplicants',
        'linked_employee' => 'getLinkedEmployee',
        'linked_notaries' => 'getLinkedNotaries',
        'linked_office' => 'getLinkedOffice',
        'linked_property_managers' => 'getLinkedPropertyManagers',
        'linked_vendors' => 'getLinkedVendors',
        'linked_clients' => 'getLinkedClients',
        'listing_type' => 'getListingType',
        'locality' => 'getLocality',
        'mandate_date_time' => 'getMandateDateTime',
        'photo1_url' => 'getPhoto1Url',
        'photo2_url' => 'getPhoto2Url',
        'photo3_url' => 'getPhoto3Url',
        'postal_code' => 'getPostalCode',
        'linked_project_assignment' => 'getLinkedProjectAssignment',
        'linked_object_type_assignment' => 'getLinkedObjectTypeAssignment',
        'linked_bids' => 'getLinkedBids',
        'public_reference' => 'getPublicReference',
        'real_estate_agency_id' => 'getRealEstateAgencyId',
        'real_estate_group' => 'getRealEstateGroup',
        'rent_commission_total' => 'getRentCommissionTotal',
        'rent_condition' => 'getRentCondition',
        'rented_from' => 'getRentedFrom',
        'rent_price' => 'getRentPrice',
        'rent_price_per_unit' => 'getRentPricePerUnit',
        'rent_price_max' => 'getRentPriceMax',
        'rent_vat_condition' => 'getRentVatCondition',
        'sale_commission_total' => 'getSaleCommissionTotal',
        'sale_condition' => 'getSaleCondition',
        'sale_price' => 'getSalePrice',
        'sale_price_per_unit' => 'getSalePricePerUnit',
        'sale_price_max' => 'getSalePriceMax',
        'sale_vat_condition' => 'getSaleVatCondition',
        'street_name_and_number' => 'getStreetNameAndNumber',
        'total_nr_of_photos' => 'getTotalNrOfPhotos',
        'total_nr_of_videos' => 'getTotalNrOfVideos',
        'type_of_assignment' => 'getTypeOfAssignment',
        'video1_url' => 'getVideo1Url',
        'withdrawn_date_time' => 'getWithdrawnDateTime',
        'withdraw_reason' => 'getWithdrawReason',
        'date_time_created' => 'getDateTimeCreated',
        'latitude' => 'getLatitude',
        'longitude' => 'getLongitude',
        'date_time_modified' => 'getDateTimeModified',
        'linked_created_by' => 'getLinkedCreatedBy',
        'linked_modified_by' => 'getLinkedModifiedBy',
        'furnishing' => 'getFurnishing',
        'number_of_bedrooms' => 'getNumberOfBedrooms',
        'number_of_bath_rooms' => 'getNumberOfBathRooms',
        'acquisition_status' => 'getAcquisitionStatus',
        'is_confidential' => 'getIsConfidential',
        'available_from' => 'getAvailableFrom',
        'available_until' => 'getAvailableUntil'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['assignment_phase'] = isset($data['assignment_phase']) ? $data['assignment_phase'] : null;
        $this->container['availability_status'] = isset($data['availability_status']) ? $data['availability_status'] : null;
        $this->container['country_code'] = isset($data['country_code']) ? $data['country_code'] : null;
        $this->container['date_rented_reservation'] = isset($data['date_rented_reservation']) ? $data['date_rented_reservation'] : null;
        $this->container['date_sold'] = isset($data['date_sold']) ? $data['date_sold'] : null;
        $this->container['date_sold_reservation'] = isset($data['date_sold_reservation']) ? $data['date_sold_reservation'] : null;
        $this->container['date_transfer'] = isset($data['date_transfer']) ? $data['date_transfer'] : null;
        $this->container['display_name'] = isset($data['display_name']) ? $data['display_name'] : null;
        $this->container['for_rent'] = isset($data['for_rent']) ? $data['for_rent'] : null;
        $this->container['for_sale'] = isset($data['for_sale']) ? $data['for_sale'] : null;
        $this->container['has_cadastres'] = isset($data['has_cadastres']) ? $data['has_cadastres'] : null;
        $this->container['is_active'] = isset($data['is_active']) ? $data['is_active'] : null;
        $this->container['is_part_of_project'] = isset($data['is_part_of_project']) ? $data['is_part_of_project'] : null;
        $this->container['construction_number'] = isset($data['construction_number']) ? $data['construction_number'] : null;
        $this->container['construction_number_string'] = isset($data['construction_number_string']) ? $data['construction_number_string'] : null;
        $this->container['key_note'] = isset($data['key_note']) ? $data['key_note'] : null;
        $this->container['key_nr'] = isset($data['key_nr']) ? $data['key_nr'] : null;
        $this->container['linked_applicants'] = isset($data['linked_applicants']) ? $data['linked_applicants'] : null;
        $this->container['linked_employee'] = isset($data['linked_employee']) ? $data['linked_employee'] : null;
        $this->container['linked_notaries'] = isset($data['linked_notaries']) ? $data['linked_notaries'] : null;
        $this->container['linked_office'] = isset($data['linked_office']) ? $data['linked_office'] : null;
        $this->container['linked_property_managers'] = isset($data['linked_property_managers']) ? $data['linked_property_managers'] : null;
        $this->container['linked_vendors'] = isset($data['linked_vendors']) ? $data['linked_vendors'] : null;
        $this->container['linked_clients'] = isset($data['linked_clients']) ? $data['linked_clients'] : null;
        $this->container['listing_type'] = isset($data['listing_type']) ? $data['listing_type'] : null;
        $this->container['locality'] = isset($data['locality']) ? $data['locality'] : null;
        $this->container['mandate_date_time'] = isset($data['mandate_date_time']) ? $data['mandate_date_time'] : null;
        $this->container['photo1_url'] = isset($data['photo1_url']) ? $data['photo1_url'] : null;
        $this->container['photo2_url'] = isset($data['photo2_url']) ? $data['photo2_url'] : null;
        $this->container['photo3_url'] = isset($data['photo3_url']) ? $data['photo3_url'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['linked_project_assignment'] = isset($data['linked_project_assignment']) ? $data['linked_project_assignment'] : null;
        $this->container['linked_object_type_assignment'] = isset($data['linked_object_type_assignment']) ? $data['linked_object_type_assignment'] : null;
        $this->container['linked_bids'] = isset($data['linked_bids']) ? $data['linked_bids'] : null;
        $this->container['public_reference'] = isset($data['public_reference']) ? $data['public_reference'] : null;
        $this->container['real_estate_agency_id'] = isset($data['real_estate_agency_id']) ? $data['real_estate_agency_id'] : null;
        $this->container['real_estate_group'] = isset($data['real_estate_group']) ? $data['real_estate_group'] : null;
        $this->container['rent_commission_total'] = isset($data['rent_commission_total']) ? $data['rent_commission_total'] : null;
        $this->container['rent_condition'] = isset($data['rent_condition']) ? $data['rent_condition'] : null;
        $this->container['rented_from'] = isset($data['rented_from']) ? $data['rented_from'] : null;
        $this->container['rent_price'] = isset($data['rent_price']) ? $data['rent_price'] : null;
        $this->container['rent_price_per_unit'] = isset($data['rent_price_per_unit']) ? $data['rent_price_per_unit'] : null;
        $this->container['rent_price_max'] = isset($data['rent_price_max']) ? $data['rent_price_max'] : null;
        $this->container['rent_vat_condition'] = isset($data['rent_vat_condition']) ? $data['rent_vat_condition'] : null;
        $this->container['sale_commission_total'] = isset($data['sale_commission_total']) ? $data['sale_commission_total'] : null;
        $this->container['sale_condition'] = isset($data['sale_condition']) ? $data['sale_condition'] : null;
        $this->container['sale_price'] = isset($data['sale_price']) ? $data['sale_price'] : null;
        $this->container['sale_price_per_unit'] = isset($data['sale_price_per_unit']) ? $data['sale_price_per_unit'] : null;
        $this->container['sale_price_max'] = isset($data['sale_price_max']) ? $data['sale_price_max'] : null;
        $this->container['sale_vat_condition'] = isset($data['sale_vat_condition']) ? $data['sale_vat_condition'] : null;
        $this->container['street_name_and_number'] = isset($data['street_name_and_number']) ? $data['street_name_and_number'] : null;
        $this->container['total_nr_of_photos'] = isset($data['total_nr_of_photos']) ? $data['total_nr_of_photos'] : null;
        $this->container['total_nr_of_videos'] = isset($data['total_nr_of_videos']) ? $data['total_nr_of_videos'] : null;
        $this->container['type_of_assignment'] = isset($data['type_of_assignment']) ? $data['type_of_assignment'] : null;
        $this->container['video1_url'] = isset($data['video1_url']) ? $data['video1_url'] : null;
        $this->container['withdrawn_date_time'] = isset($data['withdrawn_date_time']) ? $data['withdrawn_date_time'] : null;
        $this->container['withdraw_reason'] = isset($data['withdraw_reason']) ? $data['withdraw_reason'] : null;
        $this->container['date_time_created'] = isset($data['date_time_created']) ? $data['date_time_created'] : null;
        $this->container['latitude'] = isset($data['latitude']) ? $data['latitude'] : null;
        $this->container['longitude'] = isset($data['longitude']) ? $data['longitude'] : null;
        $this->container['date_time_modified'] = isset($data['date_time_modified']) ? $data['date_time_modified'] : null;
        $this->container['linked_created_by'] = isset($data['linked_created_by']) ? $data['linked_created_by'] : null;
        $this->container['linked_modified_by'] = isset($data['linked_modified_by']) ? $data['linked_modified_by'] : null;
        $this->container['furnishing'] = isset($data['furnishing']) ? $data['furnishing'] : null;
        $this->container['number_of_bedrooms'] = isset($data['number_of_bedrooms']) ? $data['number_of_bedrooms'] : null;
        $this->container['number_of_bath_rooms'] = isset($data['number_of_bath_rooms']) ? $data['number_of_bath_rooms'] : null;
        $this->container['acquisition_status'] = isset($data['acquisition_status']) ? $data['acquisition_status'] : null;
        $this->container['is_confidential'] = isset($data['is_confidential']) ? $data['is_confidential'] : null;
        $this->container['available_from'] = isset($data['available_from']) ? $data['available_from'] : null;
        $this->container['available_until'] = isset($data['available_until']) ? $data['available_until'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets assignment_phase
     *
     * @return object
     */
    public function getAssignmentPhase()
    {
        return $this->container['assignment_phase'];
    }

    /**
     * Sets assignment_phase
     *
     * @param object $assignment_phase Assignment phase ('Concept', 'Initiated' or 'Completed').
     *
     * @return $this
     */
    public function setAssignmentPhase($assignment_phase)
    {
        $this->container['assignment_phase'] = $assignment_phase;

        return $this;
    }

    /**
     * Gets availability_status
     *
     * @return \Swagger\Client\Model\AvailabilityStatus
     */
    public function getAvailabilityStatus()
    {
        return $this->container['availability_status'];
    }

    /**
     * Sets availability_status
     *
     * @param \Swagger\Client\Model\AvailabilityStatus $availability_status availability_status
     *
     * @return $this
     */
    public function setAvailabilityStatus($availability_status)
    {
        $this->container['availability_status'] = $availability_status;

        return $this;
    }

    /**
     * Gets country_code
     *
     * @return string
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     *
     * @param string $country_code country_code
     *
     * @return $this
     */
    public function setCountryCode($country_code)
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets date_rented_reservation
     *
     * @return \DateTime
     */
    public function getDateRentedReservation()
    {
        return $this->container['date_rented_reservation'];
    }

    /**
     * Sets date_rented_reservation
     *
     * @param \DateTime $date_rented_reservation date_rented_reservation
     *
     * @return $this
     */
    public function setDateRentedReservation($date_rented_reservation)
    {
        $this->container['date_rented_reservation'] = $date_rented_reservation;

        return $this;
    }

    /**
     * Gets date_sold
     *
     * @return \DateTime
     */
    public function getDateSold()
    {
        return $this->container['date_sold'];
    }

    /**
     * Sets date_sold
     *
     * @param \DateTime $date_sold date_sold
     *
     * @return $this
     */
    public function setDateSold($date_sold)
    {
        $this->container['date_sold'] = $date_sold;

        return $this;
    }

    /**
     * Gets date_sold_reservation
     *
     * @return \DateTime
     */
    public function getDateSoldReservation()
    {
        return $this->container['date_sold_reservation'];
    }

    /**
     * Sets date_sold_reservation
     *
     * @param \DateTime $date_sold_reservation date_sold_reservation
     *
     * @return $this
     */
    public function setDateSoldReservation($date_sold_reservation)
    {
        $this->container['date_sold_reservation'] = $date_sold_reservation;

        return $this;
    }

    /**
     * Gets date_transfer
     *
     * @return \DateTime
     */
    public function getDateTransfer()
    {
        return $this->container['date_transfer'];
    }

    /**
     * Sets date_transfer
     *
     * @param \DateTime $date_transfer date_transfer
     *
     * @return $this
     */
    public function setDateTransfer($date_transfer)
    {
        $this->container['date_transfer'] = $date_transfer;

        return $this;
    }

    /**
     * Gets display_name
     *
     * @return string
     */
    public function getDisplayName()
    {
        return $this->container['display_name'];
    }

    /**
     * Sets display_name
     *
     * @param string $display_name display_name
     *
     * @return $this
     */
    public function setDisplayName($display_name)
    {
        $this->container['display_name'] = $display_name;

        return $this;
    }

    /**
     * Gets for_rent
     *
     * @return bool
     */
    public function getForRent()
    {
        return $this->container['for_rent'];
    }

    /**
     * Sets for_rent
     *
     * @param bool $for_rent Is this a 'for rent' assignment?
     *
     * @return $this
     */
    public function setForRent($for_rent)
    {
        $this->container['for_rent'] = $for_rent;

        return $this;
    }

    /**
     * Gets for_sale
     *
     * @return bool
     */
    public function getForSale()
    {
        return $this->container['for_sale'];
    }

    /**
     * Sets for_sale
     *
     * @param bool $for_sale Is this a 'for sale' assignment?
     *
     * @return $this
     */
    public function setForSale($for_sale)
    {
        $this->container['for_sale'] = $for_sale;

        return $this;
    }

    /**
     * Gets has_cadastres
     *
     * @return bool
     */
    public function getHasCadastres()
    {
        return $this->container['has_cadastres'];
    }

    /**
     * Sets has_cadastres
     *
     * @param bool $has_cadastres has_cadastres
     *
     * @return $this
     */
    public function setHasCadastres($has_cadastres)
    {
        $this->container['has_cadastres'] = $has_cadastres;

        return $this;
    }

    /**
     * Gets is_active
     *
     * @return bool
     */
    public function getIsActive()
    {
        return $this->container['is_active'];
    }

    /**
     * Sets is_active
     *
     * @param bool $is_active is_active
     *
     * @return $this
     */
    public function setIsActive($is_active)
    {
        $this->container['is_active'] = $is_active;

        return $this;
    }

    /**
     * Gets is_part_of_project
     *
     * @return bool
     */
    public function getIsPartOfProject()
    {
        return $this->container['is_part_of_project'];
    }

    /**
     * Sets is_part_of_project
     *
     * @param bool $is_part_of_project Is this assignment linked at a project assignment?
     *
     * @return $this
     */
    public function setIsPartOfProject($is_part_of_project)
    {
        $this->container['is_part_of_project'] = $is_part_of_project;

        return $this;
    }

    /**
     * Gets construction_number
     *
     * @return int
     */
    public function getConstructionNumber()
    {
        return $this->container['construction_number'];
    }

    /**
     * Sets construction_number
     *
     * @param int $construction_number construction_number
     *
     * @return $this
     */
    public function setConstructionNumber($construction_number)
    {
        $this->container['construction_number'] = $construction_number;

        return $this;
    }

    /**
     * Gets construction_number_string
     *
     * @return string
     */
    public function getConstructionNumberString()
    {
        return $this->container['construction_number_string'];
    }

    /**
     * Sets construction_number_string
     *
     * @param string $construction_number_string construction_number_string
     *
     * @return $this
     */
    public function setConstructionNumberString($construction_number_string)
    {
        $this->container['construction_number_string'] = $construction_number_string;

        return $this;
    }

    /**
     * Gets key_note
     *
     * @return string
     */
    public function getKeyNote()
    {
        return $this->container['key_note'];
    }

    /**
     * Sets key_note
     *
     * @param string $key_note key_note
     *
     * @return $this
     */
    public function setKeyNote($key_note)
    {
        $this->container['key_note'] = $key_note;

        return $this;
    }

    /**
     * Gets key_nr
     *
     * @return int
     */
    public function getKeyNr()
    {
        return $this->container['key_nr'];
    }

    /**
     * Sets key_nr
     *
     * @param int $key_nr key_nr
     *
     * @return $this
     */
    public function setKeyNr($key_nr)
    {
        $this->container['key_nr'] = $key_nr;

        return $this;
    }

    /**
     * Gets linked_applicants
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedApplicants()
    {
        return $this->container['linked_applicants'];
    }

    /**
     * Sets linked_applicants
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_applicants linked_applicants
     *
     * @return $this
     */
    public function setLinkedApplicants($linked_applicants)
    {
        $this->container['linked_applicants'] = $linked_applicants;

        return $this;
    }

    /**
     * Gets linked_employee
     *
     * @return \Swagger\Client\Model\LinkedEmployee
     */
    public function getLinkedEmployee()
    {
        return $this->container['linked_employee'];
    }

    /**
     * Sets linked_employee
     *
     * @param \Swagger\Client\Model\LinkedEmployee $linked_employee linked_employee
     *
     * @return $this
     */
    public function setLinkedEmployee($linked_employee)
    {
        $this->container['linked_employee'] = $linked_employee;

        return $this;
    }

    /**
     * Gets linked_notaries
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedNotaries()
    {
        return $this->container['linked_notaries'];
    }

    /**
     * Sets linked_notaries
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_notaries linked_notaries
     *
     * @return $this
     */
    public function setLinkedNotaries($linked_notaries)
    {
        $this->container['linked_notaries'] = $linked_notaries;

        return $this;
    }

    /**
     * Gets linked_office
     *
     * @return \Swagger\Client\Model\LinkedOffice
     */
    public function getLinkedOffice()
    {
        return $this->container['linked_office'];
    }

    /**
     * Sets linked_office
     *
     * @param \Swagger\Client\Model\LinkedOffice $linked_office linked_office
     *
     * @return $this
     */
    public function setLinkedOffice($linked_office)
    {
        $this->container['linked_office'] = $linked_office;

        return $this;
    }

    /**
     * Gets linked_property_managers
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedPropertyManagers()
    {
        return $this->container['linked_property_managers'];
    }

    /**
     * Sets linked_property_managers
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_property_managers linked_property_managers
     *
     * @return $this
     */
    public function setLinkedPropertyManagers($linked_property_managers)
    {
        $this->container['linked_property_managers'] = $linked_property_managers;

        return $this;
    }

    /**
     * Gets linked_vendors
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedVendors()
    {
        return $this->container['linked_vendors'];
    }

    /**
     * Sets linked_vendors
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_vendors linked_vendors
     *
     * @return $this
     */
    public function setLinkedVendors($linked_vendors)
    {
        $this->container['linked_vendors'] = $linked_vendors;

        return $this;
    }

    /**
     * Gets linked_clients
     *
     * @return \Swagger\Client\Model\LinkedRelation[]
     */
    public function getLinkedClients()
    {
        return $this->container['linked_clients'];
    }

    /**
     * Sets linked_clients
     *
     * @param \Swagger\Client\Model\LinkedRelation[] $linked_clients linked_clients
     *
     * @return $this
     */
    public function setLinkedClients($linked_clients)
    {
        $this->container['linked_clients'] = $linked_clients;

        return $this;
    }

    /**
     * Gets listing_type
     *
     * @return object
     */
    public function getListingType()
    {
        return $this->container['listing_type'];
    }

    /**
     * Sets listing_type
     *
     * @param object $listing_type ListingType (E.g. 'Woonhuis', 'Appartement' or 'Parkeergelegenheid').
     *
     * @return $this
     */
    public function setListingType($listing_type)
    {
        $this->container['listing_type'] = $listing_type;

        return $this;
    }

    /**
     * Gets locality
     *
     * @return string
     */
    public function getLocality()
    {
        return $this->container['locality'];
    }

    /**
     * Sets locality
     *
     * @param string $locality locality
     *
     * @return $this
     */
    public function setLocality($locality)
    {
        $this->container['locality'] = $locality;

        return $this;
    }

    /**
     * Gets mandate_date_time
     *
     * @return \DateTime
     */
    public function getMandateDateTime()
    {
        return $this->container['mandate_date_time'];
    }

    /**
     * Sets mandate_date_time
     *
     * @param \DateTime $mandate_date_time mandate_date_time
     *
     * @return $this
     */
    public function setMandateDateTime($mandate_date_time)
    {
        $this->container['mandate_date_time'] = $mandate_date_time;

        return $this;
    }

    /**
     * Gets photo1_url
     *
     * @return string
     */
    public function getPhoto1Url()
    {
        return $this->container['photo1_url'];
    }

    /**
     * Sets photo1_url
     *
     * @param string $photo1_url photo1_url
     *
     * @return $this
     */
    public function setPhoto1Url($photo1_url)
    {
        $this->container['photo1_url'] = $photo1_url;

        return $this;
    }

    /**
     * Gets photo2_url
     *
     * @return string
     */
    public function getPhoto2Url()
    {
        return $this->container['photo2_url'];
    }

    /**
     * Sets photo2_url
     *
     * @param string $photo2_url photo2_url
     *
     * @return $this
     */
    public function setPhoto2Url($photo2_url)
    {
        $this->container['photo2_url'] = $photo2_url;

        return $this;
    }

    /**
     * Gets photo3_url
     *
     * @return string
     */
    public function getPhoto3Url()
    {
        return $this->container['photo3_url'];
    }

    /**
     * Sets photo3_url
     *
     * @param string $photo3_url photo3_url
     *
     * @return $this
     */
    public function setPhoto3Url($photo3_url)
    {
        $this->container['photo3_url'] = $photo3_url;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string $postal_code postal_code
     *
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets linked_project_assignment
     *
     * @return \Swagger\Client\Model\LinkedAssignment
     */
    public function getLinkedProjectAssignment()
    {
        return $this->container['linked_project_assignment'];
    }

    /**
     * Sets linked_project_assignment
     *
     * @param \Swagger\Client\Model\LinkedAssignment $linked_project_assignment linked_project_assignment
     *
     * @return $this
     */
    public function setLinkedProjectAssignment($linked_project_assignment)
    {
        $this->container['linked_project_assignment'] = $linked_project_assignment;

        return $this;
    }

    /**
     * Gets linked_object_type_assignment
     *
     * @return \Swagger\Client\Model\LinkedAssignment
     */
    public function getLinkedObjectTypeAssignment()
    {
        return $this->container['linked_object_type_assignment'];
    }

    /**
     * Sets linked_object_type_assignment
     *
     * @param \Swagger\Client\Model\LinkedAssignment $linked_object_type_assignment linked_object_type_assignment
     *
     * @return $this
     */
    public function setLinkedObjectTypeAssignment($linked_object_type_assignment)
    {
        $this->container['linked_object_type_assignment'] = $linked_object_type_assignment;

        return $this;
    }

    /**
     * Gets linked_bids
     *
     * @return \Swagger\Client\Model\LinkedBid[]
     */
    public function getLinkedBids()
    {
        return $this->container['linked_bids'];
    }

    /**
     * Sets linked_bids
     *
     * @param \Swagger\Client\Model\LinkedBid[] $linked_bids linked_bids
     *
     * @return $this
     */
    public function setLinkedBids($linked_bids)
    {
        $this->container['linked_bids'] = $linked_bids;

        return $this;
    }

    /**
     * Gets public_reference
     *
     * @return string
     */
    public function getPublicReference()
    {
        return $this->container['public_reference'];
    }

    /**
     * Sets public_reference
     *
     * @param string $public_reference public_reference
     *
     * @return $this
     */
    public function setPublicReference($public_reference)
    {
        $this->container['public_reference'] = $public_reference;

        return $this;
    }

    /**
     * Gets real_estate_agency_id
     *
     * @return string
     */
    public function getRealEstateAgencyId()
    {
        return $this->container['real_estate_agency_id'];
    }

    /**
     * Sets real_estate_agency_id
     *
     * @param string $real_estate_agency_id real_estate_agency_id
     *
     * @return $this
     */
    public function setRealEstateAgencyId($real_estate_agency_id)
    {
        $this->container['real_estate_agency_id'] = $real_estate_agency_id;

        return $this;
    }

    /**
     * Gets real_estate_group
     *
     * @return \Swagger\Client\Model\RealEstateGroup
     */
    public function getRealEstateGroup()
    {
        return $this->container['real_estate_group'];
    }

    /**
     * Sets real_estate_group
     *
     * @param \Swagger\Client\Model\RealEstateGroup $real_estate_group real_estate_group
     *
     * @return $this
     */
    public function setRealEstateGroup($real_estate_group)
    {
        $this->container['real_estate_group'] = $real_estate_group;

        return $this;
    }

    /**
     * Gets rent_commission_total
     *
     * @return float
     */
    public function getRentCommissionTotal()
    {
        return $this->container['rent_commission_total'];
    }

    /**
     * Sets rent_commission_total
     *
     * @param float $rent_commission_total rent_commission_total
     *
     * @return $this
     */
    public function setRentCommissionTotal($rent_commission_total)
    {
        $this->container['rent_commission_total'] = $rent_commission_total;

        return $this;
    }

    /**
     * Gets rent_condition
     *
     * @return \Swagger\Client\Model\RentCondition
     */
    public function getRentCondition()
    {
        return $this->container['rent_condition'];
    }

    /**
     * Sets rent_condition
     *
     * @param \Swagger\Client\Model\RentCondition $rent_condition rent_condition
     *
     * @return $this
     */
    public function setRentCondition($rent_condition)
    {
        $this->container['rent_condition'] = $rent_condition;

        return $this;
    }

    /**
     * Gets rented_from
     *
     * @return \DateTime
     */
    public function getRentedFrom()
    {
        return $this->container['rented_from'];
    }

    /**
     * Sets rented_from
     *
     * @param \DateTime $rented_from rented_from
     *
     * @return $this
     */
    public function setRentedFrom($rented_from)
    {
        $this->container['rented_from'] = $rented_from;

        return $this;
    }

    /**
     * Gets rent_price
     *
     * @return float
     */
    public function getRentPrice()
    {
        return $this->container['rent_price'];
    }

    /**
     * Sets rent_price
     *
     * @param float $rent_price rent_price
     *
     * @return $this
     */
    public function setRentPrice($rent_price)
    {
        $this->container['rent_price'] = $rent_price;

        return $this;
    }

    /**
     * Gets rent_price_per_unit
     *
     * @return float
     */
    public function getRentPricePerUnit()
    {
        return $this->container['rent_price_per_unit'];
    }

    /**
     * Sets rent_price_per_unit
     *
     * @param float $rent_price_per_unit rent_price_per_unit
     *
     * @return $this
     */
    public function setRentPricePerUnit($rent_price_per_unit)
    {
        $this->container['rent_price_per_unit'] = $rent_price_per_unit;

        return $this;
    }

    /**
     * Gets rent_price_max
     *
     * @return float
     */
    public function getRentPriceMax()
    {
        return $this->container['rent_price_max'];
    }

    /**
     * Sets rent_price_max
     *
     * @param float $rent_price_max rent_price_max
     *
     * @return $this
     */
    public function setRentPriceMax($rent_price_max)
    {
        $this->container['rent_price_max'] = $rent_price_max;

        return $this;
    }

    /**
     * Gets rent_vat_condition
     *
     * @return \Swagger\Client\Model\VatCondition
     */
    public function getRentVatCondition()
    {
        return $this->container['rent_vat_condition'];
    }

    /**
     * Sets rent_vat_condition
     *
     * @param \Swagger\Client\Model\VatCondition $rent_vat_condition rent_vat_condition
     *
     * @return $this
     */
    public function setRentVatCondition($rent_vat_condition)
    {
        $this->container['rent_vat_condition'] = $rent_vat_condition;

        return $this;
    }

    /**
     * Gets sale_commission_total
     *
     * @return float
     */
    public function getSaleCommissionTotal()
    {
        return $this->container['sale_commission_total'];
    }

    /**
     * Sets sale_commission_total
     *
     * @param float $sale_commission_total sale_commission_total
     *
     * @return $this
     */
    public function setSaleCommissionTotal($sale_commission_total)
    {
        $this->container['sale_commission_total'] = $sale_commission_total;

        return $this;
    }

    /**
     * Gets sale_condition
     *
     * @return \Swagger\Client\Model\SaleCondition
     */
    public function getSaleCondition()
    {
        return $this->container['sale_condition'];
    }

    /**
     * Sets sale_condition
     *
     * @param \Swagger\Client\Model\SaleCondition $sale_condition sale_condition
     *
     * @return $this
     */
    public function setSaleCondition($sale_condition)
    {
        $this->container['sale_condition'] = $sale_condition;

        return $this;
    }

    /**
     * Gets sale_price
     *
     * @return float
     */
    public function getSalePrice()
    {
        return $this->container['sale_price'];
    }

    /**
     * Sets sale_price
     *
     * @param float $sale_price sale_price
     *
     * @return $this
     */
    public function setSalePrice($sale_price)
    {
        $this->container['sale_price'] = $sale_price;

        return $this;
    }

    /**
     * Gets sale_price_per_unit
     *
     * @return float
     */
    public function getSalePricePerUnit()
    {
        return $this->container['sale_price_per_unit'];
    }

    /**
     * Sets sale_price_per_unit
     *
     * @param float $sale_price_per_unit sale_price_per_unit
     *
     * @return $this
     */
    public function setSalePricePerUnit($sale_price_per_unit)
    {
        $this->container['sale_price_per_unit'] = $sale_price_per_unit;

        return $this;
    }

    /**
     * Gets sale_price_max
     *
     * @return float
     */
    public function getSalePriceMax()
    {
        return $this->container['sale_price_max'];
    }

    /**
     * Sets sale_price_max
     *
     * @param float $sale_price_max sale_price_max
     *
     * @return $this
     */
    public function setSalePriceMax($sale_price_max)
    {
        $this->container['sale_price_max'] = $sale_price_max;

        return $this;
    }

    /**
     * Gets sale_vat_condition
     *
     * @return \Swagger\Client\Model\VatCondition
     */
    public function getSaleVatCondition()
    {
        return $this->container['sale_vat_condition'];
    }

    /**
     * Sets sale_vat_condition
     *
     * @param \Swagger\Client\Model\VatCondition $sale_vat_condition sale_vat_condition
     *
     * @return $this
     */
    public function setSaleVatCondition($sale_vat_condition)
    {
        $this->container['sale_vat_condition'] = $sale_vat_condition;

        return $this;
    }

    /**
     * Gets street_name_and_number
     *
     * @return string
     */
    public function getStreetNameAndNumber()
    {
        return $this->container['street_name_and_number'];
    }

    /**
     * Sets street_name_and_number
     *
     * @param string $street_name_and_number street_name_and_number
     *
     * @return $this
     */
    public function setStreetNameAndNumber($street_name_and_number)
    {
        $this->container['street_name_and_number'] = $street_name_and_number;

        return $this;
    }

    /**
     * Gets total_nr_of_photos
     *
     * @return int
     */
    public function getTotalNrOfPhotos()
    {
        return $this->container['total_nr_of_photos'];
    }

    /**
     * Sets total_nr_of_photos
     *
     * @param int $total_nr_of_photos total_nr_of_photos
     *
     * @return $this
     */
    public function setTotalNrOfPhotos($total_nr_of_photos)
    {
        $this->container['total_nr_of_photos'] = $total_nr_of_photos;

        return $this;
    }

    /**
     * Gets total_nr_of_videos
     *
     * @return int
     */
    public function getTotalNrOfVideos()
    {
        return $this->container['total_nr_of_videos'];
    }

    /**
     * Sets total_nr_of_videos
     *
     * @param int $total_nr_of_videos total_nr_of_videos
     *
     * @return $this
     */
    public function setTotalNrOfVideos($total_nr_of_videos)
    {
        $this->container['total_nr_of_videos'] = $total_nr_of_videos;

        return $this;
    }

    /**
     * Gets type_of_assignment
     *
     * @return object
     */
    public function getTypeOfAssignment()
    {
        return $this->container['type_of_assignment'];
    }

    /**
     * Sets type_of_assignment
     *
     * @param object $type_of_assignment Like 'Pand', 'ObjectType' or 'Project'.
     *
     * @return $this
     */
    public function setTypeOfAssignment($type_of_assignment)
    {
        $this->container['type_of_assignment'] = $type_of_assignment;

        return $this;
    }

    /**
     * Gets video1_url
     *
     * @return string
     */
    public function getVideo1Url()
    {
        return $this->container['video1_url'];
    }

    /**
     * Sets video1_url
     *
     * @param string $video1_url video1_url
     *
     * @return $this
     */
    public function setVideo1Url($video1_url)
    {
        $this->container['video1_url'] = $video1_url;

        return $this;
    }

    /**
     * Gets withdrawn_date_time
     *
     * @return \DateTime
     */
    public function getWithdrawnDateTime()
    {
        return $this->container['withdrawn_date_time'];
    }

    /**
     * Sets withdrawn_date_time
     *
     * @param \DateTime $withdrawn_date_time withdrawn_date_time
     *
     * @return $this
     */
    public function setWithdrawnDateTime($withdrawn_date_time)
    {
        $this->container['withdrawn_date_time'] = $withdrawn_date_time;

        return $this;
    }

    /**
     * Gets withdraw_reason
     *
     * @return \Swagger\Client\Model\WithdrawReason
     */
    public function getWithdrawReason()
    {
        return $this->container['withdraw_reason'];
    }

    /**
     * Sets withdraw_reason
     *
     * @param \Swagger\Client\Model\WithdrawReason $withdraw_reason withdraw_reason
     *
     * @return $this
     */
    public function setWithdrawReason($withdraw_reason)
    {
        $this->container['withdraw_reason'] = $withdraw_reason;

        return $this;
    }

    /**
     * Gets date_time_created
     *
     * @return \DateTime
     */
    public function getDateTimeCreated()
    {
        return $this->container['date_time_created'];
    }

    /**
     * Sets date_time_created
     *
     * @param \DateTime $date_time_created date_time_created
     *
     * @return $this
     */
    public function setDateTimeCreated($date_time_created)
    {
        $this->container['date_time_created'] = $date_time_created;

        return $this;
    }

    /**
     * Gets latitude
     *
     * @return float
     */
    public function getLatitude()
    {
        return $this->container['latitude'];
    }

    /**
     * Sets latitude
     *
     * @param float $latitude latitude
     *
     * @return $this
     */
    public function setLatitude($latitude)
    {
        $this->container['latitude'] = $latitude;

        return $this;
    }

    /**
     * Gets longitude
     *
     * @return float
     */
    public function getLongitude()
    {
        return $this->container['longitude'];
    }

    /**
     * Sets longitude
     *
     * @param float $longitude longitude
     *
     * @return $this
     */
    public function setLongitude($longitude)
    {
        $this->container['longitude'] = $longitude;

        return $this;
    }

    /**
     * Gets date_time_modified
     *
     * @return \DateTime
     */
    public function getDateTimeModified()
    {
        return $this->container['date_time_modified'];
    }

    /**
     * Sets date_time_modified
     *
     * @param \DateTime $date_time_modified date_time_modified
     *
     * @return $this
     */
    public function setDateTimeModified($date_time_modified)
    {
        $this->container['date_time_modified'] = $date_time_modified;

        return $this;
    }

    /**
     * Gets linked_created_by
     *
     * @return \Swagger\Client\Model\LinkedEmployee
     */
    public function getLinkedCreatedBy()
    {
        return $this->container['linked_created_by'];
    }

    /**
     * Sets linked_created_by
     *
     * @param \Swagger\Client\Model\LinkedEmployee $linked_created_by linked_created_by
     *
     * @return $this
     */
    public function setLinkedCreatedBy($linked_created_by)
    {
        $this->container['linked_created_by'] = $linked_created_by;

        return $this;
    }

    /**
     * Gets linked_modified_by
     *
     * @return \Swagger\Client\Model\LinkedEmployee
     */
    public function getLinkedModifiedBy()
    {
        return $this->container['linked_modified_by'];
    }

    /**
     * Sets linked_modified_by
     *
     * @param \Swagger\Client\Model\LinkedEmployee $linked_modified_by linked_modified_by
     *
     * @return $this
     */
    public function setLinkedModifiedBy($linked_modified_by)
    {
        $this->container['linked_modified_by'] = $linked_modified_by;

        return $this;
    }

    /**
     * Gets furnishing
     *
     * @return \Swagger\Client\Model\Furnishing
     */
    public function getFurnishing()
    {
        return $this->container['furnishing'];
    }

    /**
     * Sets furnishing
     *
     * @param \Swagger\Client\Model\Furnishing $furnishing furnishing
     *
     * @return $this
     */
    public function setFurnishing($furnishing)
    {
        $this->container['furnishing'] = $furnishing;

        return $this;
    }

    /**
     * Gets number_of_bedrooms
     *
     * @return int
     */
    public function getNumberOfBedrooms()
    {
        return $this->container['number_of_bedrooms'];
    }

    /**
     * Sets number_of_bedrooms
     *
     * @param int $number_of_bedrooms number_of_bedrooms
     *
     * @return $this
     */
    public function setNumberOfBedrooms($number_of_bedrooms)
    {
        $this->container['number_of_bedrooms'] = $number_of_bedrooms;

        return $this;
    }

    /**
     * Gets number_of_bath_rooms
     *
     * @return int
     */
    public function getNumberOfBathRooms()
    {
        return $this->container['number_of_bath_rooms'];
    }

    /**
     * Sets number_of_bath_rooms
     *
     * @param int $number_of_bath_rooms number_of_bath_rooms
     *
     * @return $this
     */
    public function setNumberOfBathRooms($number_of_bath_rooms)
    {
        $this->container['number_of_bath_rooms'] = $number_of_bath_rooms;

        return $this;
    }

    /**
     * Gets acquisition_status
     *
     * @return \Swagger\Client\Model\AcquisitionStatus
     */
    public function getAcquisitionStatus()
    {
        return $this->container['acquisition_status'];
    }

    /**
     * Sets acquisition_status
     *
     * @param \Swagger\Client\Model\AcquisitionStatus $acquisition_status acquisition_status
     *
     * @return $this
     */
    public function setAcquisitionStatus($acquisition_status)
    {
        $this->container['acquisition_status'] = $acquisition_status;

        return $this;
    }

    /**
     * Gets is_confidential
     *
     * @return bool
     */
    public function getIsConfidential()
    {
        return $this->container['is_confidential'];
    }

    /**
     * Sets is_confidential
     *
     * @param bool $is_confidential is_confidential
     *
     * @return $this
     */
    public function setIsConfidential($is_confidential)
    {
        $this->container['is_confidential'] = $is_confidential;

        return $this;
    }

    /**
     * Gets available_from
     *
     * @return \DateTime
     */
    public function getAvailableFrom()
    {
        return $this->container['available_from'];
    }

    /**
     * Sets available_from
     *
     * @param \DateTime $available_from available_from
     *
     * @return $this
     */
    public function setAvailableFrom($available_from)
    {
        $this->container['available_from'] = $available_from;

        return $this;
    }

    /**
     * Gets available_until
     *
     * @return \DateTime
     */
    public function getAvailableUntil()
    {
        return $this->container['available_until'];
    }

    /**
     * Sets available_until
     *
     * @param \DateTime $available_until available_until
     *
     * @return $this
     */
    public function setAvailableUntil($available_until)
    {
        $this->container['available_until'] = $available_until;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


