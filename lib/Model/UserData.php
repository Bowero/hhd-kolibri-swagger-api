<?php
/**
 * UserData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web API Swagger specification Kolibri24 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.1.778.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.17
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * UserData Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UserData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'UserData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'culture_on_website_visit' => 'string',
        'email_address' => 'string',
        'first_name' => 'string',
        'last_name' => 'string',
        'gender' => '\Swagger\Client\Model\Gender',
        'phone_number' => 'string',
        'mobile_phone_number' => 'string',
        'street_name' => 'string',
        'house_number' => 'string',
        'city' => 'string',
        'region' => 'string',
        'postal_code' => 'string',
        'country_iso2_code' => 'string',
        'object_street_name' => 'string',
        'object_house_number' => 'string',
        'object_city' => 'string',
        'day_parts' => '\Swagger\Client\Model\DayPartDayType[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'culture_on_website_visit' => null,
        'email_address' => null,
        'first_name' => null,
        'last_name' => null,
        'gender' => null,
        'phone_number' => null,
        'mobile_phone_number' => null,
        'street_name' => null,
        'house_number' => null,
        'city' => null,
        'region' => null,
        'postal_code' => null,
        'country_iso2_code' => null,
        'object_street_name' => null,
        'object_house_number' => null,
        'object_city' => null,
        'day_parts' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'culture_on_website_visit' => 'cultureOnWebsiteVisit',
        'email_address' => 'emailAddress',
        'first_name' => 'firstName',
        'last_name' => 'lastName',
        'gender' => 'gender',
        'phone_number' => 'phoneNumber',
        'mobile_phone_number' => 'mobilePhoneNumber',
        'street_name' => 'streetName',
        'house_number' => 'houseNumber',
        'city' => 'city',
        'region' => 'region',
        'postal_code' => 'postalCode',
        'country_iso2_code' => 'countryIso2Code',
        'object_street_name' => 'objectStreetName',
        'object_house_number' => 'objectHouseNumber',
        'object_city' => 'objectCity',
        'day_parts' => 'dayParts'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'culture_on_website_visit' => 'setCultureOnWebsiteVisit',
        'email_address' => 'setEmailAddress',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'gender' => 'setGender',
        'phone_number' => 'setPhoneNumber',
        'mobile_phone_number' => 'setMobilePhoneNumber',
        'street_name' => 'setStreetName',
        'house_number' => 'setHouseNumber',
        'city' => 'setCity',
        'region' => 'setRegion',
        'postal_code' => 'setPostalCode',
        'country_iso2_code' => 'setCountryIso2Code',
        'object_street_name' => 'setObjectStreetName',
        'object_house_number' => 'setObjectHouseNumber',
        'object_city' => 'setObjectCity',
        'day_parts' => 'setDayParts'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'culture_on_website_visit' => 'getCultureOnWebsiteVisit',
        'email_address' => 'getEmailAddress',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'gender' => 'getGender',
        'phone_number' => 'getPhoneNumber',
        'mobile_phone_number' => 'getMobilePhoneNumber',
        'street_name' => 'getStreetName',
        'house_number' => 'getHouseNumber',
        'city' => 'getCity',
        'region' => 'getRegion',
        'postal_code' => 'getPostalCode',
        'country_iso2_code' => 'getCountryIso2Code',
        'object_street_name' => 'getObjectStreetName',
        'object_house_number' => 'getObjectHouseNumber',
        'object_city' => 'getObjectCity',
        'day_parts' => 'getDayParts'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['culture_on_website_visit'] = isset($data['culture_on_website_visit']) ? $data['culture_on_website_visit'] : null;
        $this->container['email_address'] = isset($data['email_address']) ? $data['email_address'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['phone_number'] = isset($data['phone_number']) ? $data['phone_number'] : null;
        $this->container['mobile_phone_number'] = isset($data['mobile_phone_number']) ? $data['mobile_phone_number'] : null;
        $this->container['street_name'] = isset($data['street_name']) ? $data['street_name'] : null;
        $this->container['house_number'] = isset($data['house_number']) ? $data['house_number'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['region'] = isset($data['region']) ? $data['region'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['country_iso2_code'] = isset($data['country_iso2_code']) ? $data['country_iso2_code'] : null;
        $this->container['object_street_name'] = isset($data['object_street_name']) ? $data['object_street_name'] : null;
        $this->container['object_house_number'] = isset($data['object_house_number']) ? $data['object_house_number'] : null;
        $this->container['object_city'] = isset($data['object_city']) ? $data['object_city'] : null;
        $this->container['day_parts'] = isset($data['day_parts']) ? $data['day_parts'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets culture_on_website_visit
     *
     * @return string
     */
    public function getCultureOnWebsiteVisit()
    {
        return $this->container['culture_on_website_visit'];
    }

    /**
     * Sets culture_on_website_visit
     *
     * @param string $culture_on_website_visit culture_on_website_visit
     *
     * @return $this
     */
    public function setCultureOnWebsiteVisit($culture_on_website_visit)
    {
        $this->container['culture_on_website_visit'] = $culture_on_website_visit;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return string
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param string $email_address email_address
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name first_name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name last_name
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return \Swagger\Client\Model\Gender
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param \Swagger\Client\Model\Gender $gender gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string $phone_number phone_number
     *
     * @return $this
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets mobile_phone_number
     *
     * @return string
     */
    public function getMobilePhoneNumber()
    {
        return $this->container['mobile_phone_number'];
    }

    /**
     * Sets mobile_phone_number
     *
     * @param string $mobile_phone_number mobile_phone_number
     *
     * @return $this
     */
    public function setMobilePhoneNumber($mobile_phone_number)
    {
        $this->container['mobile_phone_number'] = $mobile_phone_number;

        return $this;
    }

    /**
     * Gets street_name
     *
     * @return string
     */
    public function getStreetName()
    {
        return $this->container['street_name'];
    }

    /**
     * Sets street_name
     *
     * @param string $street_name street_name
     *
     * @return $this
     */
    public function setStreetName($street_name)
    {
        $this->container['street_name'] = $street_name;

        return $this;
    }

    /**
     * Gets house_number
     *
     * @return string
     */
    public function getHouseNumber()
    {
        return $this->container['house_number'];
    }

    /**
     * Sets house_number
     *
     * @param string $house_number house_number
     *
     * @return $this
     */
    public function setHouseNumber($house_number)
    {
        $this->container['house_number'] = $house_number;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city city
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets region
     *
     * @return string
     */
    public function getRegion()
    {
        return $this->container['region'];
    }

    /**
     * Sets region
     *
     * @param string $region region
     *
     * @return $this
     */
    public function setRegion($region)
    {
        $this->container['region'] = $region;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string $postal_code postal_code
     *
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets country_iso2_code
     *
     * @return string
     */
    public function getCountryIso2Code()
    {
        return $this->container['country_iso2_code'];
    }

    /**
     * Sets country_iso2_code
     *
     * @param string $country_iso2_code country_iso2_code
     *
     * @return $this
     */
    public function setCountryIso2Code($country_iso2_code)
    {
        $this->container['country_iso2_code'] = $country_iso2_code;

        return $this;
    }

    /**
     * Gets object_street_name
     *
     * @return string
     */
    public function getObjectStreetName()
    {
        return $this->container['object_street_name'];
    }

    /**
     * Sets object_street_name
     *
     * @param string $object_street_name object_street_name
     *
     * @return $this
     */
    public function setObjectStreetName($object_street_name)
    {
        $this->container['object_street_name'] = $object_street_name;

        return $this;
    }

    /**
     * Gets object_house_number
     *
     * @return string
     */
    public function getObjectHouseNumber()
    {
        return $this->container['object_house_number'];
    }

    /**
     * Sets object_house_number
     *
     * @param string $object_house_number object_house_number
     *
     * @return $this
     */
    public function setObjectHouseNumber($object_house_number)
    {
        $this->container['object_house_number'] = $object_house_number;

        return $this;
    }

    /**
     * Gets object_city
     *
     * @return string
     */
    public function getObjectCity()
    {
        return $this->container['object_city'];
    }

    /**
     * Sets object_city
     *
     * @param string $object_city object_city
     *
     * @return $this
     */
    public function setObjectCity($object_city)
    {
        $this->container['object_city'] = $object_city;

        return $this;
    }

    /**
     * Gets day_parts
     *
     * @return \Swagger\Client\Model\DayPartDayType[]
     */
    public function getDayParts()
    {
        return $this->container['day_parts'];
    }

    /**
     * Sets day_parts
     *
     * @param \Swagger\Client\Model\DayPartDayType[] $day_parts day_parts
     *
     * @return $this
     */
    public function setDayParts($day_parts)
    {
        $this->container['day_parts'] = $day_parts;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


