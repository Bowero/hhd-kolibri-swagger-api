<?php
/**
 * ProjectAssignment
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web API Swagger specification Kolibri24 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.1.778.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.17
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;
use \Swagger\Client\ObjectSerializer;

/**
 * ProjectAssignment Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProjectAssignment extends BaseAssignment 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ProjectAssignment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'address' => '\Swagger\Client\Model\Address',
        'amount_of_free_units' => 'int',
        'amount_of_units' => 'int',
        'building_bound_outside_spaces' => '\Swagger\Client\Model\DimensionsRange',
        'building_start' => '\DateTime',
        'building_start_date_parts' => 'bool',
        'hide_building_start_date' => 'bool',
        'building_start_text' => '\Swagger\Client\Model\TranslatedText[]',
        'building_type' => '\Swagger\Client\Model\BuildingType',
        'comfort_quality' => '\Swagger\Client\Model\ComfortQuality',
        'content' => '\Swagger\Client\Model\DimensionsRange',
        'delivery_start' => '\DateTime',
        'delivery_start_date_parts' => 'bool',
        'hide_delivery_start_date' => 'bool',
        'delivery_start_text' => '\Swagger\Client\Model\TranslatedText[]',
        'display_name' => 'string',
        'external_storages_spaces' => '\Swagger\Client\Model\DimensionsRange',
        'hide_address' => 'bool',
        'in_park' => 'bool',
        'is_permanently_inhabited' => 'bool',
        'is_recreational' => 'bool',
        'living_room_surface' => '\Swagger\Client\Model\DimensionsRange',
        'location_places' => '\Swagger\Client\Model\LocationPlace[]',
        'maintenance_inside' => '\Swagger\Client\Model\Maintenance',
        'maintenance_outside' => '\Swagger\Client\Model\Maintenance',
        'open_house_for_underlaying_objects_too' => 'bool',
        'other_inside_spaces' => '\Swagger\Client\Model\DimensionsRange',
        'parcel_surface' => '\Swagger\Client\Model\DimensionsRange',
        'parking_facilities' => '\Swagger\Client\Model\TypeOfParkingFacility[]',
        'public_reference' => 'string',
        'sale_start' => '\DateTime',
        'sale_start_date_parts' => 'bool',
        'hide_sale_start_date' => 'bool',
        'sale_start_text' => '\Swagger\Client\Model\TranslatedText[]',
        'usage_area' => '\Swagger\Client\Model\DimensionsRange',
        'year_of_construction' => '\Swagger\Client\Model\YearOfConstruction',
        'linked_employees' => '\Swagger\Client\Model\LinkedEmployee[]',
        'linked_office' => '\Swagger\Client\Model\LinkedOffice',
        'linked_folder_tree' => '\Swagger\Client\Model\LinkedFolderTree'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'address' => null,
        'amount_of_free_units' => 'int32',
        'amount_of_units' => 'int32',
        'building_bound_outside_spaces' => null,
        'building_start' => 'date-time',
        'building_start_date_parts' => null,
        'hide_building_start_date' => null,
        'building_start_text' => null,
        'building_type' => null,
        'comfort_quality' => null,
        'content' => null,
        'delivery_start' => 'date-time',
        'delivery_start_date_parts' => null,
        'hide_delivery_start_date' => null,
        'delivery_start_text' => null,
        'display_name' => null,
        'external_storages_spaces' => null,
        'hide_address' => null,
        'in_park' => null,
        'is_permanently_inhabited' => null,
        'is_recreational' => null,
        'living_room_surface' => null,
        'location_places' => null,
        'maintenance_inside' => null,
        'maintenance_outside' => null,
        'open_house_for_underlaying_objects_too' => null,
        'other_inside_spaces' => null,
        'parcel_surface' => null,
        'parking_facilities' => null,
        'public_reference' => null,
        'sale_start' => 'date-time',
        'sale_start_date_parts' => null,
        'hide_sale_start_date' => null,
        'sale_start_text' => null,
        'usage_area' => null,
        'year_of_construction' => null,
        'linked_employees' => null,
        'linked_office' => null,
        'linked_folder_tree' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'address' => 'address',
        'amount_of_free_units' => 'amountOfFreeUnits',
        'amount_of_units' => 'amountOfUnits',
        'building_bound_outside_spaces' => 'buildingBoundOutsideSpaces',
        'building_start' => 'buildingStart',
        'building_start_date_parts' => 'buildingStartDateParts',
        'hide_building_start_date' => 'hideBuildingStartDate',
        'building_start_text' => 'buildingStartText',
        'building_type' => 'buildingType',
        'comfort_quality' => 'comfortQuality',
        'content' => 'content',
        'delivery_start' => 'deliveryStart',
        'delivery_start_date_parts' => 'deliveryStartDateParts',
        'hide_delivery_start_date' => 'hideDeliveryStartDate',
        'delivery_start_text' => 'deliveryStartText',
        'display_name' => 'displayName',
        'external_storages_spaces' => 'externalStoragesSpaces',
        'hide_address' => 'hideAddress',
        'in_park' => 'inPark',
        'is_permanently_inhabited' => 'isPermanentlyInhabited',
        'is_recreational' => 'isRecreational',
        'living_room_surface' => 'livingRoomSurface',
        'location_places' => 'locationPlaces',
        'maintenance_inside' => 'maintenanceInside',
        'maintenance_outside' => 'maintenanceOutside',
        'open_house_for_underlaying_objects_too' => 'openHouseForUnderlayingObjectsToo',
        'other_inside_spaces' => 'otherInsideSpaces',
        'parcel_surface' => 'parcelSurface',
        'parking_facilities' => 'parkingFacilities',
        'public_reference' => 'publicReference',
        'sale_start' => 'saleStart',
        'sale_start_date_parts' => 'saleStartDateParts',
        'hide_sale_start_date' => 'hideSaleStartDate',
        'sale_start_text' => 'saleStartText',
        'usage_area' => 'usageArea',
        'year_of_construction' => 'yearOfConstruction',
        'linked_employees' => 'linkedEmployees',
        'linked_office' => 'linkedOffice',
        'linked_folder_tree' => 'linkedFolderTree'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'address' => 'setAddress',
        'amount_of_free_units' => 'setAmountOfFreeUnits',
        'amount_of_units' => 'setAmountOfUnits',
        'building_bound_outside_spaces' => 'setBuildingBoundOutsideSpaces',
        'building_start' => 'setBuildingStart',
        'building_start_date_parts' => 'setBuildingStartDateParts',
        'hide_building_start_date' => 'setHideBuildingStartDate',
        'building_start_text' => 'setBuildingStartText',
        'building_type' => 'setBuildingType',
        'comfort_quality' => 'setComfortQuality',
        'content' => 'setContent',
        'delivery_start' => 'setDeliveryStart',
        'delivery_start_date_parts' => 'setDeliveryStartDateParts',
        'hide_delivery_start_date' => 'setHideDeliveryStartDate',
        'delivery_start_text' => 'setDeliveryStartText',
        'display_name' => 'setDisplayName',
        'external_storages_spaces' => 'setExternalStoragesSpaces',
        'hide_address' => 'setHideAddress',
        'in_park' => 'setInPark',
        'is_permanently_inhabited' => 'setIsPermanentlyInhabited',
        'is_recreational' => 'setIsRecreational',
        'living_room_surface' => 'setLivingRoomSurface',
        'location_places' => 'setLocationPlaces',
        'maintenance_inside' => 'setMaintenanceInside',
        'maintenance_outside' => 'setMaintenanceOutside',
        'open_house_for_underlaying_objects_too' => 'setOpenHouseForUnderlayingObjectsToo',
        'other_inside_spaces' => 'setOtherInsideSpaces',
        'parcel_surface' => 'setParcelSurface',
        'parking_facilities' => 'setParkingFacilities',
        'public_reference' => 'setPublicReference',
        'sale_start' => 'setSaleStart',
        'sale_start_date_parts' => 'setSaleStartDateParts',
        'hide_sale_start_date' => 'setHideSaleStartDate',
        'sale_start_text' => 'setSaleStartText',
        'usage_area' => 'setUsageArea',
        'year_of_construction' => 'setYearOfConstruction',
        'linked_employees' => 'setLinkedEmployees',
        'linked_office' => 'setLinkedOffice',
        'linked_folder_tree' => 'setLinkedFolderTree'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'address' => 'getAddress',
        'amount_of_free_units' => 'getAmountOfFreeUnits',
        'amount_of_units' => 'getAmountOfUnits',
        'building_bound_outside_spaces' => 'getBuildingBoundOutsideSpaces',
        'building_start' => 'getBuildingStart',
        'building_start_date_parts' => 'getBuildingStartDateParts',
        'hide_building_start_date' => 'getHideBuildingStartDate',
        'building_start_text' => 'getBuildingStartText',
        'building_type' => 'getBuildingType',
        'comfort_quality' => 'getComfortQuality',
        'content' => 'getContent',
        'delivery_start' => 'getDeliveryStart',
        'delivery_start_date_parts' => 'getDeliveryStartDateParts',
        'hide_delivery_start_date' => 'getHideDeliveryStartDate',
        'delivery_start_text' => 'getDeliveryStartText',
        'display_name' => 'getDisplayName',
        'external_storages_spaces' => 'getExternalStoragesSpaces',
        'hide_address' => 'getHideAddress',
        'in_park' => 'getInPark',
        'is_permanently_inhabited' => 'getIsPermanentlyInhabited',
        'is_recreational' => 'getIsRecreational',
        'living_room_surface' => 'getLivingRoomSurface',
        'location_places' => 'getLocationPlaces',
        'maintenance_inside' => 'getMaintenanceInside',
        'maintenance_outside' => 'getMaintenanceOutside',
        'open_house_for_underlaying_objects_too' => 'getOpenHouseForUnderlayingObjectsToo',
        'other_inside_spaces' => 'getOtherInsideSpaces',
        'parcel_surface' => 'getParcelSurface',
        'parking_facilities' => 'getParkingFacilities',
        'public_reference' => 'getPublicReference',
        'sale_start' => 'getSaleStart',
        'sale_start_date_parts' => 'getSaleStartDateParts',
        'hide_sale_start_date' => 'getHideSaleStartDate',
        'sale_start_text' => 'getSaleStartText',
        'usage_area' => 'getUsageArea',
        'year_of_construction' => 'getYearOfConstruction',
        'linked_employees' => 'getLinkedEmployees',
        'linked_office' => 'getLinkedOffice',
        'linked_folder_tree' => 'getLinkedFolderTree'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['amount_of_free_units'] = isset($data['amount_of_free_units']) ? $data['amount_of_free_units'] : null;
        $this->container['amount_of_units'] = isset($data['amount_of_units']) ? $data['amount_of_units'] : null;
        $this->container['building_bound_outside_spaces'] = isset($data['building_bound_outside_spaces']) ? $data['building_bound_outside_spaces'] : null;
        $this->container['building_start'] = isset($data['building_start']) ? $data['building_start'] : null;
        $this->container['building_start_date_parts'] = isset($data['building_start_date_parts']) ? $data['building_start_date_parts'] : null;
        $this->container['hide_building_start_date'] = isset($data['hide_building_start_date']) ? $data['hide_building_start_date'] : null;
        $this->container['building_start_text'] = isset($data['building_start_text']) ? $data['building_start_text'] : null;
        $this->container['building_type'] = isset($data['building_type']) ? $data['building_type'] : null;
        $this->container['comfort_quality'] = isset($data['comfort_quality']) ? $data['comfort_quality'] : null;
        $this->container['content'] = isset($data['content']) ? $data['content'] : null;
        $this->container['delivery_start'] = isset($data['delivery_start']) ? $data['delivery_start'] : null;
        $this->container['delivery_start_date_parts'] = isset($data['delivery_start_date_parts']) ? $data['delivery_start_date_parts'] : null;
        $this->container['hide_delivery_start_date'] = isset($data['hide_delivery_start_date']) ? $data['hide_delivery_start_date'] : null;
        $this->container['delivery_start_text'] = isset($data['delivery_start_text']) ? $data['delivery_start_text'] : null;
        $this->container['display_name'] = isset($data['display_name']) ? $data['display_name'] : null;
        $this->container['external_storages_spaces'] = isset($data['external_storages_spaces']) ? $data['external_storages_spaces'] : null;
        $this->container['hide_address'] = isset($data['hide_address']) ? $data['hide_address'] : null;
        $this->container['in_park'] = isset($data['in_park']) ? $data['in_park'] : null;
        $this->container['is_permanently_inhabited'] = isset($data['is_permanently_inhabited']) ? $data['is_permanently_inhabited'] : null;
        $this->container['is_recreational'] = isset($data['is_recreational']) ? $data['is_recreational'] : null;
        $this->container['living_room_surface'] = isset($data['living_room_surface']) ? $data['living_room_surface'] : null;
        $this->container['location_places'] = isset($data['location_places']) ? $data['location_places'] : null;
        $this->container['maintenance_inside'] = isset($data['maintenance_inside']) ? $data['maintenance_inside'] : null;
        $this->container['maintenance_outside'] = isset($data['maintenance_outside']) ? $data['maintenance_outside'] : null;
        $this->container['open_house_for_underlaying_objects_too'] = isset($data['open_house_for_underlaying_objects_too']) ? $data['open_house_for_underlaying_objects_too'] : null;
        $this->container['other_inside_spaces'] = isset($data['other_inside_spaces']) ? $data['other_inside_spaces'] : null;
        $this->container['parcel_surface'] = isset($data['parcel_surface']) ? $data['parcel_surface'] : null;
        $this->container['parking_facilities'] = isset($data['parking_facilities']) ? $data['parking_facilities'] : null;
        $this->container['public_reference'] = isset($data['public_reference']) ? $data['public_reference'] : null;
        $this->container['sale_start'] = isset($data['sale_start']) ? $data['sale_start'] : null;
        $this->container['sale_start_date_parts'] = isset($data['sale_start_date_parts']) ? $data['sale_start_date_parts'] : null;
        $this->container['hide_sale_start_date'] = isset($data['hide_sale_start_date']) ? $data['hide_sale_start_date'] : null;
        $this->container['sale_start_text'] = isset($data['sale_start_text']) ? $data['sale_start_text'] : null;
        $this->container['usage_area'] = isset($data['usage_area']) ? $data['usage_area'] : null;
        $this->container['year_of_construction'] = isset($data['year_of_construction']) ? $data['year_of_construction'] : null;
        $this->container['linked_employees'] = isset($data['linked_employees']) ? $data['linked_employees'] : null;
        $this->container['linked_office'] = isset($data['linked_office']) ? $data['linked_office'] : null;
        $this->container['linked_folder_tree'] = isset($data['linked_folder_tree']) ? $data['linked_folder_tree'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets address
     *
     * @return \Swagger\Client\Model\Address
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Swagger\Client\Model\Address $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets amount_of_free_units
     *
     * @return int
     */
    public function getAmountOfFreeUnits()
    {
        return $this->container['amount_of_free_units'];
    }

    /**
     * Sets amount_of_free_units
     *
     * @param int $amount_of_free_units amount_of_free_units
     *
     * @return $this
     */
    public function setAmountOfFreeUnits($amount_of_free_units)
    {
        $this->container['amount_of_free_units'] = $amount_of_free_units;

        return $this;
    }

    /**
     * Gets amount_of_units
     *
     * @return int
     */
    public function getAmountOfUnits()
    {
        return $this->container['amount_of_units'];
    }

    /**
     * Sets amount_of_units
     *
     * @param int $amount_of_units amount_of_units
     *
     * @return $this
     */
    public function setAmountOfUnits($amount_of_units)
    {
        $this->container['amount_of_units'] = $amount_of_units;

        return $this;
    }

    /**
     * Gets building_bound_outside_spaces
     *
     * @return \Swagger\Client\Model\DimensionsRange
     */
    public function getBuildingBoundOutsideSpaces()
    {
        return $this->container['building_bound_outside_spaces'];
    }

    /**
     * Sets building_bound_outside_spaces
     *
     * @param \Swagger\Client\Model\DimensionsRange $building_bound_outside_spaces building_bound_outside_spaces
     *
     * @return $this
     */
    public function setBuildingBoundOutsideSpaces($building_bound_outside_spaces)
    {
        $this->container['building_bound_outside_spaces'] = $building_bound_outside_spaces;

        return $this;
    }

    /**
     * Gets building_start
     *
     * @return \DateTime
     */
    public function getBuildingStart()
    {
        return $this->container['building_start'];
    }

    /**
     * Sets building_start
     *
     * @param \DateTime $building_start building_start
     *
     * @return $this
     */
    public function setBuildingStart($building_start)
    {
        $this->container['building_start'] = $building_start;

        return $this;
    }

    /**
     * Gets building_start_date_parts
     *
     * @return bool
     */
    public function getBuildingStartDateParts()
    {
        return $this->container['building_start_date_parts'];
    }

    /**
     * Sets building_start_date_parts
     *
     * @param bool $building_start_date_parts building_start_date_parts
     *
     * @return $this
     */
    public function setBuildingStartDateParts($building_start_date_parts)
    {
        $this->container['building_start_date_parts'] = $building_start_date_parts;

        return $this;
    }

    /**
     * Gets hide_building_start_date
     *
     * @return bool
     */
    public function getHideBuildingStartDate()
    {
        return $this->container['hide_building_start_date'];
    }

    /**
     * Sets hide_building_start_date
     *
     * @param bool $hide_building_start_date hide_building_start_date
     *
     * @return $this
     */
    public function setHideBuildingStartDate($hide_building_start_date)
    {
        $this->container['hide_building_start_date'] = $hide_building_start_date;

        return $this;
    }

    /**
     * Gets building_start_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getBuildingStartText()
    {
        return $this->container['building_start_text'];
    }

    /**
     * Sets building_start_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $building_start_text building_start_text
     *
     * @return $this
     */
    public function setBuildingStartText($building_start_text)
    {
        $this->container['building_start_text'] = $building_start_text;

        return $this;
    }

    /**
     * Gets building_type
     *
     * @return \Swagger\Client\Model\BuildingType
     */
    public function getBuildingType()
    {
        return $this->container['building_type'];
    }

    /**
     * Sets building_type
     *
     * @param \Swagger\Client\Model\BuildingType $building_type building_type
     *
     * @return $this
     */
    public function setBuildingType($building_type)
    {
        $this->container['building_type'] = $building_type;

        return $this;
    }

    /**
     * Gets comfort_quality
     *
     * @return \Swagger\Client\Model\ComfortQuality
     */
    public function getComfortQuality()
    {
        return $this->container['comfort_quality'];
    }

    /**
     * Sets comfort_quality
     *
     * @param \Swagger\Client\Model\ComfortQuality $comfort_quality comfort_quality
     *
     * @return $this
     */
    public function setComfortQuality($comfort_quality)
    {
        $this->container['comfort_quality'] = $comfort_quality;

        return $this;
    }

    /**
     * Gets content
     *
     * @return \Swagger\Client\Model\DimensionsRange
     */
    public function getContent()
    {
        return $this->container['content'];
    }

    /**
     * Sets content
     *
     * @param \Swagger\Client\Model\DimensionsRange $content content
     *
     * @return $this
     */
    public function setContent($content)
    {
        $this->container['content'] = $content;

        return $this;
    }

    /**
     * Gets delivery_start
     *
     * @return \DateTime
     */
    public function getDeliveryStart()
    {
        return $this->container['delivery_start'];
    }

    /**
     * Sets delivery_start
     *
     * @param \DateTime $delivery_start delivery_start
     *
     * @return $this
     */
    public function setDeliveryStart($delivery_start)
    {
        $this->container['delivery_start'] = $delivery_start;

        return $this;
    }

    /**
     * Gets delivery_start_date_parts
     *
     * @return bool
     */
    public function getDeliveryStartDateParts()
    {
        return $this->container['delivery_start_date_parts'];
    }

    /**
     * Sets delivery_start_date_parts
     *
     * @param bool $delivery_start_date_parts delivery_start_date_parts
     *
     * @return $this
     */
    public function setDeliveryStartDateParts($delivery_start_date_parts)
    {
        $this->container['delivery_start_date_parts'] = $delivery_start_date_parts;

        return $this;
    }

    /**
     * Gets hide_delivery_start_date
     *
     * @return bool
     */
    public function getHideDeliveryStartDate()
    {
        return $this->container['hide_delivery_start_date'];
    }

    /**
     * Sets hide_delivery_start_date
     *
     * @param bool $hide_delivery_start_date hide_delivery_start_date
     *
     * @return $this
     */
    public function setHideDeliveryStartDate($hide_delivery_start_date)
    {
        $this->container['hide_delivery_start_date'] = $hide_delivery_start_date;

        return $this;
    }

    /**
     * Gets delivery_start_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getDeliveryStartText()
    {
        return $this->container['delivery_start_text'];
    }

    /**
     * Sets delivery_start_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $delivery_start_text delivery_start_text
     *
     * @return $this
     */
    public function setDeliveryStartText($delivery_start_text)
    {
        $this->container['delivery_start_text'] = $delivery_start_text;

        return $this;
    }

    /**
     * Gets display_name
     *
     * @return string
     */
    public function getDisplayName()
    {
        return $this->container['display_name'];
    }

    /**
     * Sets display_name
     *
     * @param string $display_name display_name
     *
     * @return $this
     */
    public function setDisplayName($display_name)
    {
        $this->container['display_name'] = $display_name;

        return $this;
    }

    /**
     * Gets external_storages_spaces
     *
     * @return \Swagger\Client\Model\DimensionsRange
     */
    public function getExternalStoragesSpaces()
    {
        return $this->container['external_storages_spaces'];
    }

    /**
     * Sets external_storages_spaces
     *
     * @param \Swagger\Client\Model\DimensionsRange $external_storages_spaces external_storages_spaces
     *
     * @return $this
     */
    public function setExternalStoragesSpaces($external_storages_spaces)
    {
        $this->container['external_storages_spaces'] = $external_storages_spaces;

        return $this;
    }

    /**
     * Gets hide_address
     *
     * @return bool
     */
    public function getHideAddress()
    {
        return $this->container['hide_address'];
    }

    /**
     * Sets hide_address
     *
     * @param bool $hide_address hide_address
     *
     * @return $this
     */
    public function setHideAddress($hide_address)
    {
        $this->container['hide_address'] = $hide_address;

        return $this;
    }

    /**
     * Gets in_park
     *
     * @return bool
     */
    public function getInPark()
    {
        return $this->container['in_park'];
    }

    /**
     * Sets in_park
     *
     * @param bool $in_park in_park
     *
     * @return $this
     */
    public function setInPark($in_park)
    {
        $this->container['in_park'] = $in_park;

        return $this;
    }

    /**
     * Gets is_permanently_inhabited
     *
     * @return bool
     */
    public function getIsPermanentlyInhabited()
    {
        return $this->container['is_permanently_inhabited'];
    }

    /**
     * Sets is_permanently_inhabited
     *
     * @param bool $is_permanently_inhabited is_permanently_inhabited
     *
     * @return $this
     */
    public function setIsPermanentlyInhabited($is_permanently_inhabited)
    {
        $this->container['is_permanently_inhabited'] = $is_permanently_inhabited;

        return $this;
    }

    /**
     * Gets is_recreational
     *
     * @return bool
     */
    public function getIsRecreational()
    {
        return $this->container['is_recreational'];
    }

    /**
     * Sets is_recreational
     *
     * @param bool $is_recreational is_recreational
     *
     * @return $this
     */
    public function setIsRecreational($is_recreational)
    {
        $this->container['is_recreational'] = $is_recreational;

        return $this;
    }

    /**
     * Gets living_room_surface
     *
     * @return \Swagger\Client\Model\DimensionsRange
     */
    public function getLivingRoomSurface()
    {
        return $this->container['living_room_surface'];
    }

    /**
     * Sets living_room_surface
     *
     * @param \Swagger\Client\Model\DimensionsRange $living_room_surface living_room_surface
     *
     * @return $this
     */
    public function setLivingRoomSurface($living_room_surface)
    {
        $this->container['living_room_surface'] = $living_room_surface;

        return $this;
    }

    /**
     * Gets location_places
     *
     * @return \Swagger\Client\Model\LocationPlace[]
     */
    public function getLocationPlaces()
    {
        return $this->container['location_places'];
    }

    /**
     * Sets location_places
     *
     * @param \Swagger\Client\Model\LocationPlace[] $location_places location_places
     *
     * @return $this
     */
    public function setLocationPlaces($location_places)
    {
        $this->container['location_places'] = $location_places;

        return $this;
    }

    /**
     * Gets maintenance_inside
     *
     * @return \Swagger\Client\Model\Maintenance
     */
    public function getMaintenanceInside()
    {
        return $this->container['maintenance_inside'];
    }

    /**
     * Sets maintenance_inside
     *
     * @param \Swagger\Client\Model\Maintenance $maintenance_inside maintenance_inside
     *
     * @return $this
     */
    public function setMaintenanceInside($maintenance_inside)
    {
        $this->container['maintenance_inside'] = $maintenance_inside;

        return $this;
    }

    /**
     * Gets maintenance_outside
     *
     * @return \Swagger\Client\Model\Maintenance
     */
    public function getMaintenanceOutside()
    {
        return $this->container['maintenance_outside'];
    }

    /**
     * Sets maintenance_outside
     *
     * @param \Swagger\Client\Model\Maintenance $maintenance_outside maintenance_outside
     *
     * @return $this
     */
    public function setMaintenanceOutside($maintenance_outside)
    {
        $this->container['maintenance_outside'] = $maintenance_outside;

        return $this;
    }

    /**
     * Gets open_house_for_underlaying_objects_too
     *
     * @return bool
     */
    public function getOpenHouseForUnderlayingObjectsToo()
    {
        return $this->container['open_house_for_underlaying_objects_too'];
    }

    /**
     * Sets open_house_for_underlaying_objects_too
     *
     * @param bool $open_house_for_underlaying_objects_too open_house_for_underlaying_objects_too
     *
     * @return $this
     */
    public function setOpenHouseForUnderlayingObjectsToo($open_house_for_underlaying_objects_too)
    {
        $this->container['open_house_for_underlaying_objects_too'] = $open_house_for_underlaying_objects_too;

        return $this;
    }

    /**
     * Gets other_inside_spaces
     *
     * @return \Swagger\Client\Model\DimensionsRange
     */
    public function getOtherInsideSpaces()
    {
        return $this->container['other_inside_spaces'];
    }

    /**
     * Sets other_inside_spaces
     *
     * @param \Swagger\Client\Model\DimensionsRange $other_inside_spaces other_inside_spaces
     *
     * @return $this
     */
    public function setOtherInsideSpaces($other_inside_spaces)
    {
        $this->container['other_inside_spaces'] = $other_inside_spaces;

        return $this;
    }

    /**
     * Gets parcel_surface
     *
     * @return \Swagger\Client\Model\DimensionsRange
     */
    public function getParcelSurface()
    {
        return $this->container['parcel_surface'];
    }

    /**
     * Sets parcel_surface
     *
     * @param \Swagger\Client\Model\DimensionsRange $parcel_surface parcel_surface
     *
     * @return $this
     */
    public function setParcelSurface($parcel_surface)
    {
        $this->container['parcel_surface'] = $parcel_surface;

        return $this;
    }

    /**
     * Gets parking_facilities
     *
     * @return \Swagger\Client\Model\TypeOfParkingFacility[]
     */
    public function getParkingFacilities()
    {
        return $this->container['parking_facilities'];
    }

    /**
     * Sets parking_facilities
     *
     * @param \Swagger\Client\Model\TypeOfParkingFacility[] $parking_facilities parking_facilities
     *
     * @return $this
     */
    public function setParkingFacilities($parking_facilities)
    {
        $this->container['parking_facilities'] = $parking_facilities;

        return $this;
    }

    /**
     * Gets public_reference
     *
     * @return string
     */
    public function getPublicReference()
    {
        return $this->container['public_reference'];
    }

    /**
     * Sets public_reference
     *
     * @param string $public_reference public_reference
     *
     * @return $this
     */
    public function setPublicReference($public_reference)
    {
        $this->container['public_reference'] = $public_reference;

        return $this;
    }

    /**
     * Gets sale_start
     *
     * @return \DateTime
     */
    public function getSaleStart()
    {
        return $this->container['sale_start'];
    }

    /**
     * Sets sale_start
     *
     * @param \DateTime $sale_start sale_start
     *
     * @return $this
     */
    public function setSaleStart($sale_start)
    {
        $this->container['sale_start'] = $sale_start;

        return $this;
    }

    /**
     * Gets sale_start_date_parts
     *
     * @return bool
     */
    public function getSaleStartDateParts()
    {
        return $this->container['sale_start_date_parts'];
    }

    /**
     * Sets sale_start_date_parts
     *
     * @param bool $sale_start_date_parts sale_start_date_parts
     *
     * @return $this
     */
    public function setSaleStartDateParts($sale_start_date_parts)
    {
        $this->container['sale_start_date_parts'] = $sale_start_date_parts;

        return $this;
    }

    /**
     * Gets hide_sale_start_date
     *
     * @return bool
     */
    public function getHideSaleStartDate()
    {
        return $this->container['hide_sale_start_date'];
    }

    /**
     * Sets hide_sale_start_date
     *
     * @param bool $hide_sale_start_date hide_sale_start_date
     *
     * @return $this
     */
    public function setHideSaleStartDate($hide_sale_start_date)
    {
        $this->container['hide_sale_start_date'] = $hide_sale_start_date;

        return $this;
    }

    /**
     * Gets sale_start_text
     *
     * @return \Swagger\Client\Model\TranslatedText[]
     */
    public function getSaleStartText()
    {
        return $this->container['sale_start_text'];
    }

    /**
     * Sets sale_start_text
     *
     * @param \Swagger\Client\Model\TranslatedText[] $sale_start_text sale_start_text
     *
     * @return $this
     */
    public function setSaleStartText($sale_start_text)
    {
        $this->container['sale_start_text'] = $sale_start_text;

        return $this;
    }

    /**
     * Gets usage_area
     *
     * @return \Swagger\Client\Model\DimensionsRange
     */
    public function getUsageArea()
    {
        return $this->container['usage_area'];
    }

    /**
     * Sets usage_area
     *
     * @param \Swagger\Client\Model\DimensionsRange $usage_area usage_area
     *
     * @return $this
     */
    public function setUsageArea($usage_area)
    {
        $this->container['usage_area'] = $usage_area;

        return $this;
    }

    /**
     * Gets year_of_construction
     *
     * @return \Swagger\Client\Model\YearOfConstruction
     */
    public function getYearOfConstruction()
    {
        return $this->container['year_of_construction'];
    }

    /**
     * Sets year_of_construction
     *
     * @param \Swagger\Client\Model\YearOfConstruction $year_of_construction year_of_construction
     *
     * @return $this
     */
    public function setYearOfConstruction($year_of_construction)
    {
        $this->container['year_of_construction'] = $year_of_construction;

        return $this;
    }

    /**
     * Gets linked_employees
     *
     * @return \Swagger\Client\Model\LinkedEmployee[]
     */
    public function getLinkedEmployees()
    {
        return $this->container['linked_employees'];
    }

    /**
     * Sets linked_employees
     *
     * @param \Swagger\Client\Model\LinkedEmployee[] $linked_employees linked_employees
     *
     * @return $this
     */
    public function setLinkedEmployees($linked_employees)
    {
        $this->container['linked_employees'] = $linked_employees;

        return $this;
    }

    /**
     * Gets linked_office
     *
     * @return \Swagger\Client\Model\LinkedOffice
     */
    public function getLinkedOffice()
    {
        return $this->container['linked_office'];
    }

    /**
     * Sets linked_office
     *
     * @param \Swagger\Client\Model\LinkedOffice $linked_office linked_office
     *
     * @return $this
     */
    public function setLinkedOffice($linked_office)
    {
        $this->container['linked_office'] = $linked_office;

        return $this;
    }

    /**
     * Gets linked_folder_tree
     *
     * @return \Swagger\Client\Model\LinkedFolderTree
     */
    public function getLinkedFolderTree()
    {
        return $this->container['linked_folder_tree'];
    }

    /**
     * Sets linked_folder_tree
     *
     * @param \Swagger\Client\Model\LinkedFolderTree $linked_folder_tree linked_folder_tree
     *
     * @return $this
     */
    public function setLinkedFolderTree($linked_folder_tree)
    {
        $this->container['linked_folder_tree'] = $linked_folder_tree;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


