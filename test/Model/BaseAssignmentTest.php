<?php
/**
 * BaseAssignmentTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web API Swagger specification Kolibri24 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.1.778.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.17
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * BaseAssignmentTest Class Doc Comment
 *
 * @category    Class
 * @description BaseAssignment
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BaseAssignmentTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "BaseAssignment"
     */
    public function testBaseAssignment()
    {
    }

    /**
     * Test attribute "acceptance_details"
     */
    public function testPropertyAcceptanceDetails()
    {
    }

    /**
     * Test attribute "advertisement_text"
     */
    public function testPropertyAdvertisementText()
    {
    }

    /**
     * Test attribute "assignment_phase"
     */
    public function testPropertyAssignmentPhase()
    {
    }

    /**
     * Test attribute "availability_status"
     */
    public function testPropertyAvailabilityStatus()
    {
    }

    /**
     * Test attribute "balcony_text"
     */
    public function testPropertyBalconyText()
    {
    }

    /**
     * Test attribute "brochures"
     */
    public function testPropertyBrochures()
    {
    }

    /**
     * Test attribute "business_partners"
     */
    public function testPropertyBusinessPartners()
    {
    }

    /**
     * Test attribute "calculate_price_per_m2"
     */
    public function testPropertyCalculatePricePerM2()
    {
    }

    /**
     * Test attribute "changes_number_of_inside_parking_lots"
     */
    public function testPropertyChangesNumberOfInsideParkingLots()
    {
    }

    /**
     * Test attribute "changes_number_of_parking_lots"
     */
    public function testPropertyChangesNumberOfParkingLots()
    {
    }

    /**
     * Test attribute "changes_surface"
     */
    public function testPropertyChangesSurface()
    {
    }

    /**
     * Test attribute "confidentiality_level"
     */
    public function testPropertyConfidentialityLevel()
    {
    }

    /**
     * Test attribute "contract_reason"
     */
    public function testPropertyContractReason()
    {
    }

    /**
     * Test attribute "contract_source"
     */
    public function testPropertyContractSource()
    {
    }

    /**
     * Test attribute "end_date_publication"
     */
    public function testPropertyEndDatePublication()
    {
    }

    /**
     * Test attribute "environment_text"
     */
    public function testPropertyEnvironmentText()
    {
    }

    /**
     * Test attribute "first_floor_text"
     */
    public function testPropertyFirstFloorText()
    {
    }

    /**
     * Test attribute "for_rent"
     */
    public function testPropertyForRent()
    {
    }

    /**
     * Test attribute "for_sale"
     */
    public function testPropertyForSale()
    {
    }

    /**
     * Test attribute "gardens_text"
     */
    public function testPropertyGardensText()
    {
    }

    /**
     * Test attribute "ground_floor_text"
     */
    public function testPropertyGroundFloorText()
    {
    }

    /**
     * Test attribute "hide_on_funda_until"
     */
    public function testPropertyHideOnFundaUntil()
    {
    }

    /**
     * Test attribute "funda_postal_code"
     */
    public function testPropertyFundaPostalCode()
    {
    }

    /**
     * Test attribute "funda_street"
     */
    public function testPropertyFundaStreet()
    {
    }

    /**
     * Test attribute "funda_locality"
     */
    public function testPropertyFundaLocality()
    {
    }

    /**
     * Test attribute "is_temporarily_removed_from_funda"
     */
    public function testPropertyIsTemporarilyRemovedFromFunda()
    {
    }

    /**
     * Test attribute "hide_price"
     */
    public function testPropertyHidePrice()
    {
    }

    /**
     * Test attribute "import_details"
     */
    public function testPropertyImportDetails()
    {
    }

    /**
     * Test attribute "internal_memo"
     */
    public function testPropertyInternalMemo()
    {
    }

    /**
     * Test attribute "is_acquisition_assignment"
     */
    public function testPropertyIsAcquisitionAssignment()
    {
    }

    /**
     * Test attribute "is_cleared"
     */
    public function testPropertyIsCleared()
    {
    }

    /**
     * Test attribute "is_confidential"
     */
    public function testPropertyIsConfidential()
    {
    }

    /**
     * Test attribute "is_private"
     */
    public function testPropertyIsPrivate()
    {
    }

    /**
     * Test attribute "is_production_rights"
     */
    public function testPropertyIsProductionRights()
    {
    }

    /**
     * Test attribute "is_self_interest"
     */
    public function testPropertyIsSelfInterest()
    {
    }

    /**
     * Test attribute "is_special"
     */
    public function testPropertyIsSpecial()
    {
    }

    /**
     * Test attribute "is_topper"
     */
    public function testPropertyIsTopper()
    {
    }

    /**
     * Test attribute "is_transaction_data_confidential"
     */
    public function testPropertyIsTransactionDataConfidential()
    {
    }

    /**
     * Test attribute "key_note"
     */
    public function testPropertyKeyNote()
    {
    }

    /**
     * Test attribute "key_nr"
     */
    public function testPropertyKeyNr()
    {
    }

    /**
     * Test attribute "linked_cadastres"
     */
    public function testPropertyLinkedCadastres()
    {
    }

    /**
     * Test attribute "linked_company_listings"
     */
    public function testPropertyLinkedCompanyListings()
    {
    }

    /**
     * Test attribute "linked_applicants"
     */
    public function testPropertyLinkedApplicants()
    {
    }

    /**
     * Test attribute "linked_notaries"
     */
    public function testPropertyLinkedNotaries()
    {
    }

    /**
     * Test attribute "linked_property_managers"
     */
    public function testPropertyLinkedPropertyManagers()
    {
    }

    /**
     * Test attribute "linked_vendors"
     */
    public function testPropertyLinkedVendors()
    {
    }

    /**
     * Test attribute "linked_financial_advisors"
     */
    public function testPropertyLinkedFinancialAdvisors()
    {
    }

    /**
     * Test attribute "linked_appraisers"
     */
    public function testPropertyLinkedAppraisers()
    {
    }

    /**
     * Test attribute "linked_clients"
     */
    public function testPropertyLinkedClients()
    {
    }

    /**
     * Test attribute "linked_offering_agencies"
     */
    public function testPropertyLinkedOfferingAgencies()
    {
    }

    /**
     * Test attribute "linked_purchasing_brokers"
     */
    public function testPropertyLinkedPurchasingBrokers()
    {
    }

    /**
     * Test attribute "linked_inspectors"
     */
    public function testPropertyLinkedInspectors()
    {
    }

    /**
     * Test attribute "linked_stylists"
     */
    public function testPropertyLinkedStylists()
    {
    }

    /**
     * Test attribute "linked_photographers"
     */
    public function testPropertyLinkedPhotographers()
    {
    }

    /**
     * Test attribute "linked_potentials"
     */
    public function testPropertyLinkedPotentials()
    {
    }

    /**
     * Test attribute "linked_occupants"
     */
    public function testPropertyLinkedOccupants()
    {
    }

    /**
     * Test attribute "linked_people_who_opted"
     */
    public function testPropertyLinkedPeopleWhoOpted()
    {
    }

    /**
     * Test attribute "linked_project_developers"
     */
    public function testPropertyLinkedProjectDevelopers()
    {
    }

    /**
     * Test attribute "linked_tenant_representation_brokers"
     */
    public function testPropertyLinkedTenantRepresentationBrokers()
    {
    }

    /**
     * Test attribute "linked_rental_agents"
     */
    public function testPropertyLinkedRentalAgents()
    {
    }

    /**
     * Test attribute "linked_sales_brokers"
     */
    public function testPropertyLinkedSalesBrokers()
    {
    }

    /**
     * Test attribute "linked_contact_persons"
     */
    public function testPropertyLinkedContactPersons()
    {
    }

    /**
     * Test attribute "list_of_business"
     */
    public function testPropertyListOfBusiness()
    {
    }

    /**
     * Test attribute "lot_description_text"
     */
    public function testPropertyLotDescriptionText()
    {
    }

    /**
     * Test attribute "mandate_date_time"
     */
    public function testPropertyMandateDateTime()
    {
    }

    /**
     * Test attribute "maps"
     */
    public function testPropertyMaps()
    {
    }

    /**
     * Test attribute "office_id"
     */
    public function testPropertyOfficeId()
    {
    }

    /**
     * Test attribute "open_house"
     */
    public function testPropertyOpenHouse()
    {
    }

    /**
     * Test attribute "other_contract_source"
     */
    public function testPropertyOtherContractSource()
    {
    }

    /**
     * Test attribute "other_floors_text"
     */
    public function testPropertyOtherFloorsText()
    {
    }

    /**
     * Test attribute "parking_text"
     */
    public function testPropertyParkingText()
    {
    }

    /**
     * Test attribute "parties_description_text"
     */
    public function testPropertyPartiesDescriptionText()
    {
    }

    /**
     * Test attribute "peculiarities_text"
     */
    public function testPropertyPeculiaritiesText()
    {
    }

    /**
     * Test attribute "photos"
     */
    public function testPropertyPhotos()
    {
    }

    /**
     * Test attribute "price_description_text"
     */
    public function testPropertyPriceDescriptionText()
    {
    }

    /**
     * Test attribute "products_to_pass_on"
     */
    public function testPropertyProductsToPassOn()
    {
    }

    /**
     * Test attribute "registration_conditions"
     */
    public function testPropertyRegistrationConditions()
    {
    }

    /**
     * Test attribute "rent_offer"
     */
    public function testPropertyRentOffer()
    {
    }

    /**
     * Test attribute "sale_offer"
     */
    public function testPropertySaleOffer()
    {
    }

    /**
     * Test attribute "second_floor_text"
     */
    public function testPropertySecondFloorText()
    {
    }

    /**
     * Test attribute "special_text"
     */
    public function testPropertySpecialText()
    {
    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {
    }

    /**
     * Test attribute "third_party_media"
     */
    public function testPropertyThirdPartyMedia()
    {
    }

    /**
     * Test attribute "title_text"
     */
    public function testPropertyTitleText()
    {
    }

    /**
     * Test attribute "videos"
     */
    public function testPropertyVideos()
    {
    }

    /**
     * Test attribute "waiting_time"
     */
    public function testPropertyWaitingTime()
    {
    }

    /**
     * Test attribute "web_address"
     */
    public function testPropertyWebAddress()
    {
    }

    /**
     * Test attribute "withdrawn_date_time"
     */
    public function testPropertyWithdrawnDateTime()
    {
    }

    /**
     * Test attribute "withdraw_reason"
     */
    public function testPropertyWithdrawReason()
    {
    }
}
